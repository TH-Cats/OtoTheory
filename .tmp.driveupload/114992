{"version":3,"sources":["turbopack:///[project]/node_modules/tonal/dist/index.mjs","turbopack:///[project]/node_modules/@tonaljs/collection/dist/index.mjs","turbopack:///[project]/node_modules/@tonaljs/duration-value/dist/index.mjs","turbopack:///[project]/node_modules/@tonaljs/pitch/dist/index.mjs","turbopack:///[project]/node_modules/@tonaljs/rhythm-pattern/dist/index.mjs","turbopack:///[project]/node_modules/@tonaljs/time-signature/dist/index.mjs","turbopack:///[project]/node_modules/@tonaljs/array/dist/index.mjs","turbopack:///[project]/node_modules/@tonaljs/midi/dist/index.mjs","turbopack:///[project]/node_modules/@tonaljs/voice-leading/dist/index.mjs","turbopack:///[project]/node_modules/@tonaljs/range/dist/index.mjs","turbopack:///[project]/node_modules/@tonaljs/abc-notation/dist/index.mjs","turbopack:///[project]/node_modules/@tonaljs/voicing-dictionary/dist/index.mjs","turbopack:///[project]/node_modules/@tonaljs/chord-detect/dist/index.mjs","turbopack:///[project]/node_modules/@tonaljs/roman-numeral/dist/index.mjs","turbopack:///[project]/node_modules/@tonaljs/key/dist/index.mjs","turbopack:///[project]/node_modules/@tonaljs/pcset/dist/index.mjs","turbopack:///[project]/node_modules/@tonaljs/progression/dist/index.mjs","turbopack:///[project]/node_modules/@tonaljs/interval/dist/index.mjs","turbopack:///[project]/node_modules/@tonaljs/chord-type/dist/index.mjs","turbopack:///[project]/node_modules/@tonaljs/note/dist/index.mjs","turbopack:///[project]/node_modules/@tonaljs/mode/dist/index.mjs","turbopack:///[project]/node_modules/@tonaljs/scale-type/dist/index.mjs","turbopack:///[project]/node_modules/@tonaljs/core/dist/index.mjs","turbopack:///[project]/node_modules/@tonaljs/pitch-interval/dist/index.mjs","turbopack:///[project]/node_modules/@tonaljs/voicing/dist/index.mjs","turbopack:///[project]/node_modules/@tonaljs/pitch-note/dist/index.mjs","turbopack:///[project]/node_modules/@tonaljs/pitch-distance/dist/index.mjs","turbopack:///[project]/node_modules/@tonaljs/chord/dist/index.mjs","turbopack:///[project]/node_modules/@tonaljs/scale/dist/index.mjs","turbopack:///[project]/src/lib/music-theory.ts","turbopack:///[project]/src/components/Fretboard.tsx","turbopack:///[project]/src/lib/scaleCatalog.ts","turbopack:///[project]/src/lib/scales.ts","turbopack:///[project]/node_modules/zustand/esm/react.mjs","turbopack:///[project]/node_modules/zustand/esm/vanilla.mjs","turbopack:///[project]/src/lib/music/constants.ts","turbopack:///[project]/src/lib/theory.ts","turbopack:///[project]/src/lib/analysis/scoreScales.ts","turbopack:///[project]/src/lib/roman.ts","turbopack:///[project]/src/lib/theory/diatonic.ts","turbopack:///[project]/src/store/analysisStore.ts","turbopack:///[project]/src/lib/capo/recommend.ts","turbopack:///[project]/src/components/DiatonicCapoTable.tsx","turbopack:///[project]/src/lib/theory/capo.ts","turbopack:///[project]/src/hooks/useRovingTabs.ts","turbopack:///[project]/src/lib/music/chordParser.ts"],"sourcesContent":["// index.ts\nimport * as AbcNotation from \"@tonaljs/abc-notation\";\nimport * as Array from \"@tonaljs/array\";\nimport * as Chord from \"@tonaljs/chord\";\nimport * as ChordType from \"@tonaljs/chord-type\";\nimport * as Collection from \"@tonaljs/collection\";\nimport * as DurationValue from \"@tonaljs/duration-value\";\nimport * as Interval from \"@tonaljs/interval\";\nimport * as Key from \"@tonaljs/key\";\nimport * as Midi from \"@tonaljs/midi\";\nimport * as Mode from \"@tonaljs/mode\";\nimport * as Note from \"@tonaljs/note\";\nimport * as Pcset from \"@tonaljs/pcset\";\nimport * as Progression from \"@tonaljs/progression\";\nimport * as Range from \"@tonaljs/range\";\nimport * as RhythmPattern from \"@tonaljs/rhythm-pattern\";\nimport * as RomanNumeral from \"@tonaljs/roman-numeral\";\nimport * as Scale from \"@tonaljs/scale\";\nimport * as ScaleType from \"@tonaljs/scale-type\";\nimport * as TimeSignature from \"@tonaljs/time-signature\";\nimport * as VoiceLeading from \"@tonaljs/voice-leading\";\nimport * as Voicing from \"@tonaljs/voicing\";\nimport * as VoicingDictionary from \"@tonaljs/voicing-dictionary\";\nexport * from \"@tonaljs/core\";\nimport * as Core from \"@tonaljs/core\";\nvar Tonal = Core;\nvar PcSet = Pcset;\nvar ChordDictionary = ChordType;\nvar ScaleDictionary = ScaleType;\nexport {\n  AbcNotation,\n  Array,\n  Chord,\n  ChordDictionary,\n  ChordType,\n  Collection,\n  Core,\n  DurationValue,\n  Interval,\n  Key,\n  Midi,\n  Mode,\n  Note,\n  PcSet,\n  Pcset,\n  Progression,\n  Range,\n  RhythmPattern,\n  RomanNumeral,\n  Scale,\n  ScaleDictionary,\n  ScaleType,\n  TimeSignature,\n  Tonal,\n  VoiceLeading,\n  Voicing,\n  VoicingDictionary\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nfunction ascR(b, n) {\n  const a = [];\n  for (; n--; a[n] = n + b) ;\n  return a;\n}\nfunction descR(b, n) {\n  const a = [];\n  for (; n--; a[n] = b - n) ;\n  return a;\n}\nfunction range(from, to) {\n  return from < to ? ascR(from, to - from + 1) : descR(from, from - to + 1);\n}\nfunction rotate(times, arr) {\n  const len = arr.length;\n  const n = (times % len + len) % len;\n  return arr.slice(n, len).concat(arr.slice(0, n));\n}\nfunction compact(arr) {\n  return arr.filter((n) => n === 0 || n);\n}\nfunction shuffle(arr, rnd = Math.random) {\n  let i;\n  let t;\n  let m = arr.length;\n  while (m) {\n    i = Math.floor(rnd() * m--);\n    t = arr[m];\n    arr[m] = arr[i];\n    arr[i] = t;\n  }\n  return arr;\n}\nfunction permutations(arr) {\n  if (arr.length === 0) {\n    return [[]];\n  }\n  return permutations(arr.slice(1)).reduce((acc, perm) => {\n    return acc.concat(\n      arr.map((e, pos) => {\n        const newPerm = perm.slice();\n        newPerm.splice(pos, 0, arr[0]);\n        return newPerm;\n      })\n    );\n  }, []);\n}\nvar collection_default = {\n  compact,\n  permutations,\n  range,\n  rotate,\n  shuffle\n};\nexport {\n  compact,\n  collection_default as default,\n  permutations,\n  range,\n  rotate,\n  shuffle\n};\n//# sourceMappingURL=index.mjs.map","// data.ts\nvar DATA = [\n  [\n    0.125,\n    \"dl\",\n    [\"large\", \"duplex longa\", \"maxima\", \"octuple\", \"octuple whole\"]\n  ],\n  [0.25, \"l\", [\"long\", \"longa\"]],\n  [0.5, \"d\", [\"double whole\", \"double\", \"breve\"]],\n  [1, \"w\", [\"whole\", \"semibreve\"]],\n  [2, \"h\", [\"half\", \"minim\"]],\n  [4, \"q\", [\"quarter\", \"crotchet\"]],\n  [8, \"e\", [\"eighth\", \"quaver\"]],\n  [16, \"s\", [\"sixteenth\", \"semiquaver\"]],\n  [32, \"t\", [\"thirty-second\", \"demisemiquaver\"]],\n  [64, \"sf\", [\"sixty-fourth\", \"hemidemisemiquaver\"]],\n  [128, \"h\", [\"hundred twenty-eighth\"]],\n  [256, \"th\", [\"two hundred fifty-sixth\"]]\n];\nvar data_default = DATA;\n\n// index.ts\nvar VALUES = [];\ndata_default.forEach(\n  ([denominator, shorthand, names2]) => add(denominator, shorthand, names2)\n);\nvar NoDuration = {\n  empty: true,\n  name: \"\",\n  value: 0,\n  fraction: [0, 0],\n  shorthand: \"\",\n  dots: \"\",\n  names: []\n};\nfunction names() {\n  return VALUES.reduce((names2, duration) => {\n    duration.names.forEach((name) => names2.push(name));\n    return names2;\n  }, []);\n}\nfunction shorthands() {\n  return VALUES.map((dur) => dur.shorthand);\n}\nvar REGEX = /^([^.]+)(\\.*)$/;\nfunction get(name) {\n  const [_, simple, dots] = REGEX.exec(name) || [];\n  const base = VALUES.find(\n    (dur) => dur.shorthand === simple || dur.names.includes(simple)\n  );\n  if (!base) {\n    return NoDuration;\n  }\n  const fraction2 = calcDots(base.fraction, dots.length);\n  const value2 = fraction2[0] / fraction2[1];\n  return { ...base, name, dots, value: value2, fraction: fraction2 };\n}\nvar value = (name) => get(name).value;\nvar fraction = (name) => get(name).fraction;\nvar duration_value_default = { names, shorthands, get, value, fraction };\nfunction add(denominator, shorthand, names2) {\n  VALUES.push({\n    empty: false,\n    dots: \"\",\n    name: \"\",\n    value: 1 / denominator,\n    fraction: denominator < 1 ? [1 / denominator, 1] : [1, denominator],\n    shorthand,\n    names: names2\n  });\n}\nfunction calcDots(fraction2, dots) {\n  const pow = Math.pow(2, dots);\n  let numerator = fraction2[0] * pow;\n  let denominator = fraction2[1] * pow;\n  const base = numerator;\n  for (let i = 0; i < dots; i++) {\n    numerator += base / Math.pow(2, i + 1);\n  }\n  while (numerator % 2 === 0 && denominator % 2 === 0) {\n    numerator /= 2;\n    denominator /= 2;\n  }\n  return [numerator, denominator];\n}\nexport {\n  duration_value_default as default,\n  fraction,\n  get,\n  names,\n  shorthands,\n  value\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nfunction isNamedPitch(src) {\n  return src !== null && typeof src === \"object\" && \"name\" in src && typeof src.name === \"string\" ? true : false;\n}\nvar SIZES = [0, 2, 4, 5, 7, 9, 11];\nvar chroma = ({ step, alt }) => (SIZES[step] + alt + 120) % 12;\nvar height = ({ step, alt, oct, dir = 1 }) => dir * (SIZES[step] + alt + 12 * (oct === void 0 ? -100 : oct));\nvar midi = (pitch2) => {\n  const h = height(pitch2);\n  return pitch2.oct !== void 0 && h >= -12 && h <= 115 ? h + 12 : null;\n};\nfunction isPitch(pitch2) {\n  return pitch2 !== null && typeof pitch2 === \"object\" && \"step\" in pitch2 && typeof pitch2.step === \"number\" && \"alt\" in pitch2 && typeof pitch2.alt === \"number\" && !isNaN(pitch2.step) && !isNaN(pitch2.alt) ? true : false;\n}\nvar FIFTHS = [0, 2, 4, -1, 1, 3, 5];\nvar STEPS_TO_OCTS = FIFTHS.map(\n  (fifths) => Math.floor(fifths * 7 / 12)\n);\nfunction coordinates(pitch2) {\n  const { step, alt, oct, dir = 1 } = pitch2;\n  const f = FIFTHS[step] + 7 * alt;\n  if (oct === void 0) {\n    return [dir * f];\n  }\n  const o = oct - STEPS_TO_OCTS[step] - 4 * alt;\n  return [dir * f, dir * o];\n}\nvar FIFTHS_TO_STEPS = [3, 0, 4, 1, 5, 2, 6];\nfunction pitch(coord) {\n  const [f, o, dir] = coord;\n  const step = FIFTHS_TO_STEPS[unaltered(f)];\n  const alt = Math.floor((f + 1) / 7);\n  if (o === void 0) {\n    return { step, alt, dir };\n  }\n  const oct = o + 4 * alt + STEPS_TO_OCTS[step];\n  return { step, alt, oct, dir };\n}\nfunction unaltered(f) {\n  const i = (f + 1) % 7;\n  return i < 0 ? 7 + i : i;\n}\nexport {\n  chroma,\n  coordinates,\n  height,\n  isNamedPitch,\n  isPitch,\n  midi,\n  pitch\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nfunction binary(...numbers) {\n  return numbers.reduce((pattern, number) => {\n    number.toString(2).split(\"\").forEach((digit) => {\n      pattern.push(parseInt(digit));\n    });\n    return pattern;\n  }, []);\n}\nfunction hex(hexNumber) {\n  const pattern = [];\n  for (let i = 0; i < hexNumber.length; i++) {\n    const digit = parseInt(\"0x\" + hexNumber[i]);\n    const binary2 = isNaN(digit) ? \"0000\" : digit.toString(2).padStart(4, \"0\");\n    binary2.split(\"\").forEach((digit2) => {\n      pattern.push(digit2 === \"1\" ? 1 : 0);\n    });\n  }\n  return pattern;\n}\nfunction onsets(...numbers) {\n  return numbers.reduce((pattern, number) => {\n    pattern.push(1);\n    for (let i = 0; i < number; i++) {\n      pattern.push(0);\n    }\n    return pattern;\n  }, []);\n}\nfunction random(length, probability2 = 0.5, rnd = Math.random) {\n  const pattern = [];\n  for (let i = 0; i < length; i++) {\n    pattern.push(rnd() >= probability2 ? 1 : 0);\n  }\n  return pattern;\n}\nfunction probability(probabilities, rnd = Math.random) {\n  return probabilities.map((probability2) => rnd() <= probability2 ? 1 : 0);\n}\nfunction rotate(pattern, rotations) {\n  const len = pattern.length;\n  const rotated = [];\n  for (let i = 0; i < len; i++) {\n    const pos = ((i - rotations) % len + len) % len;\n    rotated[i] = pattern[pos];\n  }\n  return rotated;\n}\nfunction euclid(steps, beats) {\n  const pattern = [];\n  let d = -1;\n  for (let i = 0; i < steps; i++) {\n    const v = Math.floor(i * (beats / steps));\n    pattern[i] = v !== d ? 1 : 0;\n    d = v;\n  }\n  return pattern;\n}\nexport {\n  binary,\n  euclid,\n  hex,\n  onsets,\n  probability,\n  random,\n  rotate\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nvar NONE = {\n  empty: true,\n  name: \"\",\n  upper: void 0,\n  lower: void 0,\n  type: void 0,\n  additive: []\n};\nvar NAMES = [\"4/4\", \"3/4\", \"2/4\", \"2/2\", \"12/8\", \"9/8\", \"6/8\", \"3/8\"];\nfunction names() {\n  return NAMES.slice();\n}\nvar REGEX = /^(\\d*\\d(?:\\+\\d)*)\\/(\\d+)$/;\nvar CACHE = /* @__PURE__ */ new Map();\nfunction get(literal) {\n  const stringifiedLiteral = JSON.stringify(literal);\n  const cached = CACHE.get(stringifiedLiteral);\n  if (cached) {\n    return cached;\n  }\n  const ts = build(parse(literal));\n  CACHE.set(stringifiedLiteral, ts);\n  return ts;\n}\nfunction parse(literal) {\n  if (typeof literal === \"string\") {\n    const [_, up2, low] = REGEX.exec(literal) || [];\n    return parse([up2, low]);\n  }\n  const [up, down] = literal;\n  const denominator = +down;\n  if (typeof up === \"number\") {\n    return [up, denominator];\n  }\n  const list = up.split(\"+\").map((n) => +n);\n  return list.length === 1 ? [list[0], denominator] : [list, denominator];\n}\nvar time_signature_default = { names, parse, get };\nvar isPowerOfTwo = (x) => Math.log(x) / Math.log(2) % 1 === 0;\nfunction build([up, down]) {\n  const upper = Array.isArray(up) ? up.reduce((a, b) => a + b, 0) : up;\n  const lower = down;\n  if (upper === 0 || lower === 0) {\n    return NONE;\n  }\n  const name = Array.isArray(up) ? `${up.join(\"+\")}/${down}` : `${up}/${down}`;\n  const additive = Array.isArray(up) ? up : [];\n  const type = lower === 4 || lower === 2 ? \"simple\" : lower === 8 && upper % 3 === 0 ? \"compound\" : isPowerOfTwo(lower) ? \"irregular\" : \"irrational\";\n  return {\n    empty: false,\n    name,\n    type,\n    upper,\n    lower,\n    additive\n  };\n}\nexport {\n  time_signature_default as default,\n  get,\n  names,\n  parse\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { note } from \"@tonaljs/pitch-note\";\nfunction ascR(b, n) {\n  const a = [];\n  for (; n--; a[n] = n + b) ;\n  return a;\n}\nfunction descR(b, n) {\n  const a = [];\n  for (; n--; a[n] = b - n) ;\n  return a;\n}\nfunction range(from, to) {\n  return from < to ? ascR(from, to - from + 1) : descR(from, from - to + 1);\n}\nfunction rotate(times, arr) {\n  const len = arr.length;\n  const n = (times % len + len) % len;\n  return arr.slice(n, len).concat(arr.slice(0, n));\n}\nfunction compact(arr) {\n  return arr.filter((n) => n === 0 || n);\n}\nfunction sortedNoteNames(notes) {\n  const valid = notes.map((n) => note(n)).filter((n) => !n.empty);\n  return valid.sort((a, b) => a.height - b.height).map((n) => n.name);\n}\nfunction sortedUniqNoteNames(arr) {\n  return sortedNoteNames(arr).filter((n, i, a) => i === 0 || n !== a[i - 1]);\n}\nfunction shuffle(arr, rnd = Math.random) {\n  let i;\n  let t;\n  let m = arr.length;\n  while (m) {\n    i = Math.floor(rnd() * m--);\n    t = arr[m];\n    arr[m] = arr[i];\n    arr[i] = t;\n  }\n  return arr;\n}\nfunction permutations(arr) {\n  if (arr.length === 0) {\n    return [[]];\n  }\n  return permutations(arr.slice(1)).reduce((acc, perm) => {\n    return acc.concat(\n      arr.map((e, pos) => {\n        const newPerm = perm.slice();\n        newPerm.splice(pos, 0, arr[0]);\n        return newPerm;\n      })\n    );\n  }, []);\n}\nexport {\n  compact,\n  permutations,\n  range,\n  rotate,\n  shuffle,\n  sortedNoteNames,\n  sortedUniqNoteNames\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { note as props } from \"@tonaljs/pitch-note\";\nfunction isMidi(arg) {\n  return +arg >= 0 && +arg <= 127;\n}\nfunction toMidi(note) {\n  if (isMidi(note)) {\n    return +note;\n  }\n  const n = props(note);\n  return n.empty ? null : n.midi;\n}\nfunction midiToFreq(midi, tuning = 440) {\n  return Math.pow(2, (midi - 69) / 12) * tuning;\n}\nvar L2 = Math.log(2);\nvar L440 = Math.log(440);\nfunction freqToMidi(freq) {\n  const v = 12 * (Math.log(freq) - L440) / L2 + 69;\n  return Math.round(v * 100) / 100;\n}\nvar SHARPS = \"C C# D D# E F F# G G# A A# B\".split(\" \");\nvar FLATS = \"C Db D Eb E F Gb G Ab A Bb B\".split(\" \");\nfunction midiToNoteName(midi, options = {}) {\n  if (isNaN(midi) || midi === -Infinity || midi === Infinity) return \"\";\n  midi = Math.round(midi);\n  const pcs = options.sharps === true ? SHARPS : FLATS;\n  const pc = pcs[midi % 12];\n  if (options.pitchClass) {\n    return pc;\n  }\n  const o = Math.floor(midi / 12) - 1;\n  return pc + o;\n}\nfunction chroma(midi) {\n  return midi % 12;\n}\nfunction pcsetFromChroma(chroma2) {\n  return chroma2.split(\"\").reduce((pcset2, val, index) => {\n    if (index < 12 && val === \"1\") pcset2.push(index);\n    return pcset2;\n  }, []);\n}\nfunction pcsetFromMidi(midi) {\n  return midi.map(chroma).sort((a, b) => a - b).filter((n, i, a) => i === 0 || n !== a[i - 1]);\n}\nfunction pcset(notes) {\n  return Array.isArray(notes) ? pcsetFromMidi(notes) : pcsetFromChroma(notes);\n}\nfunction pcsetNearest(notes) {\n  const set = pcset(notes);\n  return (midi) => {\n    const ch = chroma(midi);\n    for (let i = 0; i < 12; i++) {\n      if (set.includes(ch + i)) return midi + i;\n      if (set.includes(ch - i)) return midi - i;\n    }\n    return void 0;\n  };\n}\nfunction pcsetSteps(notes, tonic) {\n  const set = pcset(notes);\n  const len = set.length;\n  return (step) => {\n    const index = step < 0 ? (len - -step % len) % len : step % len;\n    const octaves = Math.floor(step / len);\n    return set[index] + octaves * 12 + tonic;\n  };\n}\nfunction pcsetDegrees(notes, tonic) {\n  const steps = pcsetSteps(notes, tonic);\n  return (degree) => {\n    if (degree === 0) return void 0;\n    return steps(degree > 0 ? degree - 1 : degree);\n  };\n}\nvar index_default = {\n  chroma,\n  freqToMidi,\n  isMidi,\n  midiToFreq,\n  midiToNoteName,\n  pcsetNearest,\n  pcset,\n  pcsetDegrees,\n  pcsetSteps,\n  toMidi\n};\nexport {\n  chroma,\n  index_default as default,\n  freqToMidi,\n  isMidi,\n  midiToFreq,\n  midiToNoteName,\n  pcset,\n  pcsetDegrees,\n  pcsetNearest,\n  pcsetSteps,\n  toMidi\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport Note from \"@tonaljs/note\";\nvar topNoteDiff = (voicings, lastVoicing) => {\n  if (!lastVoicing || !lastVoicing.length) {\n    return voicings[0];\n  }\n  const topNoteMidi = (voicing) => Note.midi(voicing[voicing.length - 1]) || 0;\n  const diff = (voicing) => Math.abs(topNoteMidi(lastVoicing) - topNoteMidi(voicing));\n  return voicings.sort((a, b) => diff(a) - diff(b))[0];\n};\nvar index_default = {\n  topNoteDiff\n};\nexport {\n  index_default as default,\n  topNoteDiff\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { compact, range } from \"@tonaljs/collection\";\nimport { midiToNoteName, toMidi } from \"@tonaljs/midi\";\nfunction numeric(notes) {\n  const midi = compact(\n    notes.map((note) => typeof note === \"number\" ? note : toMidi(note))\n  );\n  if (!notes.length || midi.length !== notes.length) {\n    return [];\n  }\n  return midi.reduce(\n    (result, note) => {\n      const last = result[result.length - 1];\n      return result.concat(range(last, note).slice(1));\n    },\n    [midi[0]]\n  );\n}\nfunction chromatic(notes, options) {\n  return numeric(notes).map((midi) => midiToNoteName(midi, options));\n}\nvar index_default = { numeric, chromatic };\nexport {\n  chromatic,\n  index_default as default,\n  numeric\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { distance as dist, transpose as tr } from \"@tonaljs/pitch-distance\";\nimport { note } from \"@tonaljs/pitch-note\";\nvar fillStr = (character, times) => Array(times + 1).join(character);\nvar REGEX = /^(_{1,}|=|\\^{1,}|)([abcdefgABCDEFG])([,']*)$/;\nfunction tokenize(str) {\n  const m = REGEX.exec(str);\n  if (!m) {\n    return [\"\", \"\", \"\"];\n  }\n  return [m[1], m[2], m[3]];\n}\nfunction abcToScientificNotation(str) {\n  const [acc, letter, oct] = tokenize(str);\n  if (letter === \"\") {\n    return \"\";\n  }\n  let o = 4;\n  for (let i = 0; i < oct.length; i++) {\n    o += oct.charAt(i) === \",\" ? -1 : 1;\n  }\n  const a = acc[0] === \"_\" ? acc.replace(/_/g, \"b\") : acc[0] === \"^\" ? acc.replace(/\\^/g, \"#\") : \"\";\n  return letter.charCodeAt(0) > 96 ? letter.toUpperCase() + a + (o + 1) : letter + a + o;\n}\nfunction scientificToAbcNotation(str) {\n  const n = note(str);\n  if (n.empty || !n.oct && n.oct !== 0) {\n    return \"\";\n  }\n  const { letter, acc, oct } = n;\n  const a = acc[0] === \"b\" ? acc.replace(/b/g, \"_\") : acc.replace(/#/g, \"^\");\n  const l = oct > 4 ? letter.toLowerCase() : letter;\n  const o = oct === 5 ? \"\" : oct > 4 ? fillStr(\"'\", oct - 5) : fillStr(\",\", 4 - oct);\n  return a + l + o;\n}\nfunction transpose(note2, interval) {\n  return scientificToAbcNotation(tr(abcToScientificNotation(note2), interval));\n}\nfunction distance(from, to) {\n  return dist(abcToScientificNotation(from), abcToScientificNotation(to));\n}\nvar abc_notation_default = {\n  abcToScientificNotation,\n  scientificToAbcNotation,\n  tokenize,\n  transpose,\n  distance\n};\nexport {\n  abcToScientificNotation,\n  abc_notation_default as default,\n  distance,\n  scientificToAbcNotation,\n  tokenize,\n  transpose\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport Chord from \"@tonaljs/chord\";\n\n// data.ts\nvar triads = {\n  M: [\"1P 3M 5P\", \"3M 5P 8P\", \"5P 8P 10M\"],\n  m: [\"1P 3m 5P\", \"3m 5P 8P\", \"5P 8P 10m\"],\n  o: [\"1P 3m 5d\", \"3m 5d 8P\", \"5d 8P 10m\"],\n  aug: [\"1P 3m 5A\", \"3m 5A 8P\", \"5A 8P 10m\"]\n};\nvar lefthand = {\n  m7: [\"3m 5P 7m 9M\", \"7m 9M 10m 12P\"],\n  \"7\": [\"3M 6M 7m 9M\", \"7m 9M 10M 13M\"],\n  \"^7\": [\"3M 5P 7M 9M\", \"7M 9M 10M 12P\"],\n  \"69\": [\"3M 5P 6A 9M\"],\n  m7b5: [\"3m 5d 7m 8P\", \"7m 8P 10m 12d\"],\n  \"7b9\": [\"3M 6m 7m 9m\", \"7m 9m 10M 13m\"],\n  // b9 / b13\n  \"7b13\": [\"3M 6m 7m 9m\", \"7m 9m 10M 13m\"],\n  // b9 / b13\n  o7: [\"1P 3m 5d 6M\", \"5d 6M 8P 10m\"],\n  \"7#11\": [\"7m 9M 11A 13A\"],\n  \"7#9\": [\"3M 7m 9A\"],\n  mM7: [\"3m 5P 7M 9M\", \"7M 9M 10m 12P\"],\n  m6: [\"3m 5P 6M 9M\", \"6M 9M 10m 12P\"]\n};\nvar all = {\n  M: [\"1P 3M 5P\", \"3M 5P 8P\", \"5P 8P 10M\"],\n  m: [\"1P 3m 5P\", \"3m 5P 8P\", \"5P 8P 10m\"],\n  o: [\"1P 3m 5d\", \"3m 5d 8P\", \"5d 8P 10m\"],\n  aug: [\"1P 3m 5A\", \"3m 5A 8P\", \"5A 8P 10m\"],\n  m7: [\"3m 5P 7m 9M\", \"7m 9M 10m 12P\"],\n  \"7\": [\"3M 6M 7m 9M\", \"7m 9M 10M 13M\"],\n  \"^7\": [\"3M 5P 7M 9M\", \"7M 9M 10M 12P\"],\n  \"69\": [\"3M 5P 6A 9M\"],\n  m7b5: [\"3m 5d 7m 8P\", \"7m 8P 10m 12d\"],\n  \"7b9\": [\"3M 6m 7m 9m\", \"7m 9m 10M 13m\"],\n  // b9 / b13\n  \"7b13\": [\"3M 6m 7m 9m\", \"7m 9m 10M 13m\"],\n  // b9 / b13\n  o7: [\"1P 3m 5d 6M\", \"5d 6M 8P 10m\"],\n  \"7#11\": [\"7m 9M 11A 13A\"],\n  \"7#9\": [\"3M 7m 9A\"],\n  mM7: [\"3m 5P 7M 9M\", \"7M 9M 10m 12P\"],\n  m6: [\"3m 5P 6M 9M\", \"6M 9M 10m 12P\"]\n};\n\n// index.ts\nvar defaultDictionary = lefthand;\nfunction lookup(symbol, dictionary = defaultDictionary) {\n  if (dictionary[symbol]) {\n    return dictionary[symbol];\n  }\n  const { aliases } = Chord.get(\"C\" + symbol);\n  const match = Object.keys(dictionary).find((_symbol) => aliases.includes(_symbol)) || \"\";\n  if (match !== void 0) {\n    return dictionary[match];\n  }\n  return void 0;\n}\nvar index_default = {\n  lookup,\n  lefthand,\n  triads,\n  all,\n  defaultDictionary\n};\nexport {\n  all,\n  index_default as default,\n  defaultDictionary,\n  lefthand,\n  lookup,\n  triads\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { all } from \"@tonaljs/chord-type\";\nimport { modes } from \"@tonaljs/pcset\";\nimport { note } from \"@tonaljs/pitch-note\";\nvar namedSet = (notes) => {\n  const pcToName = notes.reduce((record, n) => {\n    const chroma = note(n).chroma;\n    if (chroma !== void 0) {\n      record[chroma] = record[chroma] || note(n).name;\n    }\n    return record;\n  }, {});\n  return (chroma) => pcToName[chroma];\n};\nfunction detect(source, options = {}) {\n  const notes = source.map((n) => note(n).pc).filter((x) => x);\n  if (note.length === 0) {\n    return [];\n  }\n  const found = findMatches(notes, 1, options);\n  return found.filter((chord) => chord.weight).sort((a, b) => b.weight - a.weight).map((chord) => chord.name);\n}\nvar BITMASK = {\n  // 3m 000100000000\n  // 3M 000010000000\n  anyThirds: 384,\n  // 5P 000000010000\n  perfectFifth: 16,\n  // 5d 000000100000\n  // 5A 000000001000\n  nonPerfectFifths: 40,\n  anySeventh: 3\n};\nvar testChromaNumber = (bitmask) => (chromaNumber) => Boolean(chromaNumber & bitmask);\nvar hasAnyThird = testChromaNumber(BITMASK.anyThirds);\nvar hasPerfectFifth = testChromaNumber(BITMASK.perfectFifth);\nvar hasAnySeventh = testChromaNumber(BITMASK.anySeventh);\nvar hasNonPerfectFifth = testChromaNumber(BITMASK.nonPerfectFifths);\nfunction hasAnyThirdAndPerfectFifthAndAnySeventh(chordType) {\n  const chromaNumber = parseInt(chordType.chroma, 2);\n  return hasAnyThird(chromaNumber) && hasPerfectFifth(chromaNumber) && hasAnySeventh(chromaNumber);\n}\nfunction withPerfectFifth(chroma) {\n  const chromaNumber = parseInt(chroma, 2);\n  return hasNonPerfectFifth(chromaNumber) ? chroma : (chromaNumber | 16).toString(2);\n}\nfunction findMatches(notes, weight, options) {\n  const tonic = notes[0];\n  const tonicChroma = note(tonic).chroma;\n  const noteName = namedSet(notes);\n  const allModes = modes(notes, false);\n  const found = [];\n  allModes.forEach((mode, index) => {\n    const modeWithPerfectFifth = options.assumePerfectFifth && withPerfectFifth(mode);\n    const chordTypes = all().filter((chordType) => {\n      if (options.assumePerfectFifth && hasAnyThirdAndPerfectFifthAndAnySeventh(chordType)) {\n        return chordType.chroma === modeWithPerfectFifth;\n      }\n      return chordType.chroma === mode;\n    });\n    chordTypes.forEach((chordType) => {\n      const chordName = chordType.aliases[0];\n      const baseNote = noteName(index);\n      const isInversion = index !== tonicChroma;\n      if (isInversion) {\n        found.push({\n          weight: 0.5 * weight,\n          name: `${baseNote}${chordName}/${tonic}`\n        });\n      } else {\n        found.push({ weight: 1 * weight, name: `${baseNote}${chordName}` });\n      }\n    });\n  });\n  return found;\n}\nvar chord_detect_default = { detect };\nexport {\n  chord_detect_default as default,\n  detect\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { isNamedPitch, isPitch } from \"@tonaljs/pitch\";\nimport { interval } from \"@tonaljs/pitch-interval\";\nimport { accToAlt, altToAcc } from \"@tonaljs/pitch-note\";\nvar NoRomanNumeral = { empty: true, name: \"\", chordType: \"\" };\nvar cache = {};\nfunction get(src) {\n  return typeof src === \"string\" ? cache[src] || (cache[src] = parse(src)) : typeof src === \"number\" ? get(NAMES[src] || \"\") : isPitch(src) ? fromPitch(src) : isNamedPitch(src) ? get(src.name) : NoRomanNumeral;\n}\nvar romanNumeral = get;\nfunction names(major = true) {\n  return (major ? NAMES : NAMES_MINOR).slice();\n}\nfunction fromPitch(pitch) {\n  return get(altToAcc(pitch.alt) + NAMES[pitch.step]);\n}\nvar REGEX = /^(#{1,}|b{1,}|x{1,}|)(IV|I{1,3}|VI{0,2}|iv|i{1,3}|vi{0,2})([^IViv]*)$/;\nfunction tokenize(str) {\n  return REGEX.exec(str) || [\"\", \"\", \"\", \"\"];\n}\nvar ROMANS = \"I II III IV V VI VII\";\nvar NAMES = ROMANS.split(\" \");\nvar NAMES_MINOR = ROMANS.toLowerCase().split(\" \");\nfunction parse(src) {\n  const [name, acc, roman, chordType] = tokenize(src);\n  if (!roman) {\n    return NoRomanNumeral;\n  }\n  const upperRoman = roman.toUpperCase();\n  const step = NAMES.indexOf(upperRoman);\n  const alt = accToAlt(acc);\n  const dir = 1;\n  return {\n    empty: false,\n    name,\n    roman,\n    interval: interval({ step, alt, dir }).name,\n    acc,\n    chordType,\n    alt,\n    step,\n    major: roman === upperRoman,\n    oct: 0,\n    dir\n  };\n}\nvar roman_numeral_default = {\n  names,\n  get,\n  // deprecated\n  romanNumeral\n};\nexport {\n  roman_numeral_default as default,\n  get,\n  names,\n  romanNumeral,\n  tokenize\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { transpose, transposeFifths } from \"@tonaljs/note\";\nimport { accToAlt, altToAcc, note } from \"@tonaljs/pitch-note\";\nimport { get as roman } from \"@tonaljs/roman-numeral\";\nvar Empty = Object.freeze([]);\nvar NoKey = {\n  type: \"major\",\n  tonic: \"\",\n  alteration: 0,\n  keySignature: \"\"\n};\nvar NoKeyScale = {\n  tonic: \"\",\n  grades: Empty,\n  intervals: Empty,\n  scale: Empty,\n  triads: Empty,\n  chords: Empty,\n  chordsHarmonicFunction: Empty,\n  chordScales: Empty,\n  secondaryDominants: Empty,\n  secondaryDominantSupertonics: Empty,\n  substituteDominantsMinorRelative: Empty,\n  substituteDominants: Empty,\n  substituteDominantSupertonics: Empty,\n  secondaryDominantsMinorRelative: Empty\n};\nvar NoMajorKey = {\n  ...NoKey,\n  ...NoKeyScale,\n  type: \"major\",\n  minorRelative: \"\",\n  scale: Empty,\n  substituteDominants: Empty,\n  secondaryDominantSupertonics: Empty,\n  substituteDominantsMinorRelative: Empty\n};\nvar NoMinorKey = {\n  ...NoKey,\n  type: \"minor\",\n  relativeMajor: \"\",\n  natural: NoKeyScale,\n  harmonic: NoKeyScale,\n  melodic: NoKeyScale\n};\nvar mapScaleToType = (scale, list, sep = \"\") => list.map((type, i) => `${scale[i]}${sep}${type}`);\nfunction keyScale(grades, triads, chordTypes, harmonicFunctions, chordScales) {\n  return (tonic) => {\n    const intervals = grades.map((gr) => roman(gr).interval || \"\");\n    const scale = intervals.map((interval) => transpose(tonic, interval));\n    const chords = mapScaleToType(scale, chordTypes);\n    const secondaryDominants = scale.map((note2) => transpose(note2, \"5P\")).map(\n      (note2) => (\n        // A secondary dominant is a V chord which:\n        // 1. is not diatonic to the key,\n        // 2. it must have a diatonic root.\n        scale.includes(note2) && !chords.includes(note2 + \"7\") ? note2 + \"7\" : \"\"\n      )\n    );\n    const secondaryDominantSupertonics = supertonics(\n      secondaryDominants,\n      triads\n    );\n    const substituteDominants = secondaryDominants.map((chord) => {\n      if (!chord) return \"\";\n      const domRoot = chord.slice(0, -1);\n      const subRoot = transpose(domRoot, \"5d\");\n      return subRoot + \"7\";\n    });\n    const substituteDominantSupertonics = supertonics(\n      substituteDominants,\n      triads\n    );\n    return {\n      tonic,\n      grades,\n      intervals,\n      scale,\n      triads: mapScaleToType(scale, triads),\n      chords,\n      chordsHarmonicFunction: harmonicFunctions.slice(),\n      chordScales: mapScaleToType(scale, chordScales, \" \"),\n      secondaryDominants,\n      secondaryDominantSupertonics,\n      substituteDominants,\n      substituteDominantSupertonics,\n      // @deprecated use secondaryDominantsSupertonic\n      secondaryDominantsMinorRelative: secondaryDominantSupertonics,\n      // @deprecated use secondaryDominantsSupertonic\n      substituteDominantsMinorRelative: substituteDominantSupertonics\n    };\n  };\n}\nvar supertonics = (dominants, targetTriads) => {\n  return dominants.map((chord, index) => {\n    if (!chord) return \"\";\n    const domRoot = chord.slice(0, -1);\n    const minorRoot = transpose(domRoot, \"5P\");\n    const target = targetTriads[index];\n    const isMinor = target.endsWith(\"m\");\n    return isMinor ? minorRoot + \"m7\" : minorRoot + \"m7b5\";\n  });\n};\nvar distInFifths = (from, to) => {\n  const f = note(from);\n  const t = note(to);\n  return f.empty || t.empty ? 0 : t.coord[0] - f.coord[0];\n};\nvar MajorScale = keyScale(\n  \"I II III IV V VI VII\".split(\" \"),\n  \" m m   m dim\".split(\" \"),\n  \"maj7 m7 m7 maj7 7 m7 m7b5\".split(\" \"),\n  \"T SD T SD D T D\".split(\" \"),\n  \"major,dorian,phrygian,lydian,mixolydian,minor,locrian\".split(\",\")\n);\nvar NaturalScale = keyScale(\n  \"I II bIII IV V bVI bVII\".split(\" \"),\n  \"m dim  m m  \".split(\" \"),\n  \"m7 m7b5 maj7 m7 m7 maj7 7\".split(\" \"),\n  \"T SD T SD D SD SD\".split(\" \"),\n  \"minor,locrian,major,dorian,phrygian,lydian,mixolydian\".split(\",\")\n);\nvar HarmonicScale = keyScale(\n  \"I II bIII IV V bVI VII\".split(\" \"),\n  \"m dim aug m   dim\".split(\" \"),\n  \"mMaj7 m7b5 +maj7 m7 7 maj7 o7\".split(\" \"),\n  \"T SD T SD D SD D\".split(\" \"),\n  \"harmonic minor,locrian 6,major augmented,lydian diminished,phrygian dominant,lydian #9,ultralocrian\".split(\n    \",\"\n  )\n);\nvar MelodicScale = keyScale(\n  \"I II bIII IV V VI VII\".split(\" \"),\n  \"m m aug   dim dim\".split(\" \"),\n  \"m6 m7 +maj7 7 7 m7b5 m7b5\".split(\" \"),\n  \"T SD T SD D  \".split(\" \"),\n  \"melodic minor,dorian b2,lydian augmented,lydian dominant,mixolydian b6,locrian #2,altered\".split(\n    \",\"\n  )\n);\nfunction majorKey(tonic) {\n  const pc = note(tonic).pc;\n  if (!pc) return NoMajorKey;\n  const keyScale2 = MajorScale(pc);\n  const alteration = distInFifths(\"C\", pc);\n  return {\n    ...keyScale2,\n    type: \"major\",\n    minorRelative: transpose(pc, \"-3m\"),\n    alteration,\n    keySignature: altToAcc(alteration)\n  };\n}\nfunction majorKeyChords(tonic) {\n  const key = majorKey(tonic);\n  const chords = [];\n  keyChordsOf(key, chords);\n  return chords;\n}\nfunction minorKeyChords(tonic) {\n  const key = minorKey(tonic);\n  const chords = [];\n  keyChordsOf(key.natural, chords);\n  keyChordsOf(key.harmonic, chords);\n  keyChordsOf(key.melodic, chords);\n  return chords;\n}\nfunction keyChordsOf(key, chords) {\n  const updateChord = (name, newRole) => {\n    if (!name) return;\n    let keyChord = chords.find((chord) => chord.name === name);\n    if (!keyChord) {\n      keyChord = { name, roles: [] };\n      chords.push(keyChord);\n    }\n    if (newRole && !keyChord.roles.includes(newRole)) {\n      keyChord.roles.push(newRole);\n    }\n  };\n  key.chords.forEach(\n    (chordName, index) => updateChord(chordName, key.chordsHarmonicFunction[index])\n  );\n  key.secondaryDominants.forEach(\n    (chordName, index) => updateChord(chordName, `V/${key.grades[index]}`)\n  );\n  key.secondaryDominantSupertonics.forEach(\n    (chordName, index) => updateChord(chordName, `ii/${key.grades[index]}`)\n  );\n  key.substituteDominants.forEach(\n    (chordName, index) => updateChord(chordName, `subV/${key.grades[index]}`)\n  );\n  key.substituteDominantSupertonics.forEach(\n    (chordName, index) => updateChord(chordName, `subii/${key.grades[index]}`)\n  );\n}\nfunction minorKey(tnc) {\n  const pc = note(tnc).pc;\n  if (!pc) return NoMinorKey;\n  const alteration = distInFifths(\"C\", pc) - 3;\n  return {\n    type: \"minor\",\n    tonic: pc,\n    relativeMajor: transpose(pc, \"3m\"),\n    alteration,\n    keySignature: altToAcc(alteration),\n    natural: NaturalScale(pc),\n    harmonic: HarmonicScale(pc),\n    melodic: MelodicScale(pc)\n  };\n}\nfunction majorTonicFromKeySignature(sig) {\n  if (typeof sig === \"number\") {\n    return transposeFifths(\"C\", sig);\n  } else if (typeof sig === \"string\" && /^b+|#+$/.test(sig)) {\n    return transposeFifths(\"C\", accToAlt(sig));\n  }\n  return null;\n}\nvar index_default = { majorKey, majorTonicFromKeySignature, minorKey };\nexport {\n  index_default as default,\n  majorKey,\n  majorKeyChords,\n  majorTonicFromKeySignature,\n  minorKey,\n  minorKeyChords\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { compact, range, rotate } from \"@tonaljs/collection\";\nimport { transpose } from \"@tonaljs/pitch-distance\";\nimport { interval } from \"@tonaljs/pitch-interval\";\nimport { note } from \"@tonaljs/pitch-note\";\nvar EmptyPcset = {\n  empty: true,\n  name: \"\",\n  setNum: 0,\n  chroma: \"000000000000\",\n  normalized: \"000000000000\",\n  intervals: []\n};\nvar setNumToChroma = (num2) => Number(num2).toString(2).padStart(12, \"0\");\nvar chromaToNumber = (chroma2) => parseInt(chroma2, 2);\nvar REGEX = /^[01]{12}$/;\nfunction isChroma(set) {\n  return REGEX.test(set);\n}\nvar isPcsetNum = (set) => typeof set === \"number\" && set >= 0 && set <= 4095;\nvar isPcset = (set) => set && isChroma(set.chroma);\nvar cache = { [EmptyPcset.chroma]: EmptyPcset };\nfunction get(src) {\n  const chroma2 = isChroma(src) ? src : isPcsetNum(src) ? setNumToChroma(src) : Array.isArray(src) ? listToChroma(src) : isPcset(src) ? src.chroma : EmptyPcset.chroma;\n  return cache[chroma2] = cache[chroma2] || chromaToPcset(chroma2);\n}\nvar pcset = get;\nvar chroma = (set) => get(set).chroma;\nvar intervals = (set) => get(set).intervals;\nvar num = (set) => get(set).setNum;\nvar IVLS = [\n  \"1P\",\n  \"2m\",\n  \"2M\",\n  \"3m\",\n  \"3M\",\n  \"4P\",\n  \"5d\",\n  \"5P\",\n  \"6m\",\n  \"6M\",\n  \"7m\",\n  \"7M\"\n];\nfunction chromaToIntervals(chroma2) {\n  const intervals2 = [];\n  for (let i = 0; i < 12; i++) {\n    if (chroma2.charAt(i) === \"1\") intervals2.push(IVLS[i]);\n  }\n  return intervals2;\n}\nfunction notes(set) {\n  return get(set).intervals.map((ivl) => transpose(\"C\", ivl));\n}\nfunction chromas() {\n  return range(2048, 4095).map(setNumToChroma);\n}\nfunction modes(set, normalize = true) {\n  const pcs = get(set);\n  const binary = pcs.chroma.split(\"\");\n  return compact(\n    binary.map((_, i) => {\n      const r = rotate(i, binary);\n      return normalize && r[0] === \"0\" ? null : r.join(\"\");\n    })\n  );\n}\nfunction isEqual(s1, s2) {\n  return get(s1).setNum === get(s2).setNum;\n}\nfunction isSubsetOf(set) {\n  const s = get(set).setNum;\n  return (notes2) => {\n    const o = get(notes2).setNum;\n    return s && s !== o && (o & s) === o;\n  };\n}\nfunction isSupersetOf(set) {\n  const s = get(set).setNum;\n  return (notes2) => {\n    const o = get(notes2).setNum;\n    return s && s !== o && (o | s) === o;\n  };\n}\nfunction isNoteIncludedIn(set) {\n  const s = get(set);\n  return (noteName) => {\n    const n = note(noteName);\n    return s && !n.empty && s.chroma.charAt(n.chroma) === \"1\";\n  };\n}\nvar includes = isNoteIncludedIn;\nfunction filter(set) {\n  const isIncluded = isNoteIncludedIn(set);\n  return (notes2) => {\n    return notes2.filter(isIncluded);\n  };\n}\nvar pcset_default = {\n  get,\n  chroma,\n  num,\n  intervals,\n  chromas,\n  isSupersetOf,\n  isSubsetOf,\n  isNoteIncludedIn,\n  isEqual,\n  filter,\n  modes,\n  notes,\n  // deprecated\n  pcset\n};\nfunction chromaRotations(chroma2) {\n  const binary = chroma2.split(\"\");\n  return binary.map((_, i) => rotate(i, binary).join(\"\"));\n}\nfunction chromaToPcset(chroma2) {\n  const setNum = chromaToNumber(chroma2);\n  const normalizedNum = chromaRotations(chroma2).map(chromaToNumber).filter((n) => n >= 2048).sort()[0];\n  const normalized = setNumToChroma(normalizedNum);\n  const intervals2 = chromaToIntervals(chroma2);\n  return {\n    empty: false,\n    name: \"\",\n    setNum,\n    chroma: chroma2,\n    normalized,\n    intervals: intervals2\n  };\n}\nfunction listToChroma(set) {\n  if (set.length === 0) {\n    return EmptyPcset.chroma;\n  }\n  let pitch;\n  const binary = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  for (let i = 0; i < set.length; i++) {\n    pitch = note(set[i]);\n    if (pitch.empty) pitch = interval(set[i]);\n    if (!pitch.empty) binary[pitch.chroma] = 1;\n  }\n  return binary.join(\"\");\n}\nexport {\n  EmptyPcset,\n  chroma,\n  chromas,\n  pcset_default as default,\n  filter,\n  get,\n  includes,\n  intervals,\n  isChroma,\n  isEqual,\n  isNoteIncludedIn,\n  isSubsetOf,\n  isSupersetOf,\n  modes,\n  notes,\n  num,\n  pcset\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { tokenize } from \"@tonaljs/chord\";\nimport { distance, transpose } from \"@tonaljs/pitch-distance\";\nimport { interval } from \"@tonaljs/pitch-interval\";\nimport { get as romanNumeral } from \"@tonaljs/roman-numeral\";\nfunction fromRomanNumerals(tonic, chords) {\n  const romanNumerals = chords.map(romanNumeral);\n  return romanNumerals.map(\n    (rn) => transpose(tonic, interval(rn)) + rn.chordType\n  );\n}\nfunction toRomanNumerals(tonic, chords) {\n  return chords.map((chord) => {\n    const [note, chordType] = tokenize(chord);\n    const intervalName = distance(tonic, note);\n    const roman = romanNumeral(interval(intervalName));\n    return roman.name + chordType;\n  });\n}\nvar progression_default = { fromRomanNumerals, toRomanNumerals };\nexport {\n  progression_default as default,\n  fromRomanNumerals,\n  toRomanNumerals\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { distance as dist } from \"@tonaljs/pitch-distance\";\nimport {\n  coordToInterval,\n  interval as props\n} from \"@tonaljs/pitch-interval\";\nfunction names() {\n  return \"1P 2M 3M 4P 5P 6m 7m\".split(\" \");\n}\nvar get = props;\nvar name = (name2) => props(name2).name;\nvar semitones = (name2) => props(name2).semitones;\nvar quality = (name2) => props(name2).q;\nvar num = (name2) => props(name2).num;\nfunction simplify(name2) {\n  const i = props(name2);\n  return i.empty ? \"\" : i.simple + i.q;\n}\nfunction invert(name2) {\n  const i = props(name2);\n  if (i.empty) {\n    return \"\";\n  }\n  const step = (7 - i.step) % 7;\n  const alt = i.type === \"perfectable\" ? -i.alt : -(i.alt + 1);\n  return props({ step, alt, oct: i.oct, dir: i.dir }).name;\n}\nvar IN = [1, 2, 2, 3, 3, 4, 5, 5, 6, 6, 7, 7];\nvar IQ = \"P m M m M P d P m M m M\".split(\" \");\nfunction fromSemitones(semitones2) {\n  const d = semitones2 < 0 ? -1 : 1;\n  const n = Math.abs(semitones2);\n  const c = n % 12;\n  const o = Math.floor(n / 12);\n  return d * (IN[c] + 7 * o) + IQ[c];\n}\nvar distance = dist;\nvar add = combinator((a, b) => [a[0] + b[0], a[1] + b[1]]);\nvar addTo = (interval) => (other) => add(interval, other);\nvar subtract = combinator((a, b) => [a[0] - b[0], a[1] - b[1]]);\nfunction transposeFifths(interval, fifths) {\n  const ivl = get(interval);\n  if (ivl.empty) return \"\";\n  const [nFifths, nOcts, dir] = ivl.coord;\n  return coordToInterval([nFifths + fifths, nOcts, dir]).name;\n}\nvar interval_default = {\n  names,\n  get,\n  name,\n  num,\n  semitones,\n  quality,\n  fromSemitones,\n  distance,\n  invert,\n  simplify,\n  add,\n  addTo,\n  subtract,\n  transposeFifths\n};\nfunction combinator(fn) {\n  return (a, b) => {\n    const coordA = props(a).coord;\n    const coordB = props(b).coord;\n    if (coordA && coordB) {\n      const coord = fn(coordA, coordB);\n      return coordToInterval(coord).name;\n    }\n  };\n}\nexport {\n  add,\n  addTo,\n  interval_default as default,\n  distance,\n  fromSemitones,\n  get,\n  invert,\n  name,\n  names,\n  num,\n  quality,\n  semitones,\n  simplify,\n  subtract,\n  transposeFifths\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport {\n  EmptyPcset,\n  get as pcset\n} from \"@tonaljs/pcset\";\n\n// data.ts\nvar CHORDS = [\n  // ==Major==\n  [\"1P 3M 5P\", \"major\", \"M ^  maj\"],\n  [\"1P 3M 5P 7M\", \"major seventh\", \"maj7 \\u0394 ma7 M7 Maj7 ^7\"],\n  [\"1P 3M 5P 7M 9M\", \"major ninth\", \"maj9 \\u03949 ^9\"],\n  [\"1P 3M 5P 7M 9M 13M\", \"major thirteenth\", \"maj13 Maj13 ^13\"],\n  [\"1P 3M 5P 6M\", \"sixth\", \"6 add6 add13 M6\"],\n  [\"1P 3M 5P 6M 9M\", \"sixth added ninth\", \"6add9 6/9 69 M69\"],\n  [\"1P 3M 6m 7M\", \"major seventh flat sixth\", \"M7b6 ^7b6\"],\n  [\n    \"1P 3M 5P 7M 11A\",\n    \"major seventh sharp eleventh\",\n    \"maj#4 \\u0394#4 \\u0394#11 M7#11 ^7#11 maj7#11\"\n  ],\n  // ==Minor==\n  // '''Normal'''\n  [\"1P 3m 5P\", \"minor\", \"m min -\"],\n  [\"1P 3m 5P 7m\", \"minor seventh\", \"m7 min7 mi7 -7\"],\n  [\n    \"1P 3m 5P 7M\",\n    \"minor/major seventh\",\n    \"m/ma7 m/maj7 mM7 mMaj7 m/M7 -\\u03947 m\\u0394 -^7 -maj7\"\n  ],\n  [\"1P 3m 5P 6M\", \"minor sixth\", \"m6 -6\"],\n  [\"1P 3m 5P 7m 9M\", \"minor ninth\", \"m9 -9\"],\n  [\"1P 3m 5P 7M 9M\", \"minor/major ninth\", \"mM9 mMaj9 -^9\"],\n  [\"1P 3m 5P 7m 9M 11P\", \"minor eleventh\", \"m11 -11\"],\n  [\"1P 3m 5P 7m 9M 13M\", \"minor thirteenth\", \"m13 -13\"],\n  // '''Diminished'''\n  [\"1P 3m 5d\", \"diminished\", \"dim \\xB0 o\"],\n  [\"1P 3m 5d 7d\", \"diminished seventh\", \"dim7 \\xB07 o7\"],\n  [\"1P 3m 5d 7m\", \"half-diminished\", \"m7b5 \\xF8 -7b5 h7 h\"],\n  // ==Dominant/Seventh==\n  // '''Normal'''\n  [\"1P 3M 5P 7m\", \"dominant seventh\", \"7 dom\"],\n  [\"1P 3M 5P 7m 9M\", \"dominant ninth\", \"9\"],\n  [\"1P 3M 5P 7m 9M 13M\", \"dominant thirteenth\", \"13\"],\n  [\"1P 3M 5P 7m 11A\", \"lydian dominant seventh\", \"7#11 7#4\"],\n  // '''Altered'''\n  [\"1P 3M 5P 7m 9m\", \"dominant flat ninth\", \"7b9\"],\n  [\"1P 3M 5P 7m 9A\", \"dominant sharp ninth\", \"7#9\"],\n  [\"1P 3M 7m 9m\", \"altered\", \"alt7\"],\n  // '''Suspended'''\n  [\"1P 4P 5P\", \"suspended fourth\", \"sus4 sus\"],\n  [\"1P 2M 5P\", \"suspended second\", \"sus2\"],\n  [\"1P 4P 5P 7m\", \"suspended fourth seventh\", \"7sus4 7sus\"],\n  [\"1P 5P 7m 9M 11P\", \"eleventh\", \"11\"],\n  [\n    \"1P 4P 5P 7m 9m\",\n    \"suspended fourth flat ninth\",\n    \"b9sus phryg 7b9sus 7b9sus4\"\n  ],\n  // ==Other==\n  [\"1P 5P\", \"fifth\", \"5\"],\n  [\"1P 3M 5A\", \"augmented\", \"aug + +5 ^#5\"],\n  [\"1P 3m 5A\", \"minor augmented\", \"m#5 -#5 m+\"],\n  [\"1P 3M 5A 7M\", \"augmented seventh\", \"maj7#5 maj7+5 +maj7 ^7#5\"],\n  [\n    \"1P 3M 5P 7M 9M 11A\",\n    \"major sharp eleventh (lydian)\",\n    \"maj9#11 \\u03949#11 ^9#11\"\n  ],\n  // ==Legacy==\n  [\"1P 2M 4P 5P\", \"\", \"sus24 sus4add9\"],\n  [\"1P 3M 5A 7M 9M\", \"\", \"maj9#5 Maj9#5\"],\n  [\"1P 3M 5A 7m\", \"\", \"7#5 +7 7+ 7aug aug7\"],\n  [\"1P 3M 5A 7m 9A\", \"\", \"7#5#9 7#9#5 7alt\"],\n  [\"1P 3M 5A 7m 9M\", \"\", \"9#5 9+\"],\n  [\"1P 3M 5A 7m 9M 11A\", \"\", \"9#5#11\"],\n  [\"1P 3M 5A 7m 9m\", \"\", \"7#5b9 7b9#5\"],\n  [\"1P 3M 5A 7m 9m 11A\", \"\", \"7#5b9#11\"],\n  [\"1P 3M 5A 9A\", \"\", \"+add#9\"],\n  [\"1P 3M 5A 9M\", \"\", \"M#5add9 +add9\"],\n  [\"1P 3M 5P 6M 11A\", \"\", \"M6#11 M6b5 6#11 6b5\"],\n  [\"1P 3M 5P 6M 7M 9M\", \"\", \"M7add13\"],\n  [\"1P 3M 5P 6M 9M 11A\", \"\", \"69#11\"],\n  [\"1P 3m 5P 6M 9M\", \"\", \"m69 -69\"],\n  [\"1P 3M 5P 6m 7m\", \"\", \"7b6\"],\n  [\"1P 3M 5P 7M 9A 11A\", \"\", \"maj7#9#11\"],\n  [\"1P 3M 5P 7M 9M 11A 13M\", \"\", \"M13#11 maj13#11 M13+4 M13#4\"],\n  [\"1P 3M 5P 7M 9m\", \"\", \"M7b9\"],\n  [\"1P 3M 5P 7m 11A 13m\", \"\", \"7#11b13 7b5b13\"],\n  [\"1P 3M 5P 7m 13M\", \"\", \"7add6 67 7add13\"],\n  [\"1P 3M 5P 7m 9A 11A\", \"\", \"7#9#11 7b5#9 7#9b5\"],\n  [\"1P 3M 5P 7m 9A 11A 13M\", \"\", \"13#9#11\"],\n  [\"1P 3M 5P 7m 9A 11A 13m\", \"\", \"7#9#11b13\"],\n  [\"1P 3M 5P 7m 9A 13M\", \"\", \"13#9\"],\n  [\"1P 3M 5P 7m 9A 13m\", \"\", \"7#9b13\"],\n  [\"1P 3M 5P 7m 9M 11A\", \"\", \"9#11 9+4 9#4\"],\n  [\"1P 3M 5P 7m 9M 11A 13M\", \"\", \"13#11 13+4 13#4\"],\n  [\"1P 3M 5P 7m 9M 11A 13m\", \"\", \"9#11b13 9b5b13\"],\n  [\"1P 3M 5P 7m 9m 11A\", \"\", \"7b9#11 7b5b9 7b9b5\"],\n  [\"1P 3M 5P 7m 9m 11A 13M\", \"\", \"13b9#11\"],\n  [\"1P 3M 5P 7m 9m 11A 13m\", \"\", \"7b9b13#11 7b9#11b13 7b5b9b13\"],\n  [\"1P 3M 5P 7m 9m 13M\", \"\", \"13b9\"],\n  [\"1P 3M 5P 7m 9m 13m\", \"\", \"7b9b13\"],\n  [\"1P 3M 5P 7m 9m 9A\", \"\", \"7b9#9\"],\n  [\"1P 3M 5P 9M\", \"\", \"Madd9 2 add9 add2\"],\n  [\"1P 3M 5P 9m\", \"\", \"Maddb9\"],\n  [\"1P 3M 5d\", \"\", \"Mb5\"],\n  [\"1P 3M 5d 6M 7m 9M\", \"\", \"13b5\"],\n  [\"1P 3M 5d 7M\", \"\", \"M7b5\"],\n  [\"1P 3M 5d 7M 9M\", \"\", \"M9b5\"],\n  [\"1P 3M 5d 7m\", \"\", \"7b5\"],\n  [\"1P 3M 5d 7m 9M\", \"\", \"9b5\"],\n  [\"1P 3M 7m\", \"\", \"7no5\"],\n  [\"1P 3M 7m 13m\", \"\", \"7b13\"],\n  [\"1P 3M 7m 9M\", \"\", \"9no5\"],\n  [\"1P 3M 7m 9M 13M\", \"\", \"13no5\"],\n  [\"1P 3M 7m 9M 13m\", \"\", \"9b13\"],\n  [\"1P 3m 4P 5P\", \"\", \"madd4\"],\n  [\"1P 3m 5P 6m 7M\", \"\", \"mMaj7b6\"],\n  [\"1P 3m 5P 6m 7M 9M\", \"\", \"mMaj9b6\"],\n  [\"1P 3m 5P 7m 11P\", \"\", \"m7add11 m7add4\"],\n  [\"1P 3m 5P 9M\", \"\", \"madd9\"],\n  [\"1P 3m 5d 6M 7M\", \"\", \"o7M7\"],\n  [\"1P 3m 5d 7M\", \"\", \"oM7\"],\n  [\"1P 3m 6m 7M\", \"\", \"mb6M7\"],\n  [\"1P 3m 6m 7m\", \"\", \"m7#5\"],\n  [\"1P 3m 6m 7m 9M\", \"\", \"m9#5\"],\n  [\"1P 3m 5A 7m 9M 11P\", \"\", \"m11A\"],\n  [\"1P 3m 6m 9m\", \"\", \"mb6b9\"],\n  [\"1P 2M 3m 5d 7m\", \"\", \"m9b5\"],\n  [\"1P 4P 5A 7M\", \"\", \"M7#5sus4\"],\n  [\"1P 4P 5A 7M 9M\", \"\", \"M9#5sus4\"],\n  [\"1P 4P 5A 7m\", \"\", \"7#5sus4\"],\n  [\"1P 4P 5P 7M\", \"\", \"M7sus4\"],\n  [\"1P 4P 5P 7M 9M\", \"\", \"M9sus4\"],\n  [\"1P 4P 5P 7m 9M\", \"\", \"9sus4 9sus\"],\n  [\"1P 4P 5P 7m 9M 13M\", \"\", \"13sus4 13sus\"],\n  [\"1P 4P 5P 7m 9m 13m\", \"\", \"7sus4b9b13 7b9b13sus4\"],\n  [\"1P 4P 7m 10m\", \"\", \"4 quartal\"],\n  [\"1P 5P 7m 9m 11P\", \"\", \"11b9\"]\n];\nvar data_default = CHORDS;\n\n// index.ts\nvar NoChordType = {\n  ...EmptyPcset,\n  name: \"\",\n  quality: \"Unknown\",\n  intervals: [],\n  aliases: []\n};\nvar dictionary = [];\nvar index = {};\nfunction get(type) {\n  return index[type] || NoChordType;\n}\nvar chordType = get;\nfunction names() {\n  return dictionary.map((chord) => chord.name).filter((x) => x);\n}\nfunction symbols() {\n  return dictionary.map((chord) => chord.aliases[0]).filter((x) => x);\n}\nfunction keys() {\n  return Object.keys(index);\n}\nfunction all() {\n  return dictionary.slice();\n}\nvar entries = all;\nfunction removeAll() {\n  dictionary = [];\n  index = {};\n}\nfunction add(intervals, aliases, fullName) {\n  const quality = getQuality(intervals);\n  const chord = {\n    ...pcset(intervals),\n    name: fullName || \"\",\n    quality,\n    intervals,\n    aliases\n  };\n  dictionary.push(chord);\n  if (chord.name) {\n    index[chord.name] = chord;\n  }\n  index[chord.setNum] = chord;\n  index[chord.chroma] = chord;\n  chord.aliases.forEach((alias) => addAlias(chord, alias));\n}\nfunction addAlias(chord, alias) {\n  index[alias] = chord;\n}\nfunction getQuality(intervals) {\n  const has = (interval) => intervals.indexOf(interval) !== -1;\n  return has(\"5A\") ? \"Augmented\" : has(\"3M\") ? \"Major\" : has(\"5d\") ? \"Diminished\" : has(\"3m\") ? \"Minor\" : \"Unknown\";\n}\ndata_default.forEach(\n  ([ivls, fullName, names2]) => add(ivls.split(\" \"), names2.split(\" \"), fullName)\n);\ndictionary.sort((a, b) => a.setNum - b.setNum);\nvar chord_type_default = {\n  names,\n  symbols,\n  get,\n  all,\n  add,\n  removeAll,\n  keys,\n  // deprecated\n  entries,\n  chordType\n};\nexport {\n  add,\n  addAlias,\n  all,\n  chordType,\n  chord_type_default as default,\n  entries,\n  get,\n  keys,\n  names,\n  removeAll,\n  symbols\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { freqToMidi, midiToNoteName } from \"@tonaljs/midi\";\nimport { distance as _dist, transpose as _tr } from \"@tonaljs/pitch-distance\";\nimport {\n  note as props\n} from \"@tonaljs/pitch-note\";\nvar NAMES = [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"];\nvar toName = (n) => n.name;\nvar onlyNotes = (array) => array.map(props).filter((n) => !n.empty);\nfunction names(array) {\n  if (array === void 0) {\n    return NAMES.slice();\n  } else if (!Array.isArray(array)) {\n    return [];\n  } else {\n    return onlyNotes(array).map(toName);\n  }\n}\nvar get = props;\nvar name = (note) => get(note).name;\nvar pitchClass = (note) => get(note).pc;\nvar accidentals = (note) => get(note).acc;\nvar octave = (note) => get(note).oct;\nvar midi = (note) => get(note).midi;\nvar freq = (note) => get(note).freq;\nvar chroma = (note) => get(note).chroma;\nfunction fromMidi(midi2) {\n  return midiToNoteName(midi2);\n}\nfunction fromFreq(freq2) {\n  return midiToNoteName(freqToMidi(freq2));\n}\nfunction fromFreqSharps(freq2) {\n  return midiToNoteName(freqToMidi(freq2), { sharps: true });\n}\nfunction fromMidiSharps(midi2) {\n  return midiToNoteName(midi2, { sharps: true });\n}\nvar distance = _dist;\nvar transpose = _tr;\nvar tr = _tr;\nvar transposeBy = (interval) => (note) => transpose(note, interval);\nvar trBy = transposeBy;\nvar transposeFrom = (note) => (interval) => transpose(note, interval);\nvar trFrom = transposeFrom;\nfunction transposeFifths(noteName, fifths) {\n  return transpose(noteName, [fifths, 0]);\n}\nvar trFifths = transposeFifths;\nfunction transposeOctaves(noteName, octaves) {\n  return transpose(noteName, [0, octaves]);\n}\nvar ascending = (a, b) => a.height - b.height;\nvar descending = (a, b) => b.height - a.height;\nfunction sortedNames(notes, comparator) {\n  comparator = comparator || ascending;\n  return onlyNotes(notes).sort(comparator).map(toName);\n}\nfunction sortedUniqNames(notes) {\n  return sortedNames(notes, ascending).filter(\n    (n, i, a) => i === 0 || n !== a[i - 1]\n  );\n}\nvar simplify = (noteName) => {\n  const note = get(noteName);\n  if (note.empty) {\n    return \"\";\n  }\n  return midiToNoteName(note.midi || note.chroma, {\n    sharps: note.alt > 0,\n    pitchClass: note.midi === null\n  });\n};\nfunction enharmonic(noteName, destName) {\n  const src = get(noteName);\n  if (src.empty) {\n    return \"\";\n  }\n  const dest = get(\n    destName || midiToNoteName(src.midi || src.chroma, {\n      sharps: src.alt < 0,\n      pitchClass: true\n    })\n  );\n  if (dest.empty || dest.chroma !== src.chroma) {\n    return \"\";\n  }\n  if (src.oct === void 0) {\n    return dest.pc;\n  }\n  const srcChroma = src.chroma - src.alt;\n  const destChroma = dest.chroma - dest.alt;\n  const destOctOffset = srcChroma > 11 || destChroma < 0 ? -1 : srcChroma < 0 || destChroma > 11 ? 1 : 0;\n  const destOct = src.oct + destOctOffset;\n  return dest.pc + destOct;\n}\nvar index_default = {\n  names,\n  get,\n  name,\n  pitchClass,\n  accidentals,\n  octave,\n  midi,\n  ascending,\n  descending,\n  distance,\n  sortedNames,\n  sortedUniqNames,\n  fromMidi,\n  fromMidiSharps,\n  freq,\n  fromFreq,\n  fromFreqSharps,\n  chroma,\n  transpose,\n  tr,\n  transposeBy,\n  trBy,\n  transposeFrom,\n  trFrom,\n  transposeFifths,\n  transposeOctaves,\n  trFifths,\n  simplify,\n  enharmonic\n};\nexport {\n  accidentals,\n  ascending,\n  chroma,\n  index_default as default,\n  descending,\n  distance,\n  enharmonic,\n  freq,\n  fromFreq,\n  fromFreqSharps,\n  fromMidi,\n  fromMidiSharps,\n  get,\n  midi,\n  name,\n  names,\n  octave,\n  pitchClass,\n  simplify,\n  sortedNames,\n  sortedUniqNames,\n  tr,\n  trBy,\n  trFifths,\n  trFrom,\n  transpose,\n  transposeBy,\n  transposeFifths,\n  transposeFrom,\n  transposeOctaves\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { rotate } from \"@tonaljs/collection\";\nimport { simplify, transposeFifths } from \"@tonaljs/interval\";\nimport { EmptyPcset } from \"@tonaljs/pcset\";\nimport { transpose } from \"@tonaljs/pitch-distance\";\nimport { get as getType } from \"@tonaljs/scale-type\";\nvar MODES = [\n  [0, 2773, 0, \"ionian\", \"\", \"Maj7\", \"major\"],\n  [1, 2902, 2, \"dorian\", \"m\", \"m7\"],\n  [2, 3418, 4, \"phrygian\", \"m\", \"m7\"],\n  [3, 2741, -1, \"lydian\", \"\", \"Maj7\"],\n  [4, 2774, 1, \"mixolydian\", \"\", \"7\"],\n  [5, 2906, 3, \"aeolian\", \"m\", \"m7\", \"minor\"],\n  [6, 3434, 5, \"locrian\", \"dim\", \"m7b5\"]\n];\nvar NoMode = {\n  ...EmptyPcset,\n  name: \"\",\n  alt: 0,\n  modeNum: NaN,\n  triad: \"\",\n  seventh: \"\",\n  aliases: []\n};\nvar modes = MODES.map(toMode);\nvar index = {};\nmodes.forEach((mode2) => {\n  index[mode2.name] = mode2;\n  mode2.aliases.forEach((alias) => {\n    index[alias] = mode2;\n  });\n});\nfunction get(name) {\n  return typeof name === \"string\" ? index[name.toLowerCase()] || NoMode : name && name.name ? get(name.name) : NoMode;\n}\nvar mode = get;\nfunction all() {\n  return modes.slice();\n}\nvar entries = all;\nfunction names() {\n  return modes.map((mode2) => mode2.name);\n}\nfunction toMode(mode2) {\n  const [modeNum, setNum, alt, name, triad, seventh, alias] = mode2;\n  const aliases = alias ? [alias] : [];\n  const chroma = Number(setNum).toString(2);\n  const intervals = getType(name).intervals;\n  return {\n    empty: false,\n    intervals,\n    modeNum,\n    chroma,\n    normalized: chroma,\n    name,\n    setNum,\n    alt,\n    triad,\n    seventh,\n    aliases\n  };\n}\nfunction notes(modeName, tonic) {\n  return get(modeName).intervals.map((ivl) => transpose(tonic, ivl));\n}\nfunction chords(chords2) {\n  return (modeName, tonic) => {\n    const mode2 = get(modeName);\n    if (mode2.empty) return [];\n    const triads2 = rotate(mode2.modeNum, chords2);\n    const tonics = mode2.intervals.map((i) => transpose(tonic, i));\n    return triads2.map((triad, i) => tonics[i] + triad);\n  };\n}\nvar triads = chords(MODES.map((x) => x[4]));\nvar seventhChords = chords(MODES.map((x) => x[5]));\nfunction distance(destination, source) {\n  const from = get(source);\n  const to = get(destination);\n  if (from.empty || to.empty) return \"\";\n  return simplify(transposeFifths(\"1P\", to.alt - from.alt));\n}\nfunction relativeTonic(destination, source, tonic) {\n  return transpose(tonic, distance(destination, source));\n}\nvar mode_default = {\n  get,\n  names,\n  all,\n  distance,\n  relativeTonic,\n  notes,\n  triads,\n  seventhChords,\n  // deprecated\n  entries,\n  mode\n};\nexport {\n  all,\n  mode_default as default,\n  distance,\n  entries,\n  get,\n  mode,\n  names,\n  notes,\n  relativeTonic,\n  seventhChords,\n  triads\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport {\n  EmptyPcset,\n  get as pcset\n} from \"@tonaljs/pcset\";\n\n// data.ts\nvar SCALES = [\n  // Basic scales\n  [\"1P 2M 3M 5P 6M\", \"major pentatonic\", \"pentatonic\"],\n  [\"1P 2M 3M 4P 5P 6M 7M\", \"major\", \"ionian\"],\n  [\"1P 2M 3m 4P 5P 6m 7m\", \"minor\", \"aeolian\"],\n  // Jazz common scales\n  [\"1P 2M 3m 3M 5P 6M\", \"major blues\"],\n  [\"1P 3m 4P 5d 5P 7m\", \"minor blues\", \"blues\"],\n  [\"1P 2M 3m 4P 5P 6M 7M\", \"melodic minor\"],\n  [\"1P 2M 3m 4P 5P 6m 7M\", \"harmonic minor\"],\n  [\"1P 2M 3M 4P 5P 6M 7m 7M\", \"bebop\"],\n  [\"1P 2M 3m 4P 5d 6m 6M 7M\", \"diminished\", \"whole-half diminished\"],\n  // Modes\n  [\"1P 2M 3m 4P 5P 6M 7m\", \"dorian\"],\n  [\"1P 2M 3M 4A 5P 6M 7M\", \"lydian\"],\n  [\"1P 2M 3M 4P 5P 6M 7m\", \"mixolydian\", \"dominant\"],\n  [\"1P 2m 3m 4P 5P 6m 7m\", \"phrygian\"],\n  [\"1P 2m 3m 4P 5d 6m 7m\", \"locrian\"],\n  // 5-note scales\n  [\"1P 3M 4P 5P 7M\", \"ionian pentatonic\"],\n  [\"1P 3M 4P 5P 7m\", \"mixolydian pentatonic\", \"indian\"],\n  [\"1P 2M 4P 5P 6M\", \"ritusen\"],\n  [\"1P 2M 4P 5P 7m\", \"egyptian\"],\n  [\"1P 3M 4P 5d 7m\", \"neopolitan major pentatonic\"],\n  [\"1P 3m 4P 5P 6m\", \"vietnamese 1\"],\n  [\"1P 2m 3m 5P 6m\", \"pelog\"],\n  [\"1P 2m 4P 5P 6m\", \"kumoijoshi\"],\n  [\"1P 2M 3m 5P 6m\", \"hirajoshi\"],\n  [\"1P 2m 4P 5d 7m\", \"iwato\"],\n  [\"1P 2m 4P 5P 7m\", \"in-sen\"],\n  [\"1P 3M 4A 5P 7M\", \"lydian pentatonic\", \"chinese\"],\n  [\"1P 3m 4P 6m 7m\", \"malkos raga\"],\n  [\"1P 3m 4P 5d 7m\", \"locrian pentatonic\", \"minor seven flat five pentatonic\"],\n  [\"1P 3m 4P 5P 7m\", \"minor pentatonic\", \"vietnamese 2\"],\n  [\"1P 3m 4P 5P 6M\", \"minor six pentatonic\"],\n  [\"1P 2M 3m 5P 6M\", \"flat three pentatonic\", \"kumoi\"],\n  [\"1P 2M 3M 5P 6m\", \"flat six pentatonic\"],\n  [\"1P 2m 3M 5P 6M\", \"scriabin\"],\n  [\"1P 3M 5d 6m 7m\", \"whole tone pentatonic\"],\n  [\"1P 3M 4A 5A 7M\", \"lydian #5P pentatonic\"],\n  [\"1P 3M 4A 5P 7m\", \"lydian dominant pentatonic\"],\n  [\"1P 3m 4P 5P 7M\", \"minor #7M pentatonic\"],\n  [\"1P 3m 4d 5d 7m\", \"super locrian pentatonic\"],\n  // 6-note scales\n  [\"1P 2M 3m 4P 5P 7M\", \"minor hexatonic\"],\n  [\"1P 2A 3M 5P 5A 7M\", \"augmented\"],\n  [\"1P 2M 4P 5P 6M 7m\", \"piongio\"],\n  [\"1P 2m 3M 4A 6M 7m\", \"prometheus neopolitan\"],\n  [\"1P 2M 3M 4A 6M 7m\", \"prometheus\"],\n  [\"1P 2m 3M 5d 6m 7m\", \"mystery #1\"],\n  [\"1P 2m 3M 4P 5A 6M\", \"six tone symmetric\"],\n  [\"1P 2M 3M 4A 5A 6A\", \"whole tone\", \"messiaen's mode #1\"],\n  [\"1P 2m 4P 4A 5P 7M\", \"messiaen's mode #5\"],\n  // 7-note scales\n  [\"1P 2M 3M 4P 5d 6m 7m\", \"locrian major\", \"arabian\"],\n  [\"1P 2m 3M 4A 5P 6m 7M\", \"double harmonic lydian\"],\n  [\n    \"1P 2m 2A 3M 4A 6m 7m\",\n    \"altered\",\n    \"super locrian\",\n    \"diminished whole tone\",\n    \"pomeroy\"\n  ],\n  [\"1P 2M 3m 4P 5d 6m 7m\", \"locrian #2\", \"half-diminished\", \"aeolian b5\"],\n  [\n    \"1P 2M 3M 4P 5P 6m 7m\",\n    \"mixolydian b6\",\n    \"melodic minor fifth mode\",\n    \"hindu\"\n  ],\n  [\"1P 2M 3M 4A 5P 6M 7m\", \"lydian dominant\", \"lydian b7\", \"overtone\"],\n  [\"1P 2M 3M 4A 5A 6M 7M\", \"lydian augmented\"],\n  [\n    \"1P 2m 3m 4P 5P 6M 7m\",\n    \"dorian b2\",\n    \"phrygian #6\",\n    \"melodic minor second mode\"\n  ],\n  [\n    \"1P 2m 3m 4d 5d 6m 7d\",\n    \"ultralocrian\",\n    \"superlocrian bb7\",\n    \"superlocrian diminished\"\n  ],\n  [\"1P 2m 3m 4P 5d 6M 7m\", \"locrian 6\", \"locrian natural 6\", \"locrian sharp 6\"],\n  [\"1P 2A 3M 4P 5P 5A 7M\", \"augmented heptatonic\"],\n  // Source https://en.wikipedia.org/wiki/Ukrainian_Dorian_scale\n  [\n    \"1P 2M 3m 4A 5P 6M 7m\",\n    \"dorian #4\",\n    \"ukrainian dorian\",\n    \"romanian minor\",\n    \"altered dorian\"\n  ],\n  [\"1P 2M 3m 4A 5P 6M 7M\", \"lydian diminished\"],\n  [\"1P 2M 3M 4A 5A 7m 7M\", \"leading whole tone\"],\n  [\"1P 2M 3M 4A 5P 6m 7m\", \"lydian minor\"],\n  [\"1P 2m 3M 4P 5P 6m 7m\", \"phrygian dominant\", \"spanish\", \"phrygian major\"],\n  [\"1P 2m 3m 4P 5P 6m 7M\", \"balinese\"],\n  [\"1P 2m 3m 4P 5P 6M 7M\", \"neopolitan major\"],\n  [\"1P 2M 3M 4P 5P 6m 7M\", \"harmonic major\"],\n  [\"1P 2m 3M 4P 5P 6m 7M\", \"double harmonic major\", \"gypsy\"],\n  [\"1P 2M 3m 4A 5P 6m 7M\", \"hungarian minor\"],\n  [\"1P 2A 3M 4A 5P 6M 7m\", \"hungarian major\"],\n  [\"1P 2m 3M 4P 5d 6M 7m\", \"oriental\"],\n  [\"1P 2m 3m 3M 4A 5P 7m\", \"flamenco\"],\n  [\"1P 2m 3m 4A 5P 6m 7M\", \"todi raga\"],\n  [\"1P 2m 3M 4P 5d 6m 7M\", \"persian\"],\n  [\"1P 2m 3M 5d 6m 7m 7M\", \"enigmatic\"],\n  [\n    \"1P 2M 3M 4P 5A 6M 7M\",\n    \"major augmented\",\n    \"major #5\",\n    \"ionian augmented\",\n    \"ionian #5\"\n  ],\n  [\"1P 2A 3M 4A 5P 6M 7M\", \"lydian #9\"],\n  // 8-note scales\n  [\"1P 2m 2M 4P 4A 5P 6m 7M\", \"messiaen's mode #4\"],\n  [\"1P 2m 3M 4P 4A 5P 6m 7M\", \"purvi raga\"],\n  [\"1P 2m 3m 3M 4P 5P 6m 7m\", \"spanish heptatonic\"],\n  [\"1P 2M 3m 3M 4P 5P 6M 7m\", \"bebop minor\"],\n  [\"1P 2M 3M 4P 5P 5A 6M 7M\", \"bebop major\"],\n  [\"1P 2m 3m 4P 5d 5P 6m 7m\", \"bebop locrian\"],\n  [\"1P 2M 3m 4P 5P 6m 7m 7M\", \"minor bebop\"],\n  [\"1P 2M 3M 4P 5d 5P 6M 7M\", \"ichikosucho\"],\n  [\"1P 2M 3m 4P 5P 6m 6M 7M\", \"minor six diminished\"],\n  [\n    \"1P 2m 3m 3M 4A 5P 6M 7m\",\n    \"half-whole diminished\",\n    \"dominant diminished\",\n    \"messiaen's mode #2\"\n  ],\n  [\"1P 3m 3M 4P 5P 6M 7m 7M\", \"kafi raga\"],\n  [\"1P 2M 3M 4P 4A 5A 6A 7M\", \"messiaen's mode #6\"],\n  // 9-note scales\n  [\"1P 2M 3m 3M 4P 5d 5P 6M 7m\", \"composite blues\"],\n  [\"1P 2M 3m 3M 4A 5P 6m 7m 7M\", \"messiaen's mode #3\"],\n  // 10-note scales\n  [\"1P 2m 2M 3m 4P 4A 5P 6m 6M 7M\", \"messiaen's mode #7\"],\n  // 12-note scales\n  [\"1P 2m 2M 3m 3M 4P 5d 5P 6m 6M 7m 7M\", \"chromatic\"]\n];\nvar data_default = SCALES;\n\n// index.ts\nvar NoScaleType = {\n  ...EmptyPcset,\n  intervals: [],\n  aliases: []\n};\nvar dictionary = [];\nvar index = {};\nfunction names() {\n  return dictionary.map((scale) => scale.name);\n}\nfunction get(type) {\n  return index[type] || NoScaleType;\n}\nvar scaleType = get;\nfunction all() {\n  return dictionary.slice();\n}\nvar entries = all;\nfunction keys() {\n  return Object.keys(index);\n}\nfunction removeAll() {\n  dictionary = [];\n  index = {};\n}\nfunction add(intervals, name, aliases = []) {\n  const scale = { ...pcset(intervals), name, intervals, aliases };\n  dictionary.push(scale);\n  index[scale.name] = scale;\n  index[scale.setNum] = scale;\n  index[scale.chroma] = scale;\n  scale.aliases.forEach((alias) => addAlias(scale, alias));\n  return scale;\n}\nfunction addAlias(scale, alias) {\n  index[alias] = scale;\n}\ndata_default.forEach(\n  ([ivls, name, ...aliases]) => add(ivls.split(\" \"), name, aliases)\n);\nvar scale_type_default = {\n  names,\n  get,\n  all,\n  add,\n  removeAll,\n  keys,\n  // deprecated\n  entries,\n  scaleType\n};\nexport {\n  NoScaleType,\n  add,\n  addAlias,\n  all,\n  scale_type_default as default,\n  entries,\n  get,\n  keys,\n  names,\n  removeAll,\n  scaleType\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { isNamedPitch } from \"@tonaljs/pitch\";\nexport * from \"@tonaljs/pitch\";\nexport * from \"@tonaljs/pitch-distance\";\nexport * from \"@tonaljs/pitch-interval\";\nexport * from \"@tonaljs/pitch-note\";\nvar fillStr = (s, n) => Array(Math.abs(n) + 1).join(s);\nfunction deprecate(original, alternative, fn) {\n  return function(...args) {\n    console.warn(`${original} is deprecated. Use ${alternative}.`);\n    return fn.apply(this, args);\n  };\n}\nvar isNamed = deprecate(\"isNamed\", \"isNamedPitch\", isNamedPitch);\nexport {\n  deprecate,\n  fillStr,\n  isNamed\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport {\n  coordinates,\n  isNamedPitch,\n  isPitch,\n  pitch\n} from \"@tonaljs/pitch\";\nvar fillStr = (s, n) => Array(Math.abs(n) + 1).join(s);\nvar NoInterval = Object.freeze({\n  empty: true,\n  name: \"\",\n  num: NaN,\n  q: \"\",\n  type: \"\",\n  step: NaN,\n  alt: NaN,\n  dir: NaN,\n  simple: NaN,\n  semitones: NaN,\n  chroma: NaN,\n  coord: [],\n  oct: NaN\n});\nvar INTERVAL_TONAL_REGEX = \"([-+]?\\\\d+)(d{1,4}|m|M|P|A{1,4})\";\nvar INTERVAL_SHORTHAND_REGEX = \"(AA|A|P|M|m|d|dd)([-+]?\\\\d+)\";\nvar REGEX = new RegExp(\n  \"^\" + INTERVAL_TONAL_REGEX + \"|\" + INTERVAL_SHORTHAND_REGEX + \"$\"\n);\nfunction tokenizeInterval(str) {\n  const m = REGEX.exec(`${str}`);\n  if (m === null) {\n    return [\"\", \"\"];\n  }\n  return m[1] ? [m[1], m[2]] : [m[4], m[3]];\n}\nvar cache = {};\nfunction interval(src) {\n  return typeof src === \"string\" ? cache[src] || (cache[src] = parse(src)) : isPitch(src) ? interval(pitchName(src)) : isNamedPitch(src) ? interval(src.name) : NoInterval;\n}\nvar SIZES = [0, 2, 4, 5, 7, 9, 11];\nvar TYPES = \"PMMPPMM\";\nfunction parse(str) {\n  const tokens = tokenizeInterval(str);\n  if (tokens[0] === \"\") {\n    return NoInterval;\n  }\n  const num = +tokens[0];\n  const q = tokens[1];\n  const step = (Math.abs(num) - 1) % 7;\n  const t = TYPES[step];\n  if (t === \"M\" && q === \"P\") {\n    return NoInterval;\n  }\n  const type = t === \"M\" ? \"majorable\" : \"perfectable\";\n  const name = \"\" + num + q;\n  const dir = num < 0 ? -1 : 1;\n  const simple = num === 8 || num === -8 ? num : dir * (step + 1);\n  const alt = qToAlt(type, q);\n  const oct = Math.floor((Math.abs(num) - 1) / 7);\n  const semitones = dir * (SIZES[step] + alt + 12 * oct);\n  const chroma = (dir * (SIZES[step] + alt) % 12 + 12) % 12;\n  const coord = coordinates({ step, alt, oct, dir });\n  return {\n    empty: false,\n    name,\n    num,\n    q,\n    step,\n    alt,\n    dir,\n    type,\n    simple,\n    semitones,\n    chroma,\n    coord,\n    oct\n  };\n}\nfunction coordToInterval(coord, forceDescending) {\n  const [f, o = 0] = coord;\n  const isDescending = f * 7 + o * 12 < 0;\n  const ivl = forceDescending || isDescending ? [-f, -o, -1] : [f, o, 1];\n  return interval(pitch(ivl));\n}\nfunction qToAlt(type, q) {\n  return q === \"M\" && type === \"majorable\" || q === \"P\" && type === \"perfectable\" ? 0 : q === \"m\" && type === \"majorable\" ? -1 : /^A+$/.test(q) ? q.length : /^d+$/.test(q) ? -1 * (type === \"perfectable\" ? q.length : q.length + 1) : 0;\n}\nfunction pitchName(props) {\n  const { step, alt, oct = 0, dir } = props;\n  if (!dir) {\n    return \"\";\n  }\n  const calcNum = step + 1 + 7 * oct;\n  const num = calcNum === 0 ? step + 1 : calcNum;\n  const d = dir < 0 ? \"-\" : \"\";\n  const type = TYPES[step] === \"M\" ? \"majorable\" : \"perfectable\";\n  const name = d + num + altToQ(type, alt);\n  return name;\n}\nfunction altToQ(type, alt) {\n  if (alt === 0) {\n    return type === \"majorable\" ? \"M\" : \"P\";\n  } else if (alt === -1 && type === \"majorable\") {\n    return \"m\";\n  } else if (alt > 0) {\n    return fillStr(\"A\", alt);\n  } else {\n    return fillStr(\"d\", type === \"perfectable\" ? alt : alt + 1);\n  }\n}\nexport {\n  coordToInterval,\n  interval,\n  tokenizeInterval\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport Chord from \"@tonaljs/chord\";\nimport Interval from \"@tonaljs/interval\";\nimport Note from \"@tonaljs/note\";\nimport Range from \"@tonaljs/range\";\nimport VoiceLeading from \"@tonaljs/voice-leading\";\nimport VoicingDictionary from \"@tonaljs/voicing-dictionary\";\nvar defaultRange = [\"C3\", \"C5\"];\nvar defaultDictionary = VoicingDictionary.all;\nvar defaultVoiceLeading = VoiceLeading.topNoteDiff;\nfunction get(chord, range = defaultRange, dictionary = defaultDictionary, voiceLeading = defaultVoiceLeading, lastVoicing) {\n  const voicings = search(chord, range, dictionary);\n  if (!lastVoicing || !lastVoicing.length) {\n    return voicings[0];\n  } else {\n    return voiceLeading(voicings, lastVoicing);\n  }\n}\nfunction search(chord, range = defaultRange, dictionary = VoicingDictionary.triads) {\n  const [tonic, symbol] = Chord.tokenize(chord);\n  const sets = VoicingDictionary.lookup(symbol, dictionary);\n  if (!sets) {\n    return [];\n  }\n  const voicings = sets.map((intervals) => intervals.split(\" \"));\n  const notesInRange = Range.chromatic(range);\n  return voicings.reduce((voiced, voicing) => {\n    const relativeIntervals = voicing.map(\n      (interval) => Interval.subtract(interval, voicing[0]) || \"\"\n    );\n    const bottomPitchClass = Note.transpose(tonic, voicing[0]);\n    const starts = notesInRange.filter((note) => Note.chroma(note) === Note.chroma(bottomPitchClass)).filter(\n      (note) => (Note.midi(\n        Note.transpose(\n          note,\n          relativeIntervals[relativeIntervals.length - 1]\n        )\n      ) || 0) <= (Note.midi(range[1]) || 0)\n    ).map((note) => Note.enharmonic(note, bottomPitchClass));\n    const notes = starts.map(\n      (start) => relativeIntervals.map((interval) => Note.transpose(start, interval))\n    );\n    return voiced.concat(notes);\n  }, []);\n}\nfunction sequence(chords, range = defaultRange, dictionary = defaultDictionary, voiceLeading = defaultVoiceLeading, lastVoicing) {\n  const { voicings } = chords.reduce(\n    ({ voicings: voicings2, lastVoicing: lastVoicing2 }, chord) => {\n      const voicing = get(chord, range, dictionary, voiceLeading, lastVoicing2);\n      lastVoicing2 = voicing;\n      voicings2.push(voicing);\n      return { voicings: voicings2, lastVoicing: lastVoicing2 };\n    },\n    { voicings: [], lastVoicing }\n  );\n  return voicings;\n}\nvar index_default = {\n  get,\n  search,\n  sequence\n};\nexport {\n  index_default as default,\n  get,\n  search,\n  sequence\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport {\n  coordinates,\n  isNamedPitch,\n  isPitch,\n  pitch\n} from \"@tonaljs/pitch\";\nvar fillStr = (s, n) => Array(Math.abs(n) + 1).join(s);\nvar NoNote = Object.freeze({\n  empty: true,\n  name: \"\",\n  letter: \"\",\n  acc: \"\",\n  pc: \"\",\n  step: NaN,\n  alt: NaN,\n  chroma: NaN,\n  height: NaN,\n  coord: [],\n  midi: null,\n  freq: null\n});\nvar cache = /* @__PURE__ */ new Map();\nvar stepToLetter = (step) => \"CDEFGAB\".charAt(step);\nvar altToAcc = (alt) => alt < 0 ? fillStr(\"b\", -alt) : fillStr(\"#\", alt);\nvar accToAlt = (acc) => acc[0] === \"b\" ? -acc.length : acc.length;\nfunction note(src) {\n  const stringSrc = JSON.stringify(src);\n  const cached = cache.get(stringSrc);\n  if (cached) {\n    return cached;\n  }\n  const value = typeof src === \"string\" ? parse(src) : isPitch(src) ? note(pitchName(src)) : isNamedPitch(src) ? note(src.name) : NoNote;\n  cache.set(stringSrc, value);\n  return value;\n}\nvar REGEX = /^([a-gA-G]?)(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)$/;\nfunction tokenizeNote(str) {\n  const m = REGEX.exec(str);\n  return m ? [m[1].toUpperCase(), m[2].replace(/x/g, \"##\"), m[3], m[4]] : [\"\", \"\", \"\", \"\"];\n}\nfunction coordToNote(noteCoord) {\n  return note(pitch(noteCoord));\n}\nvar mod = (n, m) => (n % m + m) % m;\nvar SEMI = [0, 2, 4, 5, 7, 9, 11];\nfunction parse(noteName) {\n  const tokens = tokenizeNote(noteName);\n  if (tokens[0] === \"\" || tokens[3] !== \"\") {\n    return NoNote;\n  }\n  const letter = tokens[0];\n  const acc = tokens[1];\n  const octStr = tokens[2];\n  const step = (letter.charCodeAt(0) + 3) % 7;\n  const alt = accToAlt(acc);\n  const oct = octStr.length ? +octStr : void 0;\n  const coord = coordinates({ step, alt, oct });\n  const name = letter + acc + octStr;\n  const pc = letter + acc;\n  const chroma = (SEMI[step] + alt + 120) % 12;\n  const height = oct === void 0 ? mod(SEMI[step] + alt, 12) - 12 * 99 : SEMI[step] + alt + 12 * (oct + 1);\n  const midi = height >= 0 && height <= 127 ? height : null;\n  const freq = oct === void 0 ? null : Math.pow(2, (height - 69) / 12) * 440;\n  return {\n    empty: false,\n    acc,\n    alt,\n    chroma,\n    coord,\n    freq,\n    height,\n    letter,\n    midi,\n    name,\n    oct,\n    pc,\n    step\n  };\n}\nfunction pitchName(props) {\n  const { step, alt, oct } = props;\n  const letter = stepToLetter(step);\n  if (!letter) {\n    return \"\";\n  }\n  const pc = letter + altToAcc(alt);\n  return oct || oct === 0 ? pc + oct : pc;\n}\nexport {\n  accToAlt,\n  altToAcc,\n  coordToNote,\n  note,\n  stepToLetter,\n  tokenizeNote\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport {\n  interval as asInterval,\n  coordToInterval\n} from \"@tonaljs/pitch-interval\";\nimport {\n  note as asNote,\n  coordToNote\n} from \"@tonaljs/pitch-note\";\nfunction transpose(noteName, intervalName) {\n  const note = asNote(noteName);\n  const intervalCoord = Array.isArray(intervalName) ? intervalName : asInterval(intervalName).coord;\n  if (note.empty || !intervalCoord || intervalCoord.length < 2) {\n    return \"\";\n  }\n  const noteCoord = note.coord;\n  const tr = noteCoord.length === 1 ? [noteCoord[0] + intervalCoord[0]] : [noteCoord[0] + intervalCoord[0], noteCoord[1] + intervalCoord[1]];\n  return coordToNote(tr).name;\n}\nfunction tonicIntervalsTransposer(intervals, tonic) {\n  const len = intervals.length;\n  return (normalized) => {\n    if (!tonic) return \"\";\n    const index = normalized < 0 ? (len - -normalized % len) % len : normalized % len;\n    const octaves = Math.floor(normalized / len);\n    const root = transpose(tonic, [0, octaves]);\n    return transpose(root, intervals[index]);\n  };\n}\nfunction distance(fromNote, toNote) {\n  const from = asNote(fromNote);\n  const to = asNote(toNote);\n  if (from.empty || to.empty) {\n    return \"\";\n  }\n  const fcoord = from.coord;\n  const tcoord = to.coord;\n  const fifths = tcoord[0] - fcoord[0];\n  const octs = fcoord.length === 2 && tcoord.length === 2 ? tcoord[1] - fcoord[1] : -Math.floor(fifths * 7 / 12);\n  const forceDescending = to.height === from.height && to.midi !== null && from.oct === to.oct && from.step > to.step;\n  return coordToInterval([fifths, octs], forceDescending).name;\n}\nexport {\n  distance,\n  tonicIntervalsTransposer,\n  transpose\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { detect } from \"@tonaljs/chord-detect\";\nimport {\n  all as chordTypes,\n  get as getChordType\n} from \"@tonaljs/chord-type\";\nimport { subtract } from \"@tonaljs/interval\";\nimport { isSubsetOf, isSupersetOf } from \"@tonaljs/pcset\";\nimport {\n  distance,\n  tonicIntervalsTransposer,\n  transpose as transposeNote\n} from \"@tonaljs/pitch-distance\";\nimport { note, tokenizeNote } from \"@tonaljs/pitch-note\";\nimport { all as scaleTypes } from \"@tonaljs/scale-type\";\nimport { detect as detect2 } from \"@tonaljs/chord-detect\";\nvar NoChord = {\n  empty: true,\n  name: \"\",\n  symbol: \"\",\n  root: \"\",\n  bass: \"\",\n  rootDegree: 0,\n  type: \"\",\n  tonic: null,\n  setNum: NaN,\n  quality: \"Unknown\",\n  chroma: \"\",\n  normalized: \"\",\n  aliases: [],\n  notes: [],\n  intervals: []\n};\nfunction tokenize(name) {\n  const [letter, acc, oct, type] = tokenizeNote(name);\n  if (letter === \"\") {\n    return tokenizeBass(\"\", name);\n  } else if (letter === \"A\" && type === \"ug\") {\n    return tokenizeBass(\"\", \"aug\");\n  } else {\n    return tokenizeBass(letter + acc, oct + type);\n  }\n}\nfunction tokenizeBass(note2, chord2) {\n  const split = chord2.split(\"/\");\n  if (split.length === 1) {\n    return [note2, split[0], \"\"];\n  }\n  const [letter, acc, oct, type] = tokenizeNote(split[1]);\n  if (letter !== \"\" && oct === \"\" && type === \"\") {\n    return [note2, split[0], letter + acc];\n  } else {\n    return [note2, chord2, \"\"];\n  }\n}\nfunction get(src) {\n  if (Array.isArray(src)) {\n    return getChord(src[1] || \"\", src[0], src[2]);\n  } else if (src === \"\") {\n    return NoChord;\n  } else {\n    const [tonic, type, bass] = tokenize(src);\n    const chord2 = getChord(type, tonic, bass);\n    return chord2.empty ? getChord(src) : chord2;\n  }\n}\nfunction getChord(typeName, optionalTonic, optionalBass) {\n  const type = getChordType(typeName);\n  const tonic = note(optionalTonic || \"\");\n  const bass = note(optionalBass || \"\");\n  if (type.empty || optionalTonic && tonic.empty || optionalBass && bass.empty) {\n    return NoChord;\n  }\n  const bassInterval = distance(tonic.pc, bass.pc);\n  const bassIndex = type.intervals.indexOf(bassInterval);\n  const hasRoot = bassIndex >= 0;\n  const root = hasRoot ? bass : note(\"\");\n  const rootDegree = bassIndex === -1 ? NaN : bassIndex + 1;\n  const hasBass = bass.pc && bass.pc !== tonic.pc;\n  const intervals = Array.from(type.intervals);\n  if (hasRoot) {\n    for (let i = 1; i < rootDegree; i++) {\n      const num = intervals[0][0];\n      const quality = intervals[0][1];\n      const newNum = parseInt(num, 10) + 7;\n      intervals.push(`${newNum}${quality}`);\n      intervals.shift();\n    }\n  } else if (hasBass) {\n    const ivl = subtract(distance(tonic.pc, bass.pc), \"8P\");\n    if (ivl) intervals.unshift(ivl);\n  }\n  const notes2 = tonic.empty ? [] : intervals.map((i) => transposeNote(tonic.pc, i));\n  typeName = type.aliases.indexOf(typeName) !== -1 ? typeName : type.aliases[0];\n  const symbol = `${tonic.empty ? \"\" : tonic.pc}${typeName}${hasRoot && rootDegree > 1 ? \"/\" + root.pc : hasBass ? \"/\" + bass.pc : \"\"}`;\n  const name = `${optionalTonic ? tonic.pc + \" \" : \"\"}${type.name}${hasRoot && rootDegree > 1 ? \" over \" + root.pc : hasBass ? \" over \" + bass.pc : \"\"}`;\n  return {\n    ...type,\n    name,\n    symbol,\n    tonic: tonic.pc,\n    type: type.name,\n    root: root.pc,\n    bass: hasBass ? bass.pc : \"\",\n    intervals,\n    rootDegree,\n    notes: notes2\n  };\n}\nvar chord = get;\nfunction transpose(chordName, interval) {\n  const [tonic, type, bass] = tokenize(chordName);\n  if (!tonic) {\n    return chordName;\n  }\n  const tr = transposeNote(bass, interval);\n  const slash = tr ? \"/\" + tr : \"\";\n  return transposeNote(tonic, interval) + type + slash;\n}\nfunction chordScales(name) {\n  const s = get(name);\n  const isChordIncluded = isSupersetOf(s.chroma);\n  return scaleTypes().filter((scale) => isChordIncluded(scale.chroma)).map((scale) => scale.name);\n}\nfunction extended(chordName) {\n  const s = get(chordName);\n  const isSuperset = isSupersetOf(s.chroma);\n  return chordTypes().filter((chord2) => isSuperset(chord2.chroma)).map((chord2) => s.tonic + chord2.aliases[0]);\n}\nfunction reduced(chordName) {\n  const s = get(chordName);\n  const isSubset = isSubsetOf(s.chroma);\n  return chordTypes().filter((chord2) => isSubset(chord2.chroma)).map((chord2) => s.tonic + chord2.aliases[0]);\n}\nfunction notes(chordName, tonic) {\n  const chord2 = get(chordName);\n  const note2 = tonic || chord2.tonic;\n  if (!note2 || chord2.empty) return [];\n  return chord2.intervals.map((ivl) => transposeNote(note2, ivl));\n}\nfunction degrees(chordName, tonic) {\n  const chord2 = get(chordName);\n  const note2 = tonic || chord2.tonic;\n  const transpose2 = tonicIntervalsTransposer(chord2.intervals, note2);\n  return (degree) => degree ? transpose2(degree > 0 ? degree - 1 : degree) : \"\";\n}\nfunction steps(chordName, tonic) {\n  const chord2 = get(chordName);\n  const note2 = tonic || chord2.tonic;\n  return tonicIntervalsTransposer(chord2.intervals, note2);\n}\nvar chord_default = {\n  getChord,\n  get,\n  detect,\n  chordScales,\n  extended,\n  reduced,\n  tokenize,\n  transpose,\n  degrees,\n  steps,\n  notes,\n  chord\n};\nexport {\n  chord,\n  chordScales,\n  chord_default as default,\n  degrees,\n  detect2 as detect,\n  extended,\n  get,\n  getChord,\n  notes,\n  reduced,\n  steps,\n  tokenize,\n  transpose\n};\n//# sourceMappingURL=index.mjs.map","// index.ts\nimport { all as chordTypes } from \"@tonaljs/chord-type\";\nimport { range as nums, rotate } from \"@tonaljs/collection\";\nimport { enharmonic, fromMidi, sortedUniqNames } from \"@tonaljs/note\";\nimport {\n  chroma,\n  isChroma,\n  isSubsetOf,\n  isSupersetOf,\n  modes\n} from \"@tonaljs/pcset\";\nimport { tonicIntervalsTransposer, transpose } from \"@tonaljs/pitch-distance\";\nimport { note } from \"@tonaljs/pitch-note\";\nimport {\n  all,\n  get as getScaleType,\n  names as scaleTypeNames,\n  all as scaleTypes\n} from \"@tonaljs/scale-type\";\nvar NoScale = {\n  empty: true,\n  name: \"\",\n  type: \"\",\n  tonic: null,\n  setNum: NaN,\n  chroma: \"\",\n  normalized: \"\",\n  aliases: [],\n  notes: [],\n  intervals: []\n};\nfunction tokenize(name) {\n  if (typeof name !== \"string\") {\n    return [\"\", \"\"];\n  }\n  const i = name.indexOf(\" \");\n  const tonic = note(name.substring(0, i));\n  if (tonic.empty) {\n    const n = note(name);\n    return n.empty ? [\"\", name.toLowerCase()] : [n.name, \"\"];\n  }\n  const type = name.substring(tonic.name.length + 1).toLowerCase();\n  return [tonic.name, type.length ? type : \"\"];\n}\nvar names = scaleTypeNames;\nfunction get(src) {\n  const tokens = Array.isArray(src) ? src : tokenize(src);\n  const tonic = note(tokens[0]).name;\n  const st = getScaleType(tokens[1]);\n  if (st.empty) {\n    return NoScale;\n  }\n  const type = st.name;\n  const notes = tonic ? st.intervals.map((i) => transpose(tonic, i)) : [];\n  const name = tonic ? tonic + \" \" + type : type;\n  return { ...st, name, type, tonic, notes };\n}\nvar scale = get;\nfunction detect(notes, options = {}) {\n  const notesChroma = chroma(notes);\n  const tonic = note(options.tonic ?? notes[0] ?? \"\");\n  const tonicChroma = tonic.chroma;\n  if (tonicChroma === void 0) {\n    return [];\n  }\n  const pitchClasses = notesChroma.split(\"\");\n  pitchClasses[tonicChroma] = \"1\";\n  const scaleChroma = rotate(tonicChroma, pitchClasses).join(\"\");\n  const match = all().find((scaleType) => scaleType.chroma === scaleChroma);\n  const results = [];\n  if (match) {\n    results.push(tonic.name + \" \" + match.name);\n  }\n  if (options.match === \"exact\") {\n    return results;\n  }\n  extended(scaleChroma).forEach((scaleName) => {\n    results.push(tonic.name + \" \" + scaleName);\n  });\n  return results;\n}\nfunction scaleChords(name) {\n  const s = get(name);\n  const inScale = isSubsetOf(s.chroma);\n  return chordTypes().filter((chord) => inScale(chord.chroma)).map((chord) => chord.aliases[0]);\n}\nfunction extended(name) {\n  const chroma2 = isChroma(name) ? name : get(name).chroma;\n  const isSuperset = isSupersetOf(chroma2);\n  return scaleTypes().filter((scale2) => isSuperset(scale2.chroma)).map((scale2) => scale2.name);\n}\nfunction reduced(name) {\n  const isSubset = isSubsetOf(get(name).chroma);\n  return scaleTypes().filter((scale2) => isSubset(scale2.chroma)).map((scale2) => scale2.name);\n}\nfunction scaleNotes(notes) {\n  const pcset = notes.map((n) => note(n).pc).filter((x) => x);\n  const tonic = pcset[0];\n  const scale2 = sortedUniqNames(pcset);\n  return rotate(scale2.indexOf(tonic), scale2);\n}\nfunction modeNames(name) {\n  const s = get(name);\n  if (s.empty) {\n    return [];\n  }\n  const tonics = s.tonic ? s.notes : s.intervals;\n  return modes(s.chroma).map((chroma2, i) => {\n    const modeName = get(chroma2).name;\n    return modeName ? [tonics[i], modeName] : [\"\", \"\"];\n  }).filter((x) => x[0]);\n}\nfunction getNoteNameOf(scale2) {\n  const names2 = Array.isArray(scale2) ? scaleNotes(scale2) : get(scale2).notes;\n  const chromas = names2.map((name) => note(name).chroma);\n  return (noteOrMidi) => {\n    const currNote = typeof noteOrMidi === \"number\" ? note(fromMidi(noteOrMidi)) : note(noteOrMidi);\n    const height = currNote.height;\n    if (height === void 0) return void 0;\n    const chroma2 = height % 12;\n    const position = chromas.indexOf(chroma2);\n    if (position === -1) return void 0;\n    return enharmonic(currNote.name, names2[position]);\n  };\n}\nfunction rangeOf(scale2) {\n  const getName = getNoteNameOf(scale2);\n  return (fromNote, toNote) => {\n    const from = note(fromNote).height;\n    const to = note(toNote).height;\n    if (from === void 0 || to === void 0) return [];\n    return nums(from, to).map(getName).filter((x) => x);\n  };\n}\nfunction degrees(scaleName) {\n  const { intervals, tonic } = get(scaleName);\n  const transpose2 = tonicIntervalsTransposer(intervals, tonic);\n  return (degree) => degree ? transpose2(degree > 0 ? degree - 1 : degree) : \"\";\n}\nfunction steps(scaleName) {\n  const { intervals, tonic } = get(scaleName);\n  return tonicIntervalsTransposer(intervals, tonic);\n}\nvar index_default = {\n  degrees,\n  detect,\n  extended,\n  get,\n  modeNames,\n  names,\n  rangeOf,\n  reduced,\n  scaleChords,\n  scaleNotes,\n  steps,\n  tokenize,\n  // deprecated\n  scale\n};\nexport {\n  index_default as default,\n  degrees,\n  detect,\n  extended,\n  get,\n  modeNames,\n  names,\n  rangeOf,\n  reduced,\n  scale,\n  scaleChords,\n  scaleNotes,\n  steps,\n  tokenize\n};\n//# sourceMappingURL=index.mjs.map","import { Key, Note, Scale } from \"tonal\";\n\nexport type NoteLetter =\n  | \"A\" | \"Bb\" | \"B\" | \"C\" | \"C#\" | \"Db\" | \"D\" | \"Eb\" | \"E\" | \"F\" | \"F#\" | \"Gb\" | \"G\" | \"Ab\";\n\nexport type KeySignature = { tonic: NoteLetter; quality: \"major\" | \"minor\" };\nexport type KeyCandidate = { key: KeySignature; confidence: number; reasons: string[] };\n\nexport type ScaleId =\n  | \"major\" | \"naturalMinor\" | \"majorPent\" | \"minorPent\" | \"blues\"\n  | \"dorian\" | \"mixolydian\" | \"lydian\" | \"harmonicMinor\" | \"melodicMinor\";\n\nexport type ScaleMeta = { id: ScaleId; name: string; tier: \"free\" | \"pro\" };\nexport type ScaleCandidate = { scale: ScaleMeta; score: number };\n\nexport type AnalysisResult = {\n  keyCandidates: KeyCandidate[];\n  recommendedScales: ScaleCandidate[];\n  perSection?: SectionAnalysis[];\n};\n\n// Phase E-5: Section-weighted analysis\nexport type SectionName =\n  | \"Intro\" | \"Verse\" | \"PreChorus\" | \"Chorus\" | \"PostChorus\"\n  | \"Bridge\" | \"Solo\" | \"Interlude\" | \"Outro\" | \"Breakdown\" | \"Custom\";\n\nexport interface SectionDef {\n  name: SectionName;\n  start: number;     // inclusive (0-based index in chords[])\n  end: number;       // inclusive\n  repeat?: number;   // default 1\n  weightMul?: number; // optional override\n}\n\nexport interface SectionAnalysis {\n  section: SectionDef;\n  best: KeyCandidate;\n  ranking: KeyCandidate[];\n}\n\nexport interface AnalyzeOpts {\n  sections?: SectionDef[];\n  weights?: Partial<{\n    section: Partial<Record<SectionName, number>>;\n    songHead: number; // default 1.2\n    songTail: number; // default 1.3\n    sectionEdge: number; // default 1.1\n  }>;\n  cadence?: boolean; // enable cadence detection (future)\n}\n\nconst ALL_TONICS: NoteLetter[] = [\n  \"C\", \"C#\", \"D\", \"Eb\", \"E\", \"F\", \"F#\", \"G\", \"Ab\", \"A\", \"Bb\", \"B\",\n];\n\n// Phase E-5: Default section weights (based on musical importance)\nconst DEFAULT_SECTION_WEIGHTS: Record<SectionName, number> = {\n  Intro: 0.8,\n  Verse: 1.0,\n  PreChorus: 1.2,\n  Chorus: 1.6,      // サビは最重要\n  PostChorus: 1.3,\n  Bridge: 0.9,\n  Solo: 1.0,\n  Interlude: 0.8,\n  Outro: 0.9,\n  Breakdown: 0.9,\n  Custom: 1.0,\n};\n\nconst DEFAULT_WEIGHTS = {\n  songHead: 1.2,  // 既存の先頭重み\n  songTail: 1.3,  // 既存の末尾重み\n  sectionEdge: 1.1, // セクション先頭/末尾の補正\n};\n\nconst SCALE_DEFS: Record<ScaleId, ScaleMeta> = {\n  major: { id: \"major\", name: \"Major Scale\", tier: \"free\" },\n  naturalMinor: { id: \"naturalMinor\", name: \"Natural Minor Scale\", tier: \"free\" },\n  majorPent: { id: \"majorPent\", name: \"Major Pentatonic\", tier: \"free\" },\n  minorPent: { id: \"minorPent\", name: \"Minor Pentatonic\", tier: \"free\" },\n  blues: { id: \"blues\", name: \"Blues Scale\", tier: \"free\" },\n  dorian: { id: \"dorian\", name: \"Dorian Mode\", tier: \"pro\" },\n  mixolydian: { id: \"mixolydian\", name: \"Mixolydian Mode\", tier: \"pro\" },\n  lydian: { id: \"lydian\", name: \"Lydian Mode\", tier: \"pro\" },\n  harmonicMinor: { id: \"harmonicMinor\", name: \"Harmonic Minor\", tier: \"pro\" },\n  melodicMinor: { id: \"melodicMinor\", name: \"Melodic Minor\", tier: \"pro\" },\n};\n\ntype ParsedChord = {\n  raw: string;\n  root: string; // canonical pitch class, e.g., C, C#, Bb\n  triad: \"maj\" | \"min\" | \"dim\";\n  isDominantLike: boolean; // contains \"7\" (for V/V detection)\n};\n\nfunction normalizeNote(input: string): string {\n  const n = Note.pitchClass(input);\n  return n || input;\n}\n\nfunction parseChordToken(token: string): ParsedChord | null {\n  if (!token) return null;\n  // Remove bass/slash\n  const [head] = token.split(\"/\");\n  const m = head.match(/^([A-Ga-g])([#b]?)(.*)$/);\n  if (!m) return null;\n  const root = normalizeNote((m[1] + m[2]).toUpperCase());\n  const rest = (m[3] || \"\").toLowerCase();\n  // Order matters: detect maj before generic m\n  let triad: ParsedChord[\"triad\"] = \"maj\";\n  if (/(m7b5|ø|dim)/.test(rest)) triad = \"dim\";\n  else if (/maj/.test(rest)) triad = \"maj\";\n  else if (/(^|[^a-z])m(?!aj)/.test(rest)) triad = \"min\";\n  else if (/sus|aug/.test(rest)) triad = \"maj\"; // treat as functional major\n  else triad = \"maj\";\n  const isDominantLike = /(^|[^a-z])7(?![a-z0-9])/.test(rest) || /7/.test(rest);\n  return { raw: token, root, triad, isDominantLike };\n}\n\nfunction getDiatonicChords(key: KeySignature): string[] {\n  if (key.quality === \"major\") {\n    const mk = Key.majorKey(key.tonic);\n    return mk.chords || [];\n  }\n  const nk = Key.minorKey(key.tonic);\n  return nk.natural?.chords || nk.chords || [];\n}\n\nfunction isDiatonicMatch(chord: ParsedChord, diatonic: string[]): boolean {\n  const target = chord.root + (chord.triad === \"maj\" ? \"\" : chord.triad === \"min\" ? \"m\" : \"dim\");\n  return diatonic.includes(target);\n}\n\nfunction fifth(note: string): string {\n  const p = Note.transpose(note, \"5P\");\n  return normalizeNote(p);\n}\n\nfunction flat(note: string): string {\n  const p = Note.transpose(note, \"-1m\");\n  return normalizeNote(p);\n}\n\nfunction isSecondaryDominant(chord: ParsedChord, key: KeySignature): boolean {\n  // very light-weight V/V detector: major triad (or 7) on degree 2's major? We'll approximate as fifth of fifth\n  const v = fifth(key.tonic);\n  const vOfV = fifth(v);\n  return chord.root === vOfV && (chord.triad === \"maj\" || chord.isDominantLike);\n}\n\nfunction isSubdominantMinorOrbVII(chord: ParsedChord, key: KeySignature): boolean {\n  if (key.quality !== \"major\") return false;\n  const mk = Key.majorKey(key.tonic);\n  const scale = mk.scale || [];\n  const degree4 = scale[3];\n  const degree7 = scale[6];\n  const ivMinor = degree4 ? normalizeNote(degree4) : \"\";\n  const bVII = degree7 ? normalizeNote(flat(degree7)) : \"\";\n  const isIvMinor = chord.root === ivMinor && chord.triad === \"min\";\n  const isB7 = chord.root === bVII && chord.triad === \"maj\";\n  return !!(isIvMinor || isB7);\n}\n\nfunction scoreForKey(\n  chords: ParsedChord[],\n  key: KeySignature,\n  weights?: number[]\n): { score: number; reasons: string[] } {\n  const diatonic = getDiatonicChords(key);\n  let reasons: string[] = [];\n  \n  // Phase E-5: Use provided weights or fall back to legacy position weights\n  const W = weights || chords.map((_, i) => (i === 0 ? 1.2 : i === chords.length - 1 ? 1.3 : 1));\n  const total = W.reduce((a, b) => a + b, 0);\n  \n  let acc = 0;\n  chords.forEach((ch, i) => {\n    const w = W[i];\n    if (isDiatonicMatch(ch, diatonic)) {\n      acc += w * 1.0; // 100%\n    } else if (isSecondaryDominant(ch, key)) {\n      acc += w * 0.9; // 85-95%\n      reasons.push(`Secondary dominant tolerated: ${ch.raw}`);\n    } else if (isSubdominantMinorOrbVII(ch, key)) {\n      acc += w * 0.8; // 70-85%\n      reasons.push(`Borrowed chord tolerated: ${ch.raw}`);\n    } else {\n      acc += w * 0.5; // potential modulation or out-of-key\n    }\n  });\n  const confidence = Math.round((acc / total) * 100);\n  reasons.unshift(`${diatonic.length} diatonic chords in ${key.tonic} ${key.quality}`);\n  return { score: confidence, reasons };\n}\n\nfunction recommendScales(topKey: KeySignature, chords: ParsedChord[]): ScaleCandidate[] {\n  const list: ScaleMeta[] = [\n    SCALE_DEFS.major,\n    SCALE_DEFS.naturalMinor,\n    SCALE_DEFS.majorPent,\n    SCALE_DEFS.minorPent,\n    SCALE_DEFS.blues,\n    SCALE_DEFS.dorian,\n    SCALE_DEFS.mixolydian,\n    SCALE_DEFS.lydian,\n    SCALE_DEFS.harmonicMinor,\n    SCALE_DEFS.melodicMinor,\n  ];\n  // Build a set of chord roots to approximate note coverage\n  const chordRoots = new Set(chords.map((c) => c.root));\n  const keyTonic = topKey.tonic;\n  const scaleScores = list.map((sm) => {\n    const scaleName =\n      sm.id === \"major\" ? \"Major\" :\n      sm.id === \"naturalMinor\" ? \"Natural Minor\" :\n      sm.id === \"majorPent\" ? \"Major Pentatonic\" :\n      sm.id === \"minorPent\" ? \"Minor Pentatonic\" :\n      sm.id === \"blues\" ? \"Blues\" :\n      sm.id === \"dorian\" ? \"Dorian\" :\n      sm.id === \"mixolydian\" ? \"Mixolydian\" :\n      sm.id === \"lydian\" ? \"Lydian\" :\n      sm.id === \"harmonicMinor\" ? \"Harmonic Minor\" :\n      \"Melodic Minor\";\n    const sc = Scale.get(`${keyTonic} ${scaleName}`);\n    const noteSet = new Set((sc.notes || []).map(normalizeNote));\n    const matches = Array.from(chordRoots).filter((r) => noteSet.has(r)).length;\n    const score = matches / Math.max(1, chordRoots.size);\n    return { scale: sm, score } as ScaleCandidate;\n  });\n  scaleScores.sort((a, b) => b.score - a.score);\n  return scaleScores.slice(0, 5);\n}\n\n// Phase E-5: Compute weights for each chord based on sections\nfunction computeWeights(chordCount: number, opts: AnalyzeOpts): number[] {\n  const W = new Array(chordCount).fill(1.0);\n  const sections = opts.sections || [];\n  \n  const sectionWeights = { ...DEFAULT_SECTION_WEIGHTS, ...(opts.weights?.section ?? {}) };\n  const songHead = opts.weights?.songHead ?? DEFAULT_WEIGHTS.songHead;\n  const songTail = opts.weights?.songTail ?? DEFAULT_WEIGHTS.songTail;\n  const sectionEdge = opts.weights?.sectionEdge ?? DEFAULT_WEIGHTS.sectionEdge;\n  \n  // Apply section weights\n  for (const s of sections) {\n    const repeat = s.repeat ?? 1;\n    const base = (s.weightMul ?? sectionWeights[s.name] ?? 1.0) * Math.sqrt(repeat);\n    \n    for (let i = s.start; i <= s.end && i < chordCount; i++) {\n      W[i] *= base;\n    }\n    \n    // Section edge bonus\n    if (s.start < chordCount) W[s.start] *= sectionEdge;\n    if (s.end < chordCount) W[s.end] *= sectionEdge;\n  }\n  \n  // Song-level head/tail bonus (legacy compatibility)\n  if (chordCount > 0) W[0] *= songHead;\n  if (chordCount > 1) W[chordCount - 1] *= songTail;\n  \n  // Normalize (Σ W = 1)\n  const sumW = W.reduce((a, b) => a + b, 0) || 1;\n  return W.map(w => w / sumW);\n}\n\nexport function analyzeChordProgression(\n  rawTokens: string[],\n  opts: AnalyzeOpts = {}\n): AnalysisResult {\n  const chords = rawTokens\n    .map((t) => t.trim())\n    .filter(Boolean)\n    .map(parseChordToken)\n    .filter((c): c is ParsedChord => !!c);\n\n  // Phase E-5: Compute weights with section awareness\n  const weights = computeWeights(chords.length, opts);\n  \n  const candidates: KeyCandidate[] = [];\n  for (const tonic of ALL_TONICS) {\n    for (const quality of [\"major\", \"minor\"] as const) {\n      const { score, reasons } = scoreForKey(\n        chords,\n        { tonic: tonic as NoteLetter, quality },\n        weights\n      );\n      candidates.push({ key: { tonic: tonic as NoteLetter, quality }, confidence: score, reasons });\n    }\n  }\n  candidates.sort((a, b) => b.confidence - a.confidence);\n  const keyCandidates = candidates.slice(0, 5); // v3.1: 3→5候補に拡張（iOS UI改善）\n  const recommendedScales = recommendScales(keyCandidates[0].key, chords);\n  \n  // Phase E-5: Per-section analysis (optional)\n  let perSection: SectionAnalysis[] | undefined;\n  if (opts.sections && opts.sections.length > 0) {\n    perSection = opts.sections.map(sec => {\n      const slice = rawTokens.slice(sec.start, Math.min(sec.end + 1, rawTokens.length));\n      // Analyze section without section weights (just the chords themselves)\n      const local = analyzeChordProgression(slice, {\n        weights: {\n          songHead: 1.0, // No global position bias for local analysis\n          songTail: 1.0,\n        }\n      });\n      return {\n        section: sec,\n        best: local.keyCandidates[0],\n        ranking: local.keyCandidates\n      };\n    });\n  }\n  \n  return { keyCandidates, recommendedScales, perSection };\n}\n\nexport type DiatonicRequest = {\n  tonic: NoteLetter;\n  quality: \"major\" | \"minor\";\n  scale: \"major\" | \"naturalMinor\";\n};\n\nexport type DiatonicResponse = {\n  chords: string[];\n};\n\nexport function getDiatonicChordsFor(\n  req: DiatonicRequest\n): DiatonicResponse {\n  const key: KeySignature = { tonic: req.tonic, quality: req.quality };\n  const chords = getDiatonicChords(key);\n  return { chords };\n}\n\n\n","\"use client\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { SCALE_CATALOG } from \"@/lib/scaleCatalog\";\nimport { degreeLabelFor, degreeRomanFor, getScalePitches, type ScaleType } from \"@/lib/scales\";\nimport { player } from \"@/lib/audio/player\";\nimport type { FormShape, Quality } from \"@/lib/chordForms\";\nconst PITCHES12 = ['C','C#','D','Eb','E','F','F#','G','Ab','A','Bb','B'] as const;\n\ntype FretboardProps = {\n  strings?: string[]; // high -> low\n  frets?: number;\n  dotPositions?: number[];\n  overlay?: { display: 'degrees'|'names'; viewMode?: 'sounding'; capo: number; notes?: string[]; chordNotes?: string[]; showScaleGhost?: boolean; scaleRootPc?: number; scaleType?: ScaleType; context?: { chordRootPc?: number; quality?: Quality } } | null;\n  onRequestForms?: (at:{x:number;y:number}, ctx:{rootPc:number; quality: Quality})=>void;\n  formShape?: FormShape | null;\n};\n\n// --- Dot visuals (shared for Degrees/Names) ---\nconst DOT_PX_DESKTOP = 26;\nconst DOT_PX_MOBILE = 24;\nconst FONT_PX_DESKTOP = 14;\nconst FONT_PX_MOBILE = 13;\n// Original palette（page base: show degree colours）\nconst COLOR_ROOT   = \"hsl(355 80% 60% / .95)\"; // root\nconst COLOR_DEG3   = \"hsl(205 90% 56% / .90)\"; // 3rd\nconst COLOR_DEG5   = \"hsl(150 65% 45% / .90)\"; // 5th\nconst COLOR_DEG7   = \"hsl(48 95% 55% / .92)\";  // 7th\n// Preview palette（suggested-scale overlay: chord vs others）\nconst COLOR_CHORD  = \"hsl(0 85% 55% / .95)\";   // chord tones (red)\nconst COLOR_SCALE  = \"hsl(210 10% 72% / .70)\"; // non-chord scale tones (gray)\nconst COLOR_OUT    = \"hsl(210 6% 38% / .30)\";\nconst COLOR_GHOST  = \"hsl(210 12% 58% / .60)\"; // unified ghost color (darker)\nconst LABEL_COLOR = \"#0b0b0b\";\n\nconst dotStyle = (bg: string, isMobile: boolean): React.CSSProperties => {\n  const size = isMobile ? DOT_PX_MOBILE : DOT_PX_DESKTOP;\n  return {\n    width: size,\n    height: size,\n    borderRadius: size,\n    background: bg,\n    color: LABEL_COLOR,\n    fontWeight: 700,\n    fontSize: isMobile ? FONT_PX_MOBILE : FONT_PX_DESKTOP,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    transform: 'translate(-50%, -50%)',\n    textShadow: '0 0 1px rgba(0,0,0,.55)',\n    WebkitTextStroke: '0.3px rgba(255,255,255,.35)',\n    userSelect: 'none',\n  };\n};\n\nfunction colorForDegreeLabel(preview: boolean, lbl: string | null, isChordTone: boolean, isInScale: boolean, isRoot: boolean) {\n  if (!isInScale) return COLOR_OUT;\n  if (preview) {\n    return isChordTone ? COLOR_CHORD : COLOR_SCALE;\n  }\n  if (isRoot) return COLOR_ROOT;\n  if (!lbl) return COLOR_SCALE;\n  const l = lbl.replace(/\\s/g, \"\");\n  if (l.includes(\"3\")) return COLOR_DEG3;\n  if (l.includes(\"5\")) return COLOR_DEG5;\n  if (l.includes(\"7\")) return COLOR_DEG7;\n  return COLOR_SCALE;\n}\n\nfunction ghostFromBaseColor(base: string, alpha = 0.85): string {\n  try {\n    if (base.includes('/')) {\n      return base.replace(/\\/(.*?)\\)/, `/ ${alpha})`);\n    }\n    if (base.endsWith(')')) return base.replace(/\\)$/, ` / ${alpha})`);\n  } catch {}\n  return base;\n}\n\nexport default function Fretboard({\n  strings = ['E','B','G','D','A','E'],\n  frets = 15,\n  dotPositions: _dotPositions = [3,5,7,9,12,15],\n  overlay = null,\n  onRequestForms,\n  formShape = null,\n}: FretboardProps) {\n  const wrapRef = useRef<HTMLDivElement | null>(null);\n  // SSRと初回クライアント描画の一致を保つため、初期値はfalse（デスクトップ想定）\n  const [isMobile, setIsMobile] = useState(false);\n  const [pressedCell, setPressedCell] = useState<{ r: number; c: number; ver: number } | null>(null);\n  useEffect(() => {\n    const update = () => {\n      try { setIsMobile(window.innerWidth < 380); } catch { /* noop */ }\n    };\n    update();\n    window.addEventListener('resize', update);\n    return () => window.removeEventListener('resize', update);\n  }, []);\n  // ScaleとChordを統合したoverlayオブジェクトを作成\n  // 親から `overlay` が渡されている場合はそれを最優先（Find Key などの初期表示用）\n  const overlayEff = overlay ?? null;\n  // Layout constants\n  const LEFT_GUTTER = 44;   // px  // compact gutter (reduced)\n  const SPACE_W = 28;       // px  // standard fret min width\n  const ROW_H = 28;         // px\n  const TOP_BAR_H = 32;     // px\n  const OPEN_GAP = 20;      // px additional gap for open column (increased by +8px)\n  const ZERO_COL_W = SPACE_W + OPEN_GAP; // widened open column\n  const COLS = (f: number) => `${ZERO_COL_W}px repeat(${f}, minmax(${SPACE_W}px, 1fr))`;\n  const NUT_WIDTH = 3;      // px\n\n  // --- Chord label long-press (for mouse/touch on the label only) ---\n  const PRESS_MS = 400;\n  const pressTimer = useRef<number | null>(null);\n  const endPress = () => { if (pressTimer.current!==null){ clearTimeout(pressTimer.current); pressTimer.current=null; } };\n  const startPress = (e: React.PointerEvent, ctx:{rootPc:number; quality:Quality}) => {\n    if (!onRequestForms) return;\n    // マウスの長押しは不要だが、統一して実装\n    endPress();\n    pressTimer.current = window.setTimeout(()=>{\n      onRequestForms({ x:e.clientX, y:e.clientY }, ctx);\n    }, PRESS_MS);\n  };\n\n  useEffect(() => {}, [frets, strings.length]);\n  return (\n    <div className=\"rounded-lg border p-3 overflow-x-auto ot-fretboard ot-fb-compact\">\n      <div className=\"min-w-[640px]\">\n        <div ref={wrapRef} className=\"relative\" style={{ height: TOP_BAR_H + strings.length * ROW_H + 16 }}>\n          {/* nut line is rendered inside grid below */}\n          {/* Fret numbers top bar */}\n          <div\n            className=\"pointer-events-none absolute top-1 grid text-[12px] md:text-sm text-foreground/80\"\n            style={{\n              gridTemplateColumns: COLS(frets),\n              height: TOP_BAR_H,\n              left: LEFT_GUTTER,\n              right: 0,\n            }}\n          >\n            {Array.from({ length: frets+1 }).map((_, col) => {\n              const show = [0,1,3,5,7,9,12,15].includes(col);\n              if (!show) return <div key={col} />;\n              return (\n                <div key={col} className=\"flex items-start justify-center\">\n                  <span className=\"inline-block px-1 rounded bg-background/80\">{col}</span>\n                </div>\n              );\n            })}\n          </div>\n          {/* chord forms UI removed per spec */}\n          {/* Left tuning labels (E B G D A E) */}\n          <div\n            className=\"absolute select-none\"\n            style={{\n              left: 0,\n              top: TOP_BAR_H,\n              width: LEFT_GUTTER,\n              height: strings.length * ROW_H,\n              display: 'grid',\n              gridTemplateRows: `repeat(${strings.length}, ${ROW_H}px)`,\n            }}\n            aria-hidden=\"true\"\n          >\n            {strings.map((s, i) => (\n              <div key={`lbl-${i}`} className=\"flex items-center justify-center text-xs md:text-sm leading-none text-muted-foreground\">\n                {s}\n              </div>\n            ))}\n          </div>\n            <div className=\"absolute right-0 bottom-0 grid\" style={{ top: TOP_BAR_H, left: LEFT_GUTTER, width: `calc(100% - ${LEFT_GUTTER}px)`, gridTemplateColumns: COLS(frets), gridTemplateRows: `repeat(${strings.length}, ${ROW_H}px)` }}>\n            {strings.map((s, rowIdx) => (\n              <React.Fragment key={`row-${rowIdx}`}>\n                {/* Open space cell */}\n                <div className=\"relative\" key={`open-${rowIdx}`}>{renderOpenMarker({ overlay: overlayEff, strings, rowIdx, isMobile })}</div>\n                {Array.from({ length: frets }).map((_, colIdx) => (\n                  <div\n                    key={`c-${rowIdx}-${colIdx}`}\n                    className={`relative ${colIdx===0 ? 'border-l border-transparent' : 'border-l border-black/10 dark:border-white/10'} ${pressedCell && pressedCell.r===rowIdx && pressedCell.c===colIdx ? 'fb-pressed' : ''} cursor-pointer select-none`}\n                    onClick={async()=>{\n                      // 空白やゴースト領域でもタップで単音を軽く試聴\n                      const STRING_OPEN_MIDI = [64, 59, 55, 50, 45, 40];\n                      const baseMidi = STRING_OPEN_MIDI[Math.min(rowIdx, STRING_OPEN_MIDI.length - 1)] ?? 64;\n                      const midi = baseMidi + (colIdx + 1);\n                      // 短い押下エフェクト\n                      setPressedCell(prev => ({ r: rowIdx, c: colIdx, ver: (prev?.ver ?? 0) + 1 }));\n                      const localVer = (pressedCell?.ver ?? 0) + 1;\n                      window.setTimeout(() => {\n                        setPressedCell(cur => (cur && cur.r===rowIdx && cur.c===colIdx && cur.ver===localVer) ? null : cur);\n                      }, 180);\n                      try { await player.resume(); player.playNote(midi, 240); } catch {}\n                    }}\n                  >\n                    {renderMarker({ overlay: overlayEff, strings, rowIdx, colIdx, isMobile })}\n                  </div>\n                ))}\n              </React.Fragment>\n            ))}\n            {/* Nut line (between 0 and 1) */}\n            <div\n              aria-hidden\n              className=\"absolute pointer-events-none z-[20] bg-black/60 dark:bg-white/70\"\n              style={{\n                left: ZERO_COL_W - NUT_WIDTH / 2,\n                top: 0,\n                bottom: 0,\n                width: NUT_WIDTH,\n                borderRadius: 2,\n              }}\n            />\n          </div>\n        </div>\n      </div>\n      {formShape && renderFormOverlay({ formShape, LEFT_GUTTER, TOP_BAR_H, SPACE_W, ROW_H })}\n    </div>\n  );\n}\n\nconst pitchIndexMap: Record<string, number> = {\n  C: 0, \"C#\": 1, Db: 1, D: 2, \"D#\": 3, Eb: 3, E: 4, F: 5, \"F#\": 6, Gb: 6,\n  G: 7, \"G#\": 8, Ab: 8, A: 9, \"A#\": 10, Bb: 10, B: 11,\n};\nconst pitchIndex = (note: string): number => pitchIndexMap[note] ?? 0;\n// Fallback degree label map (chromatic → degree text)\nfunction fallbackDegreeLabel(notePc: number, rootPc: number): string {\n  const d = (notePc - rootPc + 12) % 12;\n  const arr = [\"1\",\"b2\",\"2\",\"b3\",\"3\",\"4\",\"#4\",\"5\",\"b6\",\"6\",\"b7\",\"7\"] as const;\n  return arr[d];\n}\n\nfunction renderMarker({ overlay, strings, rowIdx, colIdx, isMobile }:{ overlay: FretboardProps['overlay']; strings: string[]; rowIdx: number; colIdx: number; isMobile: boolean; }){\n  if (!overlay) return null;\n  const chordNotes = overlay.chordNotes ?? overlay.notes ?? [];\n  const hasChord = (chordNotes?.length ?? 0) > 0;\n  const chordRootIdx = hasChord ? pitchIndex(chordNotes[0] ?? \"C\") : 0;\n  const set = new Set((chordNotes || []).map((note) => pitchIndex(note ?? \"C\")));\n  const openPc = pitchIndex(strings[rowIdx] ?? \"E\");\n  // Shaped: treat capo as new nut → subtract capo semitones\n  // column index 0 represents fret 1 (fret 0 = open is not drawn as a column)\n  const fretN = colIdx + 1;\n  const spc = (openPc + fretN) % 12; // shapedは廃止・常にsounding\n  // 実音のMIDI（弦の実チューニング＋フレット数）\n  const STRING_OPEN_MIDI = [64, 59, 55, 50, 45, 40]; // E4, B3, G3, D3, A2, E2 (high -> low)\n  const baseMidi = STRING_OPEN_MIDI[Math.min(rowIdx, STRING_OPEN_MIDI.length - 1)] ?? 64;\n  const midi = baseMidi + fretN;\n  // scale-aware style & label\n  const scaleRoot = overlay.scaleRootPc;\n  const scaleType = overlay.scaleType;\n  const inScale = ((): boolean => {\n    if (typeof scaleRoot !== 'number' || !scaleType) return true;\n    const iv = (spc - scaleRoot + 120) % 12;\n    const ivs = getScalePitches(scaleRoot, overlay.scaleType as any).map(v => (v - scaleRoot + 120) % 12);\n    return ivs.includes(iv);\n  })();\n  // Optionally draw scale ghost when in scale and not a chord tone\n  const hasChordOverlay = (chordNotes?.length ?? 0) > 0;\n  const drawGhost = (overlay.showScaleGhost ?? true) && hasChordOverlay && inScale && !set.has(spc);\n  // Draw chord tone if provided\n  const drawChord = set.has(spc);\n  const drawScaleMain = !hasChordOverlay && inScale;\n  if (!drawGhost && !drawChord && !drawScaleMain) return null;\n  const iv = typeof scaleRoot === 'number' ? (spc - scaleRoot + 120) % 12 : 0;\n  const isRoot = iv === 0;\n  const isChordTone = set.has(spc) || [0,4,7,10,11].includes(iv); // root/3/5/7 as baseline\n  const degreeLbl = !inScale || typeof scaleRoot !== 'number' || !scaleType ? null : (degreeLabelFor(spc, scaleRoot, overlay.scaleType as any) ?? null);\n  const baseColor = colorForDegreeLabel(false, degreeLbl, isChordTone, inScale, isRoot);\n  const showDegrees = overlay.display === 'degrees';\n  const fallbackRoot = (typeof scaleRoot === 'number' ? scaleRoot : chordRootIdx);\n  const label = (showDegrees)\n    ? ((degreeRomanFor(spc, fallbackRoot, overlay.scaleType as any) ?? degreeLbl ?? fallbackDegreeLabel(spc, fallbackRoot)))\n    : PITCHES12[spc];\n  const dense = (() => { const def = SCALE_CATALOG.find(s => s.id === (overlay.scaleType as any)); return (def?.degrees?.length ?? 0) > 7; })();\n  const fretLabel = colIdx + 1;\n  const stringNumber = rowIdx + 1;\n  const ariaLabel = `string ${stringNumber}, fret ${fretLabel}, ${label === '1' ? 'root' : label}`;\n  return (\n    <div className=\"absolute inset-0\" aria-live=\"polite\">\n      {drawGhost && (\n        <div className={`absolute left-1/2 top-1/2 fret-dot--ghost${dense ? ' ghost--dense' : ''}`} style={{ color: ghostFromBaseColor(baseColor) }} aria-hidden />\n      )}\n      {drawScaleMain && (\n        <button\n          type=\"button\"\n          onClick={async()=>{ await player.resume(); player.playNote(midi); }}\n          style={dotStyle(baseColor, isMobile)}\n          className=\"absolute left-1/2 top-1/2 fret-dot fret-dot--main\"\n          aria-label={ariaLabel}\n        >\n          {label}\n        </button>\n      )}\n      {drawChord && (\n        <button\n          type=\"button\"\n          onClick={async()=>{ await player.resume(); player.playNote(midi); }}\n          style={dotStyle(baseColor, isMobile)}\n          className=\"absolute left-1/2 top-1/2 fret-dot fret-dot--main fret-dot--chord\"\n          aria-label={ariaLabel}\n        >\n          {label}\n        </button>\n      )}\n    </div>\n  );\n}\n\nfunction renderOpenMarker({ overlay, strings, rowIdx, isMobile }:{ overlay: FretboardProps['overlay']; strings: string[]; rowIdx: number; isMobile: boolean; }){\n  if (!overlay) return null;\n  const chordNotes = overlay.chordNotes ?? overlay.notes ?? [];\n  const hasChord = (chordNotes?.length ?? 0) > 0;\n  const tonicIdx = hasChord ? pitchIndex(chordNotes[0] ?? \"C\") : 0;\n  const set = new Set((chordNotes || []).map((note) => pitchIndex(note ?? \"C\")));\n  const openPc = pitchIndex(strings[rowIdx] ?? \"E\");\n  const spcSounding = openPc; // open = fret 0 sounding\n  const spc = spcSounding; // shapedは廃止・常にsounding\n  // 実音のMIDI（弦の実チューニングの開放音）\n  const STRING_OPEN_MIDI = [64, 59, 55, 50, 45, 40];\n  const midi = STRING_OPEN_MIDI[Math.min(rowIdx, STRING_OPEN_MIDI.length - 1)] ?? 64;\n  const scaleRoot = overlay.scaleRootPc;\n  const scaleType = overlay.scaleType;\n  const inScale = ((): boolean => {\n    if (typeof scaleRoot !== 'number' || !scaleType) return true;\n    const iv = (spc - scaleRoot + 120) % 12;\n    const ivs = getScalePitches(scaleRoot, overlay.scaleType as any).map(v => (v - scaleRoot + 120) % 12);\n    return ivs.includes(iv);\n  })();\n  const hasChordOverlay = (chordNotes?.length ?? 0) > 0;\n  const drawGhost = (overlay.showScaleGhost ?? true) && hasChordOverlay && inScale && !set.has(spc);\n  const drawChord = set.has(spc);\n  const drawScaleMain = !hasChordOverlay && inScale;\n  if (!drawGhost && !drawChord && !drawScaleMain) return null;\n  const iv = typeof scaleRoot === 'number' ? (spc - scaleRoot + 120) % 12 : 0;\n  const isRoot = iv === 0;\n  const isChordTone = [0,4,7,10,11].includes(iv) && inScale;\n  const degreeLbl = !inScale || typeof scaleRoot !== 'number' || !scaleType ? null : (degreeLabelFor(spc, scaleRoot, overlay.scaleType as any) ?? null);\n  const bg = colorForDegreeLabel(false, degreeLbl, isChordTone, inScale, isRoot);\n  const showDegrees = overlay.display === 'degrees';\n  const label = (showDegrees)\n    ? ((degreeRomanFor(spc, tonicIdx, overlay.scaleType as any) ?? degreeLbl ?? fallbackDegreeLabel(spc, tonicIdx)))\n    : PITCHES12[spc];\n  const dense = (() => { const def = SCALE_CATALOG.find(s => s.id === (overlay.scaleType as any)); return (def?.degrees?.length ?? 0) > 7; })();\n  const stringNumber = rowIdx + 1;\n  const ariaLabel = `string ${stringNumber}, fret 0, ${label === '1' ? 'root' : label}`;\n  return (\n    <div className=\"absolute inset-0\">\n      {drawGhost && (\n        <div className={`absolute left-1/2 top-1/2 fret-dot--ghost${dense ? ' ghost--dense' : ''}`} style={{ color: COLOR_GHOST }} aria-hidden />\n      )}\n      {drawScaleMain && (\n        <button\n          type=\"button\"\n          onClick={async()=>{ await player.resume(); player.playNote(midi); }}\n          style={dotStyle(bg, isMobile)}\n          className=\"absolute left-1/2 top-1/2 fret-dot fret-dot--main\"\n          aria-label={ariaLabel}\n        >\n          {label}\n        </button>\n      )}\n      {drawChord && (\n        <button\n          type=\"button\"\n          onClick={async()=>{ await player.resume(); player.playNote(midi); }}\n          style={dotStyle(bg, isMobile)}\n          className=\"absolute left-1/2 top-1/2 fret-dot fret-dot--main fret-dot--chord\"\n          aria-label={ariaLabel}\n        >\n          {label}\n        </button>\n      )}\n    </div>\n  );\n}\n\nfunction renderFormOverlay({ formShape, LEFT_GUTTER, TOP_BAR_H, SPACE_W, ROW_H }:{ formShape: FormShape; LEFT_GUTTER:number; TOP_BAR_H:number; SPACE_W:number; ROW_H:number; }) {\n  return formShape.dots.map((dot, idx) => {\n    const degree = dot.deg === '1'\n      ? 'root'\n      : dot.deg\n          .replace(/b/g, 'flat ')\n          .replace(/#/g, 'sharp ');\n    const ariaLabel = `string ${dot.string}, fret ${dot.fret}, ${degree}`;\n    const left = `calc(${LEFT_GUTTER}px + ${dot.fret * SPACE_W}px)`;\n    const top = `calc(${TOP_BAR_H}px + ${(dot.string - 0.5) * ROW_H}px)`;\n    return (\n      <div\n        key={`form-${idx}`}\n        className=\"absolute\"\n        role=\"img\"\n        aria-label={ariaLabel}\n        style={{ left, top, transform:'translate(-50%, -50%)' }}\n      >\n        <span className=\"fret-dot--form\" aria-hidden />\n      </div>\n    );\n  });\n}\n\n\n","// Single Source of Truth for scale catalog (English-first)\n\nexport type DegreeToken =\n  | '1' | 'b2' | '2' | 'b3' | '3' | '4' | '#4' | 'b5' | '5' | '#5' | 'b6' | '6' | 'bb7' | 'b7' | '7';\n\nexport type ScaleId =\n  | 'Ionian' | 'Dorian' | 'Phrygian' | 'Lydian' | 'Mixolydian' | 'Aeolian' | 'Locrian'\n  | 'MajorPentatonic' | 'MinorPentatonic' | 'Blues'\n  | 'HarmonicMinor' | 'MelodicMinor' | 'Dorianb2'\n  | 'DiminishedWholeHalf' | 'DiminishedHalfWhole';\n\nexport type ScaleCatalogItem = {\n  id: ScaleId;\n  display: { en: string; ja?: string };\n  degrees: DegreeToken[];\n  group: 'Diatonic' | 'Pentatonic' | 'Minor' | 'Other';\n  info?: {\n    oneLiner?: string;\n    examples?: Array<{ title: string; artist: string; url?: string; cue?: string }>;\n  };\n  enabled?: boolean; // future feature flag (defaults true)\n};\n\n// NOTE: These entries follow common definitions. Please align with Excel (EN) if it differs.\nexport const SCALE_CATALOG: ScaleCatalogItem[] = [\n  // Use English names per Excel (avoid modal names for major/minor)\n  { id: 'Ionian', display: { en: 'Major Scale' }, group: 'Diatonic',\n    degrees: ['1','2','3','4','5','6','7'],\n    info: { oneLiner: 'Major scale; bright and stable.',\n      examples: [\n        { title: 'Let It Be', artist: 'The Beatles' },\n        { title: 'Do-Re-Mi', artist: 'Richard Rodgers' }\n      ] } },\n  { id: 'Dorian', display: { en: 'Dorian Scale' }, group: 'Diatonic',\n    degrees: ['1','2','b3','4','5','6','b7'],\n    info: { oneLiner: 'Minor with a natural 6th; cool, modal colour.',\n      examples: [\n        { title: 'So What', artist: 'Miles Davis' }\n      ] } },\n  { id: 'Phrygian', display: { en: 'Phrygian Scale' }, group: 'Diatonic',\n    degrees: ['1','b2','b3','4','5','b6','b7'],\n    info: { oneLiner: 'Dark, Spanish/Arabic flavour with flat 2.' } },\n  { id: 'Lydian', display: { en: 'Lydian Scale' }, group: 'Diatonic',\n    degrees: ['1','2','3','#4','5','6','7'],\n    info: { oneLiner: 'Dreamy major with raised 4th (♯4).',\n      examples: [ { title: 'The Simpsons Theme', artist: 'Danny Elfman' } ] } },\n  { id: 'Mixolydian', display: { en: 'Mixolydian Scale' }, group: 'Diatonic',\n    degrees: ['1','2','3','4','5','6','b7'],\n    info: { oneLiner: 'Major with flat 7; dominant, bluesy feel.',\n      examples: [\n        { title: 'Sweet Home Alabama', artist: 'Lynyrd Skynyrd' }\n      ] } },\n  { id: 'Aeolian', display: { en: 'Natural Minor Scale' }, group: 'Diatonic',\n    degrees: ['1','2','b3','4','5','b6','b7'],\n    info: { oneLiner: 'Natural minor; sad or moody colour.',\n      examples: [ { title: 'House of the Rising Sun', artist: 'Traditional' } ] } },\n  { id: 'Locrian', display: { en: 'Locrian Scale' }, group: 'Diatonic',\n    degrees: ['1','b2','b3','4','b5','b6','b7'],\n    info: { oneLiner: 'Diminished 5th; unstable, rarely used as a key.' } },\n\n  { id: 'MajorPentatonic', display: { en: 'Major Pentatonic' }, group: 'Pentatonic',\n    degrees: ['1','2','3','5','6'],\n    info: { oneLiner: 'Five-note, open and melodic; fits many chords.',\n      examples: [ { title: 'My Girl', artist: 'The Temptations' } ] } },\n  { id: 'MinorPentatonic', display: { en: 'Minor Pentatonic' }, group: 'Pentatonic',\n    degrees: ['1','b3','4','5','b7'],\n    info: { oneLiner: 'Five-note minor staple for rock/blues solos.',\n      examples: [ { title: 'Purple Haze', artist: 'Jimi Hendrix' } ] } },\n  { id: 'Blues', display: { en: 'Blues Scale (minor)' }, group: 'Pentatonic',\n    degrees: ['1','b3','4','b5','5','b7'],\n    info: { oneLiner: 'Minor pentatonic plus blue note (♭5).',\n      examples: [ { title: 'Smoke on the Water', artist: 'Deep Purple' } ] } },\n\n  { id: 'HarmonicMinor', display: { en: 'Harmonic Minor' }, group: 'Minor',\n    degrees: ['1','2','b3','4','5','b6','7'],\n    info: { oneLiner: 'Minor with raised 7th; exotic dominant pull.',\n      examples: [ { title: 'Misirlou', artist: 'Traditional' } ] } },\n  { id: 'MelodicMinor', display: { en: 'Melodic Minor Scale' }, group: 'Minor',\n    degrees: ['1','2','b3','4','5','6','7'],\n    info: { oneLiner: 'Jazz minor (ascending); smooth minor/major blend.' } },\n\n  // Diminished scales (symmetric) — added per Excel list\n  { id: 'DiminishedWholeHalf', display: { en: 'Diminished Scale (Whole–Half)' }, group: 'Other',\n    degrees: ['1','2','b3','4','b5','b6','6','7'],\n    info: { oneLiner: 'Symmetric 8-note (whole–half) scale; over dim7.' } },\n  { id: 'DiminishedHalfWhole', display: { en: 'Diminished Scale (Half–Whole)' }, group: 'Other',\n    degrees: ['1','b2','b3','3','#4','5','6','b7'],\n    info: { oneLiner: 'Symmetric 8-note (half–whole); over 7♭9 chords.' } },\n];\n\n// Dev helper: expose catalog for quick inspection in console (no filtering)\nif (typeof window !== 'undefined') {\n  (window as any).__SCALES_EN__ = SCALE_CATALOG;\n}\n\n\n// Build 12-bit mask from degree tokens (C-root relative)\nexport function getScaleMask12(id: ScaleId): number[] {\n  const item = SCALE_CATALOG.find(s => s.id === id);\n  if (!item) return Array(12).fill(0);\n  const DEGREE_TO_SEMITONE: Record<DegreeToken, number> = {\n    '1': 0, 'b2': 1, '2': 2, 'b3': 3, '3': 4, '4': 5, '#4': 6, 'b5': 6, '5': 7, '#5': 8, 'b6': 8, '6': 9, 'bb7': 9, 'b7': 10, '7': 11\n  };\n  const mask = Array(12).fill(0);\n  for (const d of item.degrees) {\n    const s = DEGREE_TO_SEMITONE[d];\n    if (typeof s === 'number') mask[(s + 120) % 12] = 1;\n  }\n  return mask;\n}\n\nexport function listScales(): { id: ScaleId; label: string }[] {\n  return SCALE_CATALOG.map(s => ({ id: s.id, label: s.display.en }));\n}\n\n// 非ヘプタ判定とPent/Blues例外のヘルパー関数\nexport const isHeptatonic = (scaleId: string): boolean => {\n  const item = SCALE_CATALOG.find(s => s.id === scaleId as ScaleId);\n  return item ? item.degrees.length === 7 : false;\n};\n\nexport const isPentOrBlues = (scaleId: string): boolean => {\n  return scaleId === 'MajorPentatonic' || scaleId === 'MinorPentatonic' || scaleId === 'Blues';\n};\n\n\n","export type Pc = number; // 0..11\nimport { SCALE_CATALOG, type DegreeToken, type ScaleId as CatalogScaleId } from './scaleCatalog';\n\nexport type ScaleType =\n  | 'Ionian'\n  | 'Dorian'\n  | 'Phrygian'\n  | 'Lydian'\n  | 'Mixolydian'\n  | 'Aeolian'\n  | 'Locrian'\n  | 'HarmonicMinor'\n  | 'MelodicMinor'\n  | 'MajorPentatonic'\n  | 'MinorPentatonic'\n  | 'Blues'\n  | 'DiminishedWholeHalf'\n  | 'DiminishedHalfWhole';\n\nexport const SCALE_INTERVALS: Record<ScaleType, number[]> = {\n  Ionian:          [0,2,4,5,7,9,11],\n  Dorian:          [0,2,3,5,7,9,10],\n  Phrygian:        [0,1,3,5,7,8,10],\n  Lydian:          [0,2,4,6,7,9,11],\n  Mixolydian:      [0,2,4,5,7,9,10],\n  Aeolian:         [0,2,3,5,7,8,10],\n  Locrian:         [0,1,3,5,6,8,10],\n  HarmonicMinor:   [0,2,3,5,7,8,11],\n  MelodicMinor:    [0,2,3,5,7,9,11],\n  MajorPentatonic: [0,2,4,7,9],\n  MinorPentatonic: [0,3,5,7,10],\n  Blues:           [0,3,5,6,7,10],\n  DiminishedWholeHalf: [0,2,3,5,6,8,9,11],\n  DiminishedHalfWhole: [0,1,3,4,6,7,9,10],\n};\n\nexport type ScaleId = CatalogScaleId;\n\nexport function getScalePitches(root: Pc, type: ScaleId): Pc[] {\n  // Prefer catalog-driven calculation when possible\n  try {\n    return getScalePitchesById(root, type as unknown as CatalogScaleId);\n  } catch {}\n  const ints = SCALE_INTERVALS[type as unknown as ScaleType];\n  if (!ints || ints.length === 0) {\n    throw new Error(`Unknown scale id: ${String(type)}`);\n  }\n  return ints.map((iv) => (root + iv + 120) % 12);\n}\n\nexport function scaleTypeLabel(t: ScaleId | ScaleType): string {\n  const map: Record<ScaleType,string> = {\n    Ionian: 'Major Scale',\n    Dorian: 'Dorian',\n    Phrygian: 'Phrygian',\n    Lydian: 'Lydian',\n    Mixolydian: 'Mixolydian',\n    Aeolian: 'Natural Minor',\n    Locrian: 'Locrian',\n    HarmonicMinor: 'Harmonic Minor',\n    MelodicMinor: 'Melodic Minor',\n    MajorPentatonic: 'Major Pentatonic',\n    MinorPentatonic: 'Minor Pentatonic',\n  };\n  // Mapを既定とし、未定義はカタログのdisplay.enを利用\n  const short = map[t as ScaleType];\n  if (short) return short;\n  const cat = SCALE_CATALOG.find(s => s.id === (t as any));\n  return (cat?.display.en || String(t)).replace(/\\s*\\(.*\\)$/,'');\n}\n\n// === Degree labels (with accidentals) per scale type ===\nexport const DEGREE_LABELS: Record<ScaleType, string[]> = {\n  Ionian:          [\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\"],\n  Dorian:          [\"1\",\"2\",\"♭3\",\"4\",\"5\",\"6\",\"♭7\"],\n  Phrygian:        [\"1\",\"♭2\",\"♭3\",\"4\",\"5\",\"♭6\",\"♭7\"],\n  Lydian:          [\"1\",\"2\",\"3\",\"♯4\",\"5\",\"6\",\"7\"],\n  Mixolydian:      [\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"♭7\"],\n  Aeolian:         [\"1\",\"2\",\"♭3\",\"4\",\"5\",\"♭6\",\"♭7\"],\n  Locrian:         [\"1\",\"♭2\",\"♭3\",\"4\",\"♭5\",\"♭6\",\"♭7\"],\n  HarmonicMinor:   [\"1\",\"2\",\"♭3\",\"4\",\"5\",\"♭6\",\"7\"],\n  MelodicMinor:    [\"1\",\"2\",\"♭3\",\"4\",\"5\",\"6\",\"7\"],\n  MajorPentatonic: [\"1\",\"2\",\"3\",\"5\",\"6\"],\n  MinorPentatonic: [\"1\",\"♭3\",\"4\",\"5\",\"♭7\"],\n  Blues:           [\"1\",\"♭3\",\"4\",\"♭5\",\"5\",\"♭7\"],\n};\n\n// pc to degree label for given scale; returns null if pc not in scale\nexport function degreeLabelFor(pc: Pc, root: Pc, type: ScaleId | ScaleType): string | null {\n  const iv = (pc - root + 120) % 12;\n  // Prefer catalog degrees → semitone offsets\n  const cat = SCALE_CATALOG.find(s => s.id === (type as any));\n  const ivs = (cat ? cat.degrees.map(d => DEGREE_TO_SEMITONE[d]) : undefined)\n    ?? (SCALE_INTERVALS[type as ScaleType] ?? []);\n  const idx = ivs.indexOf(iv);\n  if (idx === -1) return null;\n  const labels = (cat?.degrees as string[] | undefined)\n    ?? (DEGREE_LABELS[type as ScaleType] ?? undefined);\n  if (!labels) return null;\n  return labels[idx] ?? null;\n}\n\n// Convert a degree token like \"1\", \"b2\", \"#4\", \"♭3\" to Roman form (R, II, ♯IV, ♭III, etc.)\nfunction degreeTokenToRoman(token: string): string {\n  const t = token.replace(/\\s+/g, '')\n    .replace(/bb/g, '♭♭')\n    .replace(/b/g, '♭')\n    .replace(/##/g, '♯♯')\n    .replace(/#/g, '♯');\n  // Extract accidentals and number\n  const m = t.match(/^(♭|♯|♭♭|♯♯)?(\\d)$/);\n  if (!m) {\n    // fallback: if already has Roman-like content, return as is\n    return t;\n  }\n  const acc = m[1] ?? '';\n  const n = m[2];\n  const romanBase: Record<string,string> = {\n    '1': 'R',\n    '2': 'II',\n    '3': 'III',\n    '4': 'IV',\n    '5': 'V',\n    '6': 'VI',\n    '7': 'VII',\n  };\n  const base = romanBase[n] ?? n;\n  return `${acc}${base}`;\n}\n\n// Roman degree label for a pitch class in a given scale (uses catalog degrees when available)\nexport function degreeRomanFor(pc: Pc, root: Pc, type: ScaleId | ScaleType): string | null {\n  const iv = (pc - root + 120) % 12;\n  const cat = SCALE_CATALOG.find(s => s.id === (type as any));\n  const ivs = (cat ? cat.degrees.map(d => DEGREE_TO_SEMITONE[d]) : undefined)\n    ?? (SCALE_INTERVALS[type as ScaleType] ?? []);\n  const idx = ivs.indexOf(iv);\n  if (idx === -1) return null;\n  const labels = (cat?.degrees as string[] | undefined)\n    ?? (DEGREE_LABELS[type as ScaleType] ?? undefined);\n  if (!labels) return null;\n  const token = labels[idx] ?? '';\n  return degreeTokenToRoman(token);\n}\n\n// Parent mode mapping (e.g., pentatonic → its diatonic parent)\nexport function parentModeOf(t: ScaleId | ScaleType): ScaleType | null {\n  switch (t) {\n    case 'MajorPentatonic':\n      return 'Ionian';\n    case 'MinorPentatonic':\n      return 'Aeolian';\n    default:\n      return null;\n  }\n}\n\n\n// === Roman degree labels per scale type (vs Ionian baseline) ===\nconst IONIAN_INTERVALS = [0,2,4,5,7,9,11];\nconst ROMAN_BASE = ['I','II','III','IV','V','VI','VII'] as const;\n\nexport function romanDegreeLabelsForScale(scaleType: ScaleType): string[] {\n  const ints = SCALE_INTERVALS[scaleType];\n  // Fallback for non-7-note scales\n  if (!ints || ints.length !== 7) return [...ROMAN_BASE];\n  return ints.map((semi, i) => {\n    const base = ROMAN_BASE[i];\n    const diff = semi - IONIAN_INTERVALS[i];\n    if (diff === 0) return base;\n    if (diff > 0) return '#'.repeat(diff) + base;\n    return 'b'.repeat(-diff) + base;\n  });\n}\n\n// === Catalog-driven semitone mapping and API (SSOT; supports 5/7/8 notes) ===\nexport const DEGREE_TO_SEMITONE: Record<DegreeToken, number> = {\n  '1': 0,\n  'b2': 1,\n  '2': 2,\n  'b3': 3,\n  '3': 4,\n  '4': 5,\n  '#4': 6,\n  'b5': 6,\n  '5': 7,\n  '#5': 8,\n  'b6': 8,\n  '6': 9,\n  'bb7': 9,\n  'b7': 10,\n  '7': 11,\n};\n\nexport function getScalePitchesById(rootPc: number, id: CatalogScaleId): number[] {\n  const s = SCALE_CATALOG.find(x => x.id === id);\n  if (!s) throw new Error(`Scale not found in catalog: ${String(id)}`);\n  return s.degrees.map(d => (rootPc + DEGREE_TO_SEMITONE[d] + 120) % 12);\n}\n\n// Dev helper: expose minimal API for console checks\nif (typeof window !== 'undefined') {\n  (window as any).__SCALES_API__ = {\n    getScalePitchesById,\n  };\n}\n\n\n","import React from 'react';\nimport { createStore } from 'zustand/vanilla';\n\nconst identity = (arg) => arg;\nfunction useStore(api, selector = identity) {\n  const slice = React.useSyncExternalStore(\n    api.subscribe,\n    React.useCallback(() => selector(api.getState()), [api, selector]),\n    React.useCallback(() => selector(api.getInitialState()), [api, selector])\n  );\n  React.useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  const api = createStore(createState);\n  const useBoundStore = (selector) => useStore(api, selector);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = ((createState) => createState ? createImpl(createState) : createImpl);\n\nexport { create, useStore };\n","const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const api = { setState, getState, getInitialState, subscribe };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = ((createState) => createState ? createStoreImpl(createState) : createStoreImpl);\n\nexport { createStore };\n","/**\n * 音楽理論の共通定数\n */\n\n/** ピッチクラスの名前（0=C, 1=C#, ..., 11=B） */\nexport const PC_NAMES = ['C', 'C#', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'] as const;\n\n/** ピッチクラスの総数 */\nexport const PITCH_CLASS_COUNT = 12;\n\n/** デフォルトのMIDIオクターブ（C4 = MIDI 60） */\nexport const DEFAULT_MIDI_OCTAVE = 60;\n\n/**\n * ピッチクラスを0-11の範囲に正規化\n */\nexport function mod12(pc: number): number {\n  return ((pc % 12) + 12) % 12;\n}\n\n/**\n * ピッチクラス番号を音名に変換\n */\nexport function pcToName(pc: number): string {\n  return PC_NAMES[mod12(pc)];\n}\n\n/**\n * 音名をピッチクラス番号に変換\n */\nexport function nameToPc(name: string): number {\n  const index = PC_NAMES.indexOf(name as any);\n  return index >= 0 ? index : -1;\n}\n\n","// PITCHESは lib/music/constants.ts に移行しました\nexport { PC_NAMES as PITCHES, PC_NAMES } from './music/constants';\n// 内部で使用するためにインポート\nimport { PC_NAMES as PITCHES_INTERNAL } from './music/constants';\nexport type Pc = number; // 0..11\nexport type Mode = \"Major\" | \"Minor\";\n\nexport const SCALESETS = {\n  ionian:     [0,2,4,5,7,9,11],\n  dorian:     [0,2,3,5,7,9,10],\n  phrygian:   [0,1,3,5,7,8,10],\n  lydian:     [0,2,4,6,7,9,11],\n  mixolydian: [0,2,4,5,7,9,10],\n  aeolian:    [0,2,3,5,7,8,10],\n  locrian:    [0,1,3,5,6,8,10],\n  locrianNat2: [0,2,3,5,6,8,10], // Locrian ♮2 (Melodic Minor 6th mode)\n  majPent:    [0,2,4,7,9],\n  minPent:    [0,3,5,7,10],\n  bluesMin:   [0,3,5,6,7,10],\n  dimWholeHalf: [0,2,3,5,6,8,9,11], // Whole-Half diminished scale\n  dimHalfWhole: [0,1,3,4,6,7,9,10], // Half-Whole diminished scale\n  altered:    [0,1,3,4,6,8,10], // Altered scale (Super Locrian)\n} as const;\n\n// Quality aliases: シンボルの表記ゆれを正規化キーへ統一\nexport const QUALITY_ALIASES: Record<string, string> = {\n  // Major family\n  'maj': 'M', 'major': 'M', '': 'M',\n  'maj7': 'M7', 'M7': 'M7', 'Δ': 'M7', 'Δ7': 'M7',\n  'maj9': 'M9', 'M9': 'M9', 'Δ9': 'M9',\n  'maj11': 'M11', 'M11': 'M11',\n  'maj13': 'M13', 'M13': 'M13',\n  // Minor family\n  'min': 'm', 'mi': 'm', '-': 'm',\n  'min7': 'm7', 'mi7': 'm7', '-7': 'm7',\n  'min9': 'm9', 'mi9': 'm9',\n  'min11': 'm11', 'mi11': 'm11',\n  'min13': 'm13', 'mi13': 'm13',\n  'mM7': 'mMaj7', 'mMaj7': 'mMaj7', 'minMaj7': 'mMaj7',\n  // Diminished family\n  'dim': 'dim', '°': 'dim', 'o': 'dim',\n  'dim7': 'dim7', '°7': 'dim7', 'o7': 'dim7',\n  'm7b5': 'm7b5', 'm7♭5': 'm7b5', 'ø': 'm7b5', 'ø7': 'm7b5',\n  // Augmented family\n  'aug': 'aug', '+': 'aug',\n  'aug7': '7#5', '7#5': '7#5', '7+5': '7#5', '7♯5': '7#5',\n  // Suspended\n  'sus2': 'sus2', 'sus4': 'sus4', 'sus': 'sus4',\n  '7sus4': '7sus4', '7sus': '7sus4',\n  // Sixth chords\n  '6': '6', 'm6': 'm6', 'min6': 'm6',\n  '6/9': '6/9', '69': '6/9',\n  // Altered/extensions\n  '7b5': '7b5', '7♭5': '7b5', '7-5': '7b5',\n  '7b9': '7b9', '7♭9': '7b9', '7-9': '7b9',\n  '7#9': '7#9', '7♯9': '7#9', '7+9': '7#9',\n  '7b13': '7b13', '7♭13': '7b13',\n  '7#11': '7#11', '7♯11': '7#11',\n  '7(9)': '9', '7(11)': '11', '7(13)': '13', // 統一: 7(9)→9\n  'm7(9)': 'm9', 'm7(11)': 'm11',\n  'M7(9)': 'M9', 'M7(13)': 'M13',\n  '7alt': '7alt', '7altered': '7alt',\n} as const;\n\n// Quality resolver: QUALITY_ALIASESを通して正規化\nexport function resolveQuality(qual: string): string {\n  return QUALITY_ALIASES[qual] ?? qual;\n}\n\n// QUALITY_TONES: Chord Libraryの全40+品質を網羅\nexport const QUALITY_TONES: Record<string, number[]> = {\n  // Basic triads (Core)\n  M:     [0,4,7],\n  m:     [0,3,7],\n  aug:   [0,4,8],\n  dim:   [0,3,6],\n  // Suspended (Core)\n  sus2:  [0,2,7],\n  sus4:  [0,5,7],\n  // Sixth chords (Core)\n  \"6\":   [0,4,7,9],\n  m6:    [0,3,7,9],\n  \"6/9\": [0,4,7,9,14], // 6/9 = R,3,5,6,9\n  // Seventh chords (Core)\n  \"7\":   [0,4,7,10],   // Dominant 7th\n  M7:    [0,4,7,11],   // Major 7th\n  m7:    [0,3,7,10],   // Minor 7th\n  dim7:  [0,3,6,9],    // Diminished 7th (修正: [0,3,6,10]→[0,3,6,9])\n  m7b5:  [0,3,6,10],   // Half-diminished 7th\n  mMaj7: [0,3,7,11],   // Minor-major 7th\n  // Ninth chords (Core)\n  \"9\":   [0,4,7,10,14],  // Dominant 9th\n  M9:    [0,4,7,11,14],  // Major 9th\n  m9:    [0,3,7,10,14],  // Minor 9th\n  add9:  [0,4,7,14],     // Add 9 (no 7th)\n  madd9: [0,3,7,14],     // Minor add 9\n  // Extended chords (Advanced)\n  \"11\":  [0,4,7,10,14,17], // 11th (理論上は3rdを省略すべきだが、音度表示は完全形)\n  M11:   [0,4,7,11,14,17], // Major 11th (実務上は#11が一般的だが、ここは理論形)\n  m11:   [0,3,7,10,14,17], // Minor 11th\n  \"13\":  [0,4,7,10,14,21], // 13th (理論上は11thを省略すべき)\n  M13:   [0,4,7,11,14,21], // Major 13th\n  m13:   [0,3,7,10,14,21], // Minor 13th\n  // Altered/Sus7 (Core & Advanced)\n  \"7sus4\": [0,5,7,10],     // Dominant 7 sus4\n  \"7b5\":   [0,4,6,10],     // Dominant 7 flat 5\n  \"7#5\":   [0,4,8,10],     // Dominant 7 sharp 5 (aug7)\n  \"7b9\":   [0,4,7,10,13],  // Dominant 7 flat 9\n  \"7#9\":   [0,4,7,10,15],  // Dominant 7 sharp 9\n  \"7#11\":  [0,4,7,10,18],  // Dominant 7 sharp 11 (Lydian dominant)\n  \"7b13\":  [0,4,7,10,20],  // Dominant 7 flat 13\n  \"7alt\":  [0,4,7,10,13,15,18], // Altered (代表構成: ♭9,#9,#11 - 実用的な組み合わせに固定)\n};\n\nexport const noteToPc = (n: string): Pc => {\n  const i = PITCHES_INTERNAL.indexOf(n as any);\n  if (i >= 0) return i;\n  const flatMap: Record<string,string> = {Db:\"C#\",Gb:\"F#\",Ab:\"G#\",Bb:\"A#\",Eb:\"D#\",Cb:\"B\",Fb:\"E\"};\n  const up = flatMap[n] ?? n;\n  return PITCHES_INTERNAL.indexOf(up as any) as number;\n};\n\n/**\n * pcToNoteName: Pitch class → 音名変換（キーの調号に応じて♯/♭を選択）\n * @param pc - Pitch class (0-11)\n * @param keyRoot - キーのルート音（Pc: 0-11）\n * @param mode - Major or Minor\n * @returns 音名（例: \"Eb\", \"F#\"）\n */\nexport function pcToNoteName(pc: Pc, keyRoot?: Pc, mode?: Mode): string {\n  if (keyRoot === undefined) {\n    // キー情報がない場合は♭優先（Chord Libraryと同じ）\n    const flatPreferred = [\"C\", \"C#\", \"D\", \"Eb\", \"E\", \"F\", \"F#\", \"G\", \"Ab\", \"A\", \"Bb\", \"B\"];\n    return flatPreferred[pc];\n  }\n  \n  // ♯系キーと♭系キーを判定\n  const sharpKeys = [7, 2, 9, 4, 11, 6, 1]; // G, D, A, E, B, F#, C#\n  const flatKeys = [5, 10, 3, 8, 1, 6, 11]; // F, Bb, Eb, Ab, Db, Gb, Cb\n  \n  const isSharpKey = sharpKeys.includes(keyRoot);\n  \n  if (isSharpKey) {\n    // ♯系キー: C, C#, D, D#, E, F, F#, G, G#, A, A#, B\n    const sharpNames = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n    return sharpNames[pc];\n  } else {\n    // ♭系キー（またはC): C, Db, D, Eb, E, F, Gb, G, Ab, A, Bb, B\n    const flatNames = [\"C\", \"Db\", \"D\", \"Eb\", \"E\", \"F\", \"Gb\", \"G\", \"Ab\", \"A\", \"Bb\", \"B\"];\n    return flatNames[pc];\n  }\n}\n\nexport const transpose = (pc: Pc, by: number) => (pc + by + 12) % 12;\n\nexport type ChordSym = string; // e.g. \"C\", \"Am\", \"G7\", \"F#m7\", \"C/E\"\nexport type ParsedChord = { root: Pc; qual: string; bass?: Pc; tones: Pc[] };\n\nexport function parseChord(sym: ChordSym): ParsedChord {\n  const slash = sym.split(\"/\");\n  const main = slash[0];\n  const m = main.match(/^([A-G](#|b)?)(.*)$/);\n  if (!m) throw new Error(\"bad chord: \"+sym);\n  const root = noteToPc(m[1]!);\n  const rawQual = (m[3] || \"\").trim() || \"\";\n  const qual = resolveQuality(rawQual || \"M\"); // エイリアス正規化を通す\n  const tonesRel = QUALITY_TONES[qual] ?? QUALITY_TONES.M;\n  const tones = tonesRel.map(iv => transpose(root, iv % 12)); // mod12で正規化\n  const bass = slash[1] ? noteToPc(slash[1]!) : undefined;\n  return { root, qual, bass, tones };\n}\n\n// Diatonic quality tables: 各度数に対する典型的な品質（第1候補が既定）\nexport const DEG_QUAL_MAJOR: Record<number, string[]> = {\n  0:[\"M\",\"M7\"], 2:[\"m\",\"m7\"], 4:[\"m\",\"m7\"], 5:[\"M\",\"M7\"], 7:[\"M\",\"7\"], 9:[\"m\",\"m7\"], 11:[\"dim\",\"m7b5\"],\n};\nexport const DEG_QUAL_MINOR: Record<number, string[]> = {\n  0:[\"m\",\"m7\"], 2:[\"dim\",\"m7b5\"], 3:[\"M\",\"M7\"], 5:[\"m\",\"m7\"],\n  7:[\"m\",\"7\",\"M\",\"7\"], // v と V の両方を許容\n  8:[\"M\",\"M7\"], 10:[\"M\",\"7\"],\n};\n\ntype RankItem = { keyRoot: Pc; mode: Mode; label: string; score: number; pct: number };\n\nexport function rankKeys(chords: ChordSym[]): RankItem[] {\n  const parsed = chords.map(parseChord);\n  const candidates: {root:Pc; mode:Mode}[] = [];\n  for (let r=0;r<12;r++) candidates.push({root:r,mode:\"Major\"},{root:r,mode:\"Minor\"});\n\n  const maxPerChord = 3;\n  const bonuses = 3;\n  const denom = parsed.length * maxPerChord + bonuses;\n\n  const res = candidates.map(({root,mode})=>{\n    const table = mode===\"Major\" ? DEG_QUAL_MAJOR : DEG_QUAL_MINOR;\n    let s = 0;\n    parsed.forEach((c,idx)=>{\n      const deg = (c.root - root + 12) % 12;\n      const expected = table[deg];\n      if (expected) {\n        if (expected.includes(c.qual)) s += 3; else s += 2;\n      } else {\n        const scale = mode===\"Major\" ? SCALESETS.ionian : SCALESETS.aeolian;\n        const inScale = c.tones.every(t => scale.includes((t - root + 12)%12));\n        if (inScale) s += 1;\n      }\n      if (idx>0) {\n        const prevDeg = (parsed[idx-1].root - root + 12) % 12;\n        // 五度下行（循環）を一般的に評価: a→b が完全5度下行（-7半音＝+5半音）\n        const fifthsDown = ((prevDeg - deg + 12) % 12) === 7;\n        if (fifthsDown) s += 1; // 五度下行ボーナス（ii→V, V→I, vi→ii, etc.）\n      }\n    });\n    const firstDeg = (parsed[0].root - root + 12) % 12;\n    if (mode===\"Major\" && (firstDeg===0 || firstDeg===9)) s += 2;\n    if (mode===\"Minor\" && (firstDeg===0 || firstDeg===3)) s += 2;\n    const pct = Math.round((s / Math.max(denom,1)) * 100);\n    const label = `${PITCHES_INTERNAL[root]} ${mode}`;\n    return { keyRoot:root, mode, label, score:s, pct };\n  });\n  return res.sort((a,b)=> b.score - a.score);\n}\n\nexport type ScaleRank = { keyRoot: Pc; name: string; label: string; pct: number; set: number[] };\n\n/**\n * getRecommendedScalesForQuality: 品質に応じた推奨スケールを返す\n * @param quality - コード品質（例: \"m7b5\", \"dim7\", \"7b9\"）\n * @returns 推奨スケール名の配列（優先順）\n */\nexport function getRecommendedScalesForQuality(quality: string): Array<{name: string; scaleKey: keyof typeof SCALESETS}> {\n  const q = resolveQuality(quality);\n  \n  switch (q) {\n    case 'm7b5': // Half-diminished: Locrian ♮2 優先\n      return [\n        {name: \"Locrian ♮2\", scaleKey: \"locrianNat2\"},\n        {name: \"Locrian\", scaleKey: \"locrian\"}\n      ];\n    case 'dim':\n    case 'dim7': // Diminished: Whole-Half 優先\n      return [\n        {name: \"Diminished (W-H)\", scaleKey: \"dimWholeHalf\"}\n      ];\n    case '7b9': // Dominant b9: Half-Whole 優先\n      return [\n        {name: \"Diminished (H-W)\", scaleKey: \"dimHalfWhole\"},\n        {name: \"Mixolydian ♭9♭13\", scaleKey: \"altered\"} // 近似\n      ];\n    case '7alt': // Altered dominant\n      return [\n        {name: \"Altered\", scaleKey: \"altered\"}\n      ];\n    case '7': // Dominant 7th\n      return [\n        {name: \"Mixolydian\", scaleKey: \"mixolydian\"},\n        {name: \"Lydian Dominant (Mixolydian ♯11)\", scaleKey: \"lydian\"}, // 近似\n        {name: \"Altered\", scaleKey: \"altered\"}\n      ];\n    default:\n      return [];\n  }\n}\n\nexport function rankScales(chords: ChordSym[], baseKey: {root:Pc; mode:Mode}): ScaleRank[] {\n  const tones = Array.from(new Set(chords.map(parseChord).flatMap(c=>c.tones)));\n  const root = baseKey.root;\n  const defs = baseKey.mode===\"Major\"\n    ? [[\"Major Scale\",\"ionian\"],[\"Major Pentatonic\",\"majPent\"],[\"Mixolydian Mode\",\"mixolydian\"],[\"Lydian Mode\",\"lydian\"]]\n    : [[\"Minor Scale\",\"aeolian\"],[\"Minor Pentatonic\",\"minPent\"],[\"Dorian Mode\",\"dorian\"],[\"Phrygian Mode\",\"phrygian\"],[\"Blues (min)\",\"bluesMin\"]];\n  return defs.map(([disp, key])=>{\n    const set = SCALESETS[key as keyof typeof SCALESETS].map(iv => transpose(root, iv));\n    const cover = tones.filter(t => set.includes(t)).length;\n    const pct = Math.round(100 * cover / Math.max(tones.length,1));\n    return { keyRoot:root, name: disp as string, label: `${PITCHES_INTERNAL[root]} ${disp}`, pct, set };\n  }).sort((a,b)=> b.pct - a.pct);\n}\n\n\n// --- P2-3: Analyzer utilities ---\nexport type KeyCandidate = { tonic: Pc; mode: Mode; confidence: number; reasons: string[] };\n\nconst DEGREE_MAP_MAJOR = {0:\"I\",2:\"II\",4:\"III\",5:\"IV\",7:\"V\",9:\"VI\",11:\"VII\"} as const;\nconst DEGREE_MAP_MINOR = {0:\"i\",2:\"ii\",3:\"III\",5:\"iv\",7:\"v\",8:\"VI\",10:\"VII\"} as const;\n\nexport function scoreKeyCandidates(prog: ChordSym[]): KeyCandidate[] {\n  const ranked = rankKeys(prog);\n  const top = ranked.slice(0,5);  // v3.1: 3→5候補に拡張（iOS UI改善）\n  return top.map((r)=>{\n    const key = { tonic: r.keyRoot, mode: r.mode } as const;\n    const cad = detectCadence(prog, key);\n    const reasons: string[] = [];\n    if (cad === \"perfect\") reasons.push(\"Cadence: V→I\");\n    if (cad === \"deceptive\") reasons.push(\"Cadence: V→vi\");\n    if (cad === \"half\") reasons.push(\"Cadence: …→V\");\n    reasons.unshift(`diatonic fit ${r.pct}%`);\n    return { tonic: r.keyRoot, mode: r.mode, confidence: r.pct, reasons };\n  });\n}\n\nexport function classifyChord(chord: ParsedChord, key: {tonic: Pc; mode: Mode}): \"diatonic\"|\"secondary\"|\"borrowed\"|\"outside\" {\n  const diatonic = ((): string[] => {\n    const tonicName = PITCHES_INTERNAL[key.tonic];\n    if (key.mode === \"Major\") {\n      const mk = (Key as any)?.majorKey ? (Key as any).majorKey(tonicName) : null;\n      return mk?.chords || [];\n    } else {\n      const nk = (Key as any)?.minorKey ? (Key as any).minorKey(tonicName) : null;\n      return nk?.natural?.chords || nk?.chords || [];\n    }\n  })();\n  const target = chord.root + (chord.triad === \"maj\" ? \"\" : chord.triad === \"min\" ? \"m\" : \"dim\");\n  if (diatonic.includes(target)) return \"diatonic\";\n  // secondary dominant: X7 targeting a diatonic\n  const isDomLike = chord.triad === \"maj\" || chord.isDominantLike;\n  if (isDomLike) {\n    for (let r=0;r<12;r++){\n      const deg = (r - key.tonic + 12) % 12;\n      const table = key.mode === \"Major\" ? DEG_QUAL_MAJOR : DEG_QUAL_MINOR;\n      if (table[deg]){\n        const fifth = transpose(r, 7 as any);\n        if (chord.root === fifth) return \"secondary\";\n      }\n    }\n  }\n  // simple borrowed detection in major: iv, bVII, bVI roots\n  if (key.mode === \"Major\"){\n    const deg = (chord.root - key.tonic + 12) % 12;\n    if (deg === 5 && chord.triad === \"min\") return \"borrowed\"; // iv\n    if (deg === 10 || deg === 8) return \"borrowed\"; // bVII, bVI\n  }\n  return \"outside\";\n}\n\nexport function detectCadence(prog: ChordSym[], key: {tonic: Pc; mode: Mode}): \"perfect\"|\"deceptive\"|\"half\"|null {\n  if (prog.length < 2) return null;\n  const last = parseChord(prog[prog.length-1]);\n  const prev = parseChord(prog[prog.length-2]);\n  const degLast = (last.root - key.tonic + 12) % 12;\n  const degPrev = (prev.root - key.tonic + 12) % 12;\n  if (degPrev === 7 && degLast === 0) return \"perfect\"; // V→I\n  if (degPrev === 7 && (degLast === 9)) return \"deceptive\"; // V→vi\n  if (degLast === 7) return \"half\"; // …→V\n  return null;\n}\n\n// --- Roman Numeral to Chord Symbol Conversion ---\n\n// Roman numeral mapping: Roman表記から度数（0-11）と明示的品質を解析\nconst ROMAN_MAP: Record<string, {offset: number}> = {\n  'Ⅰ': {offset: 0}, 'ⅰ': {offset: 0},\n  'Ⅱ': {offset: 2}, 'ⅱ': {offset: 2},\n  '♭Ⅱ': {offset: 1}, '♭ⅱ': {offset: 1},\n  'Ⅲ': {offset: 4}, 'ⅲ': {offset: 4},\n  '♭Ⅲ': {offset: 3}, '♭ⅲ': {offset: 3},\n  'Ⅳ': {offset: 5}, 'ⅳ': {offset: 5},\n  '♯Ⅳ': {offset: 6}, '♯ⅳ': {offset: 6},\n  'Ⅴ': {offset: 7}, 'ⅴ': {offset: 7},\n  '♭Ⅵ': {offset: 8}, '♭ⅵ': {offset: 8},\n  'Ⅵ': {offset: 9}, 'ⅵ': {offset: 9},\n  '♭Ⅶ': {offset: 10}, '♭ⅶ': {offset: 10},\n  'Ⅶ': {offset: 11}, 'ⅶ': {offset: 11},\n};\n\n/**\n * parseRomanNumeral: Roman numeral表記から度数と明示的品質を分離\n * 例: \"Ⅱm7\" → {deg: 2, explicitQual: \"m7\"}\n *     \"Ⅴ\" → {deg: 7, explicitQual: null}\n *     \"♭Ⅶ\" → {deg: 10, explicitQual: null}\n */\nfunction parseRomanNumeral(roman: string): {deg: number; explicitQual: string | null} {\n  // Roman表記の本体と接尾辞を分離\n  // 例: \"Ⅱm7\" → base=\"Ⅱ\", suffix=\"m7\"\n  let base = roman;\n  let suffix = \"\";\n  \n  // Roman表記のパターンをチェック\n  for (const [romanKey, {offset}] of Object.entries(ROMAN_MAP)) {\n    if (roman.startsWith(romanKey)) {\n      base = romanKey;\n      suffix = roman.slice(romanKey.length).trim();\n      return {deg: offset, explicitQual: suffix || null};\n    }\n  }\n  \n  // マッチしない場合はエラー（または警告）\n  console.warn(`Unknown Roman numeral: ${roman}`);\n  return {deg: 0, explicitQual: null}; // デフォルトは I（tonic）\n}\n\n/**\n * defaultQualityForDegree: 度数とモードに基づいてダイアトニック品質を返す\n * 例: Major key の deg=2 → \"m\"（ii）\n *     Major key の deg=11 → \"dim\"（vii°）\n */\nfunction defaultQualityForDegree(deg: number, mode: Mode): string {\n  const table = mode === \"Major\" ? DEG_QUAL_MAJOR : DEG_QUAL_MINOR;\n  const candidates = table[deg];\n  if (!candidates || candidates.length === 0) {\n    // ダイアトニックにない度数（借用和音など）は空（Major triad）をデフォルトに\n    return \"\";\n  }\n  // 第1候補（三和音）を返す\n  return candidates[0];\n}\n\n/**\n * romanToChordSymbol: Roman numeral → 実コードシンボル変換（文脈化版）\n * @param roman - Roman numeral表記（例: \"Ⅱm7\", \"♭Ⅶ\", \"Ⅴ7\"）\n * @param keyRoot - キーのルート（Pc: 0-11）\n * @param mode - Major or Minor\n * @returns コードシンボル（例: \"Dm7\", \"Bb\", \"G7\"）\n */\nexport function romanToChordSymbol(roman: string, keyRoot: Pc, mode: Mode): string {\n  const {deg, explicitQual} = parseRomanNumeral(roman);\n  \n  // 明示的品質がない場合、ダイアトニック品質を補完\n  const quality = explicitQual !== null ? explicitQual : defaultQualityForDegree(deg, mode);\n  \n  // ルート音を計算（キーの調号に応じて♯/♭を選択）\n  const rootPc = (keyRoot + deg) % 12;\n  const rootName = pcToNoteName(rootPc, keyRoot, mode);\n  \n  // コードシンボルを組み立て\n  return `${rootName}${quality}`;\n}\n\n/**\n * formatRomanForDisplay: 度数と品質から正しいRoman表記を生成（SSOT準拠: I, ii, iii, IV, V, vi, vii°）\n * @param degree - 度数（0-11）\n * @param quality - コード品質（例: \"\", \"m\", \"7\", \"m7\", \"dim\", \"m7b5\"）\n * @param mode - Major or Minor\n * @param keyRoot - キーのルート（表記方針の決定に使用）\n * @returns 表示用Roman numeral（例: \"ii\", \"V7\", \"vii°\"）\n */\nexport function formatRomanForDisplay(degree: number, quality: string, mode: Mode, keyRoot?: Pc): string {\n  // 度数をdiatonic度数にマッピング（0,2,4,5,7,9,11 のみ）\n  const diatonicDegrees: Record<number, number> = {\n    0: 1, 2: 2, 4: 3, 5: 4, 7: 5, 9: 6, 11: 7\n  };\n  \n  const romanNum = diatonicDegrees[degree];\n  if (!romanNum) {\n    // 非ダイアトニック度数（借用和音など）は変化記号付きで表示\n    if (degree === 1) return '♭Ⅱ' + quality; // ♭II\n    if (degree === 3) return '♭Ⅲ' + quality; // ♭III\n    if (degree === 6) return '♯Ⅳ' + quality; // #IV\n    if (degree === 8) return '♭Ⅵ' + quality; // ♭VI\n    if (degree === 10) return '♭Ⅶ' + quality; // ♭VII\n    return '?'; // 不明\n  }\n  \n  // 品質から大文字/小文字を決定\n  const isMinor = quality.startsWith('m') && !quality.startsWith('maj');\n  const isDim = quality.includes('dim') || quality.includes('°') || quality === 'm7b5' || quality === 'ø';\n  \n  // ダイアトニック品質を参照して大文字/小文字を決定\n  const table = mode === \"Major\" ? DEG_QUAL_MAJOR : DEG_QUAL_MINOR;\n  const expectedQuals = table[degree];\n  const isDiatonicMinor = expectedQuals?.some(q => q === 'm' || q === 'm7');\n  const isDiatonicDim = expectedQuals?.some(q => q === 'dim' || q === 'm7b5');\n  \n  // Roman数字の基本形\n  const romanNumerals = ['I', 'II', 'III', 'IV', 'V', 'VI', 'VII'];\n  let romanBase = romanNumerals[romanNum - 1];\n  \n  // SSOT準拠: I, ii, iii, IV, V, vi, vii°\n  // Major key: I, ii, iii, IV, V, vi, vii°\n  // Minor key: i, ii°, III, iv, v/V, VI, VII\n  \n  if (mode === \"Major\") {\n    // I, IV, V は大文字、ii, iii, vi は小文字、vii° は小文字+°\n    if ([1, 4, 5].includes(romanNum) && !isMinor && !isDim) {\n      romanBase = romanBase; // 大文字のまま\n    } else if (isDim || isDiatonicDim) {\n      romanBase = romanBase.toLowerCase() + '°'; // vii°\n    } else {\n      romanBase = romanBase.toLowerCase(); // ii, iii, vi\n    }\n  } else {\n    // Minor key: i, ii°, III, iv, v/V, VI, VII\n    if ([3, 6, 7].includes(romanNum) && !isMinor && !isDim) {\n      romanBase = romanBase; // III, VI, VII は大文字\n    } else if (romanNum === 5) {\n      // v と V の両方あり（harmonic minor の V）\n      romanBase = isMinor ? 'v' : 'V';\n    } else if (isDim || isDiatonicDim) {\n      romanBase = romanBase.toLowerCase() + '°'; // ii°\n    } else {\n      romanBase = romanBase.toLowerCase(); // i, iv\n    }\n  }\n  \n  // 7thなどの拡張を追加（dim以外）\n  let extension = '';\n  if (!isDim && quality && quality !== 'm' && quality !== '') {\n    // 7, M7, m7, sus4などをそのまま付加\n    extension = quality.replace('m', '').replace('M', 'maj'); // m7 → 7, M7 → maj7\n    if (isMinor && extension.startsWith('7')) {\n      // マイナーコードの場合、m7 → 7 と表示（既に小文字で示されているため）\n      extension = extension;\n    }\n  }\n  \n  return romanBase + extension;\n}\n\n\n\n","import type { Pc, Mode, ChordSym } from \"../theory\";\nimport { parseChord } from \"../theory\";\nimport { getScalePitches, type ScaleType } from \"../scales\";\n\nexport type ScaleCandidate = {\n  root: Pc;\n  type: ScaleType;\n  score: number; // 0..100\n  reasons?: string[];\n};\n\nconst CANDIDATE_TYPES_MAJOR: ScaleType[] = [\n  \"Ionian\",\n  \"Lydian\",\n  \"Mixolydian\",\n  \"MajorPentatonic\",\n];\nconst CANDIDATE_TYPES_MINOR: ScaleType[] = [\n  \"Aeolian\",\n  \"Dorian\",\n  \"Phrygian\",\n  \"HarmonicMinor\",\n  \"MelodicMinor\",\n  \"MinorPentatonic\",\n];\n\nfunction uniq<T>(arr: T[]): T[] {\n  return Array.from(new Set(arr));\n}\n\nexport function scoreScales(\n  prog: ChordSym[],\n  key: { root: Pc; mode: Mode }\n): ScaleCandidate[] {\n  const types = key.mode === \"Major\" ? CANDIDATE_TYPES_MAJOR : CANDIDATE_TYPES_MINOR;\n  const chordPcs = uniq(\n    prog.flatMap((ch) => {\n      const p = parseChord(ch);\n      const thirds = p.qual.includes(\"m\") ? 3 : 4;\n      const sevenths = p.qual.includes(\"7\") ? (p.qual.includes(\"M7\") ? 11 : 10) : null;\n      const pcs = [p.root % 12, (p.root + thirds) % 12, (p.root + 7) % 12];\n      if (sevenths !== null) pcs.push((p.root + sevenths) % 12);\n      return pcs;\n    })\n  );\n\n  const hasV7 = prog.some((ch) => /7\\b/.test(ch));\n\n  return types\n    .map<ScaleCandidate>((type) => {\n      const scale = getScalePitches(key.root, type);\n      const hit = chordPcs.filter((pc) => scale.includes(pc)).length;\n      const cover = hit / Math.max(1, chordPcs.length);\n      // ---- bonuses (max total 0.05) ----\n      let bonus = 0;\n      if (key.mode === \"Major\" && type === \"Ionian\") bonus += 0.02;\n      if (key.mode === \"Minor\" && type === \"Aeolian\") bonus += 0.02;\n      if (hasV7 && (type === \"HarmonicMinor\" || type === \"MelodicMinor\")) bonus += 0.03;\n      const raw = Math.min(1, cover + bonus);\n      const score = Math.round(raw * 100);\n      return { root: key.root, type, score };\n    })\n    .sort((a, b) => b.score - a.score);\n}\n\n\n","import { degreeLabelFor, parentModeOf, getScalePitches, type ScaleType } from \"@/lib/scales\";\nimport { parseChord, type ChordSym } from \"@/lib/theory\";\n\nconst ROMAN_UPPER = [\"I\",\"II\",\"III\",\"IV\",\"V\",\"VI\",\"VII\"] as const;\n\nfunction baseRomanFromDegreeLabel(lbl: string | null): string {\n  if (!lbl) return \"I\";\n  const n = Number(lbl.replace(/[♭#]/g, \"\"));\n  const idx = isFinite(n) ? Math.max(1, Math.min(7, n)) - 1 : 0;\n  return ROMAN_UPPER[idx];\n}\n\nfunction qualitySuffix(qual: string): string { return /7/.test(qual) ? \"7\" : \"\"; }\nfunction diminishedSymbol(qual: string): string { return /dim|o/.test(qual) ? \"°\" : \"\"; }\n\nexport function romanizeChord(\n  chord: ChordSym,\n  tonicPc: number,\n  scaleType: ScaleType\n): string {\n  const { root, qual } = parseChord(chord);\n  const effectiveType = parentModeOf(scaleType) ?? scaleType;\n  // try exact degree label first\n  let lbl = degreeLabelFor(root, tonicPc, effectiveType);\n  let accidental = lbl?.startsWith(\"♭\") ? \"♭\" : lbl?.startsWith(\"#\") ? \"♯\" : \"\";\n  // if null, try ±1 semitone nearest mapping\n  if (!lbl) {\n    const pcs = getScalePitches(tonicPc, effectiveType); // absolute pcs\n    const minus = (root + 12 - 1) % 12;\n    const plus = (root + 1) % 12;\n    const idxMinus = pcs.indexOf(minus);\n    const idxPlus = pcs.indexOf(plus);\n    if (idxMinus !== -1) {\n      lbl = degreeLabelFor(minus, tonicPc, effectiveType); // e.g., \"3\"\n      accidental = \"♭\";\n    } else if (idxPlus !== -1) {\n      lbl = degreeLabelFor(plus, tonicPc, effectiveType);\n      accidental = \"♯\";\n    }\n  }\n  const base = baseRomanFromDegreeLabel(lbl);\n  const sym = diminishedSymbol(qual);\n  const suf = qualitySuffix(qual);\n  return `${accidental}${base}${sym}${suf}`;\n}\n\nexport function progressionToRoman(\n  chords: ChordSym[],\n  tonicPc: number,\n  scaleType: ScaleType\n): string[] {\n  return chords.map((c) => romanizeChord(c, tonicPc, scaleType));\n}\n\n\n","import { type Pc } from \"@/lib/theory\";\n\nexport type TriadQuality = 'maj'|'min'|'dim'|'aug';\n\nexport type DiatonicTriad = {\n  degree: 1|2|3|4|5|6|7;\n  rootPc: Pc;\n  pcs: [Pc, Pc, Pc]; // root, third, fifth (0..11)\n  quality: TriadQuality;\n};\n\n// Build 7 diatonic triads from scale intervals (e.g. Ionian [0,2,4,5,7,9,11])\nexport function diatonicTriads({ tonicPc, scaleIntervals }:{ tonicPc: Pc; scaleIntervals: number[] }): DiatonicTriad[] {\n  const pcs = scaleIntervals.map(iv => (tonicPc + iv + 120) % 12);\n  const triads: DiatonicTriad[] = [];\n  for (let i = 0; i < 7; i++) {\n    const deg = (i % 7) as 0|1|2|3|4|5|6;\n    const r = pcs[deg];\n    const t = pcs[(deg + 2) % 7];\n    const f = pcs[(deg + 4) % 7];\n    const q = qualityOfTriad(r, t, f);\n    triads.push({ degree: (i+1) as 1|2|3|4|5|6|7, rootPc: r, pcs: [r,t,f], quality: q });\n  }\n  return triads;\n}\n\nfunction qualityOfTriad(r: number, t: number, f: number): TriadQuality {\n  // intervals from root in semitones (mod 12)\n  const third = (t - r + 12) % 12;\n  const fifth = (f - r + 12) % 12;\n  if (third === 4 && fifth === 7) return 'maj';\n  if (third === 3 && fifth === 7) return 'min';\n  if (third === 3 && fifth === 6) return 'dim';\n  if (third === 4 && fifth === 8) return 'aug';\n  // fallback: closest common qualities\n  if (fifth === 6) return 'dim';\n  if (fifth === 8) return 'aug';\n  return third < 4 ? 'min' : 'maj';\n}\n\nconst ROMAN_UP = [\"I\",\"II\",\"III\",\"IV\",\"V\",\"VI\",\"VII\"] as const;\n\nexport function romanOfTriad(degree: 1|2|3|4|5|6|7, quality: TriadQuality, opts?: { case?: 'upper'|'quality' }): string {\n  const base = ROMAN_UP[degree - 1];\n  const mode = opts?.case ?? 'upper';\n  if (mode === 'upper') {\n    // Always uppercase; add dimin./aug symbols\n    if (quality === 'dim') return base + '°';\n    if (quality === 'aug') return base + '+';\n    return base;\n  }\n  // case: 'quality' → major uppercase, minor lowercase, diminished lowercase+°\n  if (quality === 'min') return base.toLowerCase();\n  if (quality === 'dim') return base.toLowerCase() + '°';\n  if (quality === 'aug') return base + '+';\n  return base; // maj\n}\n\n// Convert a triad (rootPc + quality) to a simple chord symbol (e.g., C, Cm, Cdim, C+)\nconst PC_TO_NAME = ['C','C#','D','Eb','E','F','F#','G','Ab','A','Bb','B'] as const;\nexport function triadToChordSym(t: { rootPc: Pc; quality: TriadQuality }): string {\n  const root = PC_TO_NAME[t.rootPc % 12];\n  if (t.quality === 'maj') return root;\n  if (t.quality === 'min') return root + 'm';\n  if (t.quality === 'dim') return root + 'dim';\n  return root + '+'; // aug\n}\n\n\n","import { create } from \"zustand\";\nimport { type Pc, type Mode, type ChordSym, scoreKeyCandidates } from \"@/lib/theory\";\nimport { scoreScales, type ScaleCandidate } from \"@/lib/analysis/scoreScales\";\nimport { progressionToRoman } from \"@/lib/roman\";\nimport { SCALE_INTERVALS, type ScaleType, parentModeOf } from \"@/lib/scales\";\nimport { diatonicTriads, romanOfTriad } from \"@/lib/theory/diatonic\";\nimport type { CapoOption } from \"@/lib/theory/capo\";\nimport { recommendCapos, type CapoPick } from \"@/lib/capo/recommend\";\n// Type-only import for ScaleId; using relative alias path per tsconfig\n// Avoid type import resolution issue in some toolchains by using a relative path string literal type\ntype ScaleId = 'major'|'natural_minor'|'mixolydian'|'lydian'|'major_pentatonic'|'minor_pentatonic';\n\nexport type Candidate = { tonic: Pc; mode: Mode; confidence: number; reasons: string[] };\nexport type FitTag = \"diatonic\"|\"secondary\"|\"borrowed\"|\"outside\";\nexport type ViewMode = \"sounding\"|\"shaped\"|\"compare\";\n\ntype AnalysisState = {\n  keyCandidates: Candidate[];\n  selectedKey?: { tonic: Pc; mode: Mode };\n  analysis?: { cadence?: string; perChordFit?: FitTag[] };\n  capo: { capo: number; shapedKey: string } | null;\n  viewMode: ViewMode;\n  scaleCandidates: ScaleCandidate[];\n  selectedScale: ScaleCandidate | null;\n  lastProg?: ChordSym[];\n  analyze: (prog: ChordSym[]) => void;\n  selectKey: (key: {tonic: Pc; mode: Mode}) => void;\n  selectScale: (s: ScaleCandidate) => void;\n  chooseCapo: (option: CapoOption) => void;\n  setViewMode: (v: ViewMode) => void;\n  reset: () => void;\n  romanTokens: string[];\n  romanText: string;\n  diatonic: { triads: ReturnType<typeof diatonicTriads>; romans: string[] } | null;\n  recommendedCapos: CapoPick[];\n};\n\nexport const useAnalysisStore = create<AnalysisState>((set, get) => ({\n  keyCandidates: [],\n  capo: null,\n  viewMode: \"sounding\",\n  scaleCandidates: [],\n  selectedScale: null,\n  romanTokens: [],\n  romanText: \"\",\n  diatonic: null,\n  recommendedCapos: [],\n  analyze: (prog) => {\n    set((state)=>{\n      const cands = scoreKeyCandidates(prog);\n      // 既存選択がある場合でも、トップ候補と±4pt以上差があればトップへ切替（誤維持防止）\n      const top = cands[0];\n      const keep = state.selectedKey && cands.find(c=> c.tonic===state.selectedKey!.tonic && c.mode===state.selectedKey!.mode);\n      const shouldKeep = (()=>{\n        if (!keep || !top) return false;\n        const diff = Math.abs((keep.confidence||0) - (top.confidence||0));\n        return diff < 4; // 近差のみ維持\n      })();\n      const nextSel = (shouldKeep && state.selectedKey) ? state.selectedKey : (top ? { tonic: top.tonic, mode: top.mode } : undefined);\n      const sc = nextSel ? scoreScales(prog, { root: nextSel.tonic, mode: nextSel.mode }) : [];\n      const selScale = sc[0] ?? null;\n      const romanTokens = nextSel && selScale ? progressionToRoman(prog, nextSel.tonic, selScale.type) : [];\n      const diatonic = (()=>{\n        if (!nextSel || !selScale) return null;\n        const tonic = nextSel.tonic;\n        let st = selScale.type as ScaleType;\n        let intervals = SCALE_INTERVALS[st] ?? [];\n        if (intervals.length < 7) {\n          const parent = parentModeOf(st);\n          if (parent) { st = parent; intervals = SCALE_INTERVALS[parent] ?? []; }\n        }\n        if (!intervals.length) return null;\n        const triads = diatonicTriads({ tonicPc: tonic, scaleIntervals: intervals });\n        const romans = triads.map(t => romanOfTriad(t.degree, t.quality, { case: 'upper' }));\n        return { triads, romans };\n      })();\n      const recommendedCapos = nextSel && selScale ? recommendCapos({ tonic: nextSel.tonic as any, mode: nextSel.mode as any }, { type: selScale.type as any }, 3, { includeOpen: false }) : [];\n      return { keyCandidates: cands, selectedKey: nextSel, scaleCandidates: sc, selectedScale: selScale, lastProg: prog, romanTokens, romanText: romanTokens.join(\" – \"), diatonic, recommendedCapos } as Partial<AnalysisState> as AnalysisState;\n    });\n  },\n  selectKey: (key) => set((state)=>{\n    const prog = state.lastProg ?? [];\n    const sc = scoreScales(prog, { root: key.tonic, mode: key.mode });\n    const selScale = sc[0] ?? null;\n    const romanTokens = selScale ? progressionToRoman(prog, key.tonic, selScale.type) : [];\n    const diatonic = (()=>{\n      if (!selScale) return null;\n      let st = selScale.type as ScaleType;\n      let intervals = SCALE_INTERVALS[st] ?? [];\n      if (intervals.length < 7) {\n        const parent = parentModeOf(st);\n        if (parent) { st = parent; intervals = SCALE_INTERVALS[parent] ?? []; }\n      }\n      if (!intervals.length) return null;\n      const triads = diatonicTriads({ tonicPc: key.tonic, scaleIntervals: intervals });\n      const romans = triads.map(t => romanOfTriad(t.degree, t.quality, { case: 'upper' }));\n      return { triads, romans };\n    })();\n    const recommendedCapos = selScale ? recommendCapos({ tonic: key.tonic as any, mode: key.mode as any }, { type: selScale.type as any }, 3, { includeOpen: false }) : [];\n    return { selectedKey: key, scaleCandidates: sc, selectedScale: selScale, romanTokens, romanText: romanTokens.join(\" – \"), diatonic, recommendedCapos };\n  }),\n  selectScale: (s) => set((state)=>{\n    const prog = state.lastProg ?? [];\n    const key = state.selectedKey;\n    const tokens = prog.length && key ? progressionToRoman(prog, key.tonic, s.type) : [];\n    const diatonic = (()=>{\n      if (!key) return null;\n      let st = s.type as ScaleType;\n      let intervals = SCALE_INTERVALS[st] ?? [];\n      if (intervals.length < 7) {\n        const parent = parentModeOf(st);\n        if (parent) { st = parent; intervals = SCALE_INTERVALS[parent] ?? []; }\n      }\n      if (!intervals.length) return null;\n      const triads = diatonicTriads({ tonicPc: key.tonic, scaleIntervals: intervals });\n      const romans = triads.map(t => romanOfTriad(t.degree, t.quality, { case: 'upper' }));\n      return { triads, romans };\n    })();\n    const recommendedCapos = key ? recommendCapos({ tonic: key.tonic as any, mode: key.mode as any }, { type: s.type as any }, 3, { includeOpen: false }) : [];\n    return { selectedScale: s, romanTokens: tokens, romanText: tokens.join(\" – \"), diatonic, recommendedCapos };\n  }),\n  chooseCapo: (option) => set({ capo: { capo: option.capo, shapedKey: option.shapedKey } }),\n  setViewMode: (v) => set({ viewMode: v }),\n  reset: () => set({ keyCandidates: [], selectedKey: undefined, analysis: undefined, capo: null, viewMode: \"sounding\", scaleCandidates: [], selectedScale: null, lastProg: [] }),\n}));\n\n\n","// Capo recommendation utilities\n// Heuristic scoring favoring open-string friendly shapes\n\nexport type KeySel = { tonic: number; mode: 'major'|'minor'|'Major'|'Minor' };\nexport type ScaleSel = { type: string; tonic?: number };\n\nexport function classifyScaleFlavor(scaleType: string): 'majorish'|'minorish' {\n  const maj = ['Major','Ionian','Lydian','Mixolydian','Major Pentatonic'];\n  const t = scaleType.toLowerCase();\n  for (const s of maj) if (t.includes(s.toLowerCase())) return 'majorish';\n  return 'minorish';\n}\n\n// Open-chord ease per family (I..VII)\nconst MAJOR_FAMILY_SCORES: Record<'C'|'G'|'D'|'A'|'E', number[]> = {\n  C: [3,3,3,1,3,3,0],\n  G: [3,3,1,3,3,3,0],\n  D: [3,3,1,3,3,1,0],\n  A: [3,1,1,3,2,1,0],\n  E: [3,1,0,3,1,1,0],\n};\n\nconst MINOR_FAMILY_SCORES: Record<'Am'|'Em'|'Dm', number[]> = {\n  Am: [3,0,3,3,3,1,3],\n  Em: [3,0,3,3,1,3,3],\n  Dm: [3,0,1,0,3,0,3],\n};\n\nfunction fretWeight(n: number) {\n  if (n <= 5) return 1.0;\n  if (n <= 7) return 0.92;\n  if (n <= 9) return 0.82;\n  return 0.7;\n}\n\nexport function transposeDown(pc: number, n: number) {\n  return ((pc - n) % 12 + 12) % 12;\n}\n\nexport type CapoPick = {\n  capo: number;\n  playAs: string;\n  score: number;\n  reasons: string[];\n};\n\nconst NATURAL_NAME: Record<number,string> = {\n  0:'C',1:'C#',2:'D',3:'Eb',4:'E',5:'F',6:'F#',7:'G',8:'Ab',9:'A',10:'Bb',11:'B'\n};\n\nexport function recommendCapos(key: KeySel, scale: ScaleSel, topN = 3, opts: { includeOpen?: boolean } = {}): CapoPick[] {\n  const includeOpen = opts.includeOpen ?? true;\n  const flavor = classifyScaleFlavor(scale.type);\n  const picks: CapoPick[] = [];\n\n  for (let n = 0; n <= 11; n++) {\n    if (!includeOpen && n === 0) continue;\n    const shapedPc = transposeDown(key.tonic, n);\n    const name = NATURAL_NAME[shapedPc];\n    if (flavor === 'majorish') {\n      const famMap: Record<string, keyof typeof MAJOR_FAMILY_SCORES> = { C:'C', G:'G', D:'D', A:'A', E:'E' };\n      const fam = famMap[name];\n      if (!fam) continue;\n      const base = MAJOR_FAMILY_SCORES[fam].reduce((a,b)=>a+b,0);\n      const bonus = (MAJOR_FAMILY_SCORES[fam][0] >= 2 && MAJOR_FAMILY_SCORES[fam][3] >= 2 && MAJOR_FAMILY_SCORES[fam][4] >= 2) ? 2 : 0;\n      const score = (base + bonus) * fretWeight(n);\n      picks.push({ capo: n, playAs: fam, score, reasons: [ `I–IV–V ${bonus? '◎':'○'}`, `open ${base}/16`, n===0? 'open' : `capo ${n}` ]});\n    } else {\n      const famMap: Record<string, keyof typeof MINOR_FAMILY_SCORES> = { A:'Am', E:'Em', D:'Dm' };\n      const fam = famMap[name];\n      if (!fam) continue;\n      const base = MINOR_FAMILY_SCORES[fam].reduce((a,b)=>a+b,0);\n      const bonus = (MINOR_FAMILY_SCORES[fam][0] >= 2 && MINOR_FAMILY_SCORES[fam][3] >= 2) ? 2 : 0;\n      const score = (base + bonus) * fretWeight(n);\n      picks.push({ capo: n, playAs: fam, score, reasons: [ `i–iv ${bonus? '◎':'○'}`, `open ${base}/16`, n===0? 'open' : `capo ${n}` ]});\n    }\n  }\n\n  return picks.sort((a,b)=> b.score-a.score).slice(0, topN);\n}\n\n\n","\"use client\";\nimport React, { useRef, useCallback } from \"react\";\nimport { useAnalysisStore } from \"@/store/analysisStore\";\nimport { diatonicTriads, triadToChordSym } from \"@/lib/theory/diatonic\";\nimport { romanDegreeLabelsForScale, SCALE_INTERVALS, type ScaleType, parentModeOf } from \"@/lib/scales\";\nimport { recommendCapos } from \"@/lib/capo/recommend\";\nimport { PITCHES } from \"@/lib/theory/capo\";\n\nexport type OnPickArgs = { id: string; row: 'open' | `capo${number}`; degree: number; pcs: number[]; capo: number; isRightClick?: boolean };\nexport default function DiatonicCapoTable({ onPick, selectedId, onSelectId }: { onPick?: (p: OnPickArgs) => void; selectedId?: string | null; onSelectId?: (id: string) => void }) {\n  const selectedKey = useAnalysisStore(s => (s as any).selectedKey);\n  const selectedScale = useAnalysisStore(s => (s as any).selectedScale);\n  const degreeLabels = romanDegreeLabelsForScale(selectedScale?.type ?? 'Ionian');\n  const toFancy = (s: string) => s.replaceAll('b','♭').replaceAll('#','♯');\n  const cellBase = \"px-2 py-1 text-center border rounded-[var(--chip-br)]\";\n  const cellNeutral = \"border-neutral-300 dark:border-neutral-700\";\n  const cellOpen = \"bg-emerald-50 border-emerald-200 text-emerald-900 dark:bg-emerald-800/25 dark:border-emerald-700 dark:text-emerald-100\";\n\n  // Mobile long-press support\n  const longPressTimerRef = useRef<NodeJS.Timeout | null>(null);\n  const longPressTriggeredRef = useRef(false);\n\n  const handleTouchStart = useCallback((i: number, sym: string, pcs: number[]) => {\n    longPressTriggeredRef.current = false;\n    longPressTimerRef.current = setTimeout(() => {\n      longPressTriggeredRef.current = true;\n      const confirmed = window.confirm(`Add \"${sym}\" to progression?`);\n      if (confirmed) {\n        const id = `open-${i}`;\n        onSelectId?.(id);\n        onPick?.({ id, row: 'open', degree: i, pcs, capo: 0, isRightClick: true });\n      }\n    }, 500); // 500ms long press\n  }, [onPick, onSelectId]);\n\n  const handleTouchEnd = useCallback(() => {\n    if (longPressTimerRef.current) {\n      clearTimeout(longPressTimerRef.current);\n      longPressTimerRef.current = null;\n    }\n  }, []);\n\n  const openCells = React.useMemo(() => {\n    if (!selectedKey || !selectedScale) return Array(7).fill({ sym:'—', pcs:[] as number[] });\n    let st = selectedScale.type as ScaleType;\n    let ivs = SCALE_INTERVALS[st] ?? [];\n    if (ivs.length !== 7) {\n      const parent = parentModeOf(st);\n      if (parent) ivs = SCALE_INTERVALS[parent] ?? [];\n    }\n    if (ivs.length !== 7) return Array(7).fill({ sym:'—', pcs:[] as number[] });\n    const tris = diatonicTriads({ tonicPc: selectedKey.tonic, scaleIntervals: ivs });\n    return tris.map(t => ({ sym: triadToChordSym({ rootPc: t.rootPc, quality: t.quality }), pcs: t.pcs }));\n  }, [selectedKey, selectedScale]);\n\n  const capoRows = React.useMemo(() => {\n    if (!selectedKey || !selectedScale) return [] as Array<{ capo:number; label:string; cells:string[]; cellsPcs:number[][]; tooltip?:string }>;\n    const modeLabel = (selectedKey.mode === 'Major' || selectedKey.mode === 'Minor') ? selectedKey.mode : ((selectedKey.mode as any) === 'major' ? 'Major' : 'Minor');\n    const picks = recommendCapos({ tonic: selectedKey.tonic, mode: modeLabel as any }, { type: selectedScale.type as any }, 3, { includeOpen: true });\n    const nonZero = picks.filter(p => p.capo !== 0).sort((a,b)=> a.capo - b.capo).slice(0,2);\n    return nonZero.map(p => {\n      const playAs = p.playAs; // e.g., G or Am\n      const isMinor = /m$/.test(playAs);\n      const name = isMinor ? playAs.replace(/m$/,'') : playAs;\n      const pc = PITCHES.indexOf(name as any);\n      let st = selectedScale.type as ScaleType;\n      let ivs = SCALE_INTERVALS[st] ?? [];\n      if (ivs.length !== 7) {\n        const parent = parentModeOf(st);\n        if (parent) ivs = SCALE_INTERVALS[parent] ?? [];\n      }\n      const tris = ivs.length===7 ? diatonicTriads({ tonicPc: pc, scaleIntervals: ivs }) : [];\n      const cells = (tris.length? tris : Array(7).fill(null)).map((t:any)=> t ? triadToChordSym({ rootPc: t.rootPc, quality: t.quality }) : '—');\n      const cellsPcs = (tris.length? tris : Array(7).fill(null)).map((t:any)=> t ? (t.pcs as number[]) : []);\n      return { capo: p.capo, label: `Capo ${p.capo}`, cells, cellsPcs, tooltip: `Play as ${playAs}${(p.reasons&&p.reasons.length? ' · ' + p.reasons.join(' · ') : '')}` };\n    });\n  }, [selectedKey, selectedScale]);\n\n  const header = degreeLabels.map(toFancy);\n\n  return (\n    <div className=\"overflow-x-auto capo-compact capo-compact--tight\" aria-live=\"polite\" aria-labelledby=\"diatonic-title\">\n      <table className=\"w-full border-separate rounded-xl border text-sm md:text-[0.95rem]\" style={{ borderSpacing: '6px' }}>\n        <colgroup>\n          <col className=\"w-12 sm:w-14 md:w-18\" />\n          <col span={7} />\n        </colgroup>\n        <thead>\n          <tr>\n            <th scope=\"col\" className=\"px-1 py-0 text-center text-sm font-medium border-none bg-transparent rounded-none\"></th>\n            {header.map((d,i)=> (\n              <th key={`hdr-${i}`} scope=\"col\" className=\"px-1 py-0 text-center text-sm font-medium border-none bg-transparent rounded-none\">{d}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          <tr data-row=\"open\">\n            <th scope=\"row\" className=\"px-1 py-0 text-center text-xs font-normal border-none bg-transparent rounded-none text-foreground/70\" title=\"Open (no capo)\">Open</th>\n            {openCells.map((c, i)=> (\n              // cell id unique: open-<degreeIndex>\n              <td\n                key={`open-${i}`}\n                className={[cellBase, cellOpen, onPick ? 'cursor-pointer select-none tapfx' : '', (selectedId === `open-${i}` ? 'ring-2 ring-emerald-400/60 dia-cell--active' : 'dia-cell--idle')].join(' ')}\n                onClick={(e) => {\n                  if ((e as unknown as MouseEvent).button === 2) return; // 右クリックは無視\n                  if (longPressTriggeredRef.current) { longPressTriggeredRef.current = false; return; } // 長押し後のクリックを無視\n                  const id = `open-${i}`; onSelectId?.(id); onPick?.({ id, row: 'open', degree: i, pcs: c.pcs, capo: 0 });\n                }}\n                onContextMenu={(e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  const confirmed = window.confirm(`Add \"${c.sym}\" to progression?`);\n                  if (confirmed) {\n                    const id = `open-${i}`;\n                    onSelectId?.(id);\n                    onPick?.({ id, row: 'open', degree: i, pcs: c.pcs, capo: 0, isRightClick: true });\n                  }\n                }}\n                onTouchStart={() => handleTouchStart(i, c.sym, c.pcs)}\n                onTouchEnd={handleTouchEnd}\n                onTouchCancel={handleTouchEnd}\n                role={onPick ? 'button' : undefined}\n                aria-label={onPick ? `Open ${c.sym}` : undefined}\n                aria-pressed={selectedId === `open-${i}`}\n              >{c.sym}</td>\n            ))}\n          </tr>\n          {capoRows.map((r)=> (\n            <tr key={`capo-${r.capo}`}>\n              <th scope=\"row\" className=\"px-1 py-0 text-center text-xs font-normal border-none bg-transparent rounded-none text-foreground/70\" title={r.tooltip}>{r.label}</th>\n              {r.cells.map((c, i)=> (\n                <td\n                  key={`capo-${r.capo}-${i}`}\n                  className={[cellBase, cellNeutral, 'opacity-65 cursor-default pointer-events-none', (selectedId === `capo${r.capo}-${i}` ? 'dia-cell--active' : 'dia-cell--idle')].join(' ')}\n                  role=\"button\"\n                  tabIndex={-1}\n                  aria-disabled=\"true\"\n                  aria-label={`${r.label} ${c}`}\n                >{c}</td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\n\n","// Simple capo advisor based on friendly open-chord shapes\n// PITCHESは lib/music/constants.ts に統一\nimport { PC_NAMES } from '../music/constants';\ntype Pitch = typeof PC_NAMES[number];\nexport type Mode = 'major'|'minor';\n// 外部で使用するためにエクスポート\nexport const PITCHES = PC_NAMES;\n\nconst SHAPES_MAJOR: {key: Pitch, label: string, weight: number}[] = [\n  { key: 'C', label: 'C', weight: 1.0 },\n  { key: 'G', label: 'G', weight: 1.0 },\n  { key: 'D', label: 'D', weight: 0.95 },\n  { key: 'A', label: 'A', weight: 0.9 },\n  { key: 'E', label: 'E', weight: 0.9 },\n];\nconst SHAPES_MINOR: {key: Pitch, label: string, weight: number}[] = [\n  { key: 'A', label: 'Am', weight: 1.0 },\n  { key: 'E', label: 'Em', weight: 1.0 },\n  { key: 'D', label: 'Dm', weight: 0.8 },\n];\n\nfunction idx(p: string){ const n = p.replace('♭','b').replace('＃','#'); \n  const map: Record<string, Pitch> = { 'Db':'C#','D#':'Eb','Gb':'F#','G#':'Ab','A#':'Bb' } as any;\n  const canon = (map[n as Pitch] || n);\n  return PC_NAMES.indexOf(canon as Pitch);\n}\nconst dist = (from:number,to:number)=> (to-from+12)%12;\n\nexport type CapoOption = {\n  capo: number;\n  shapedKey: string;\n  sounding: { tonic: Pitch, mode: Mode };\n  score: number;\n  notes: string[];\n};\n\nexport function suggestCapoOptions(target: { tonic: string, mode: Mode }): CapoOption[] {\n  const targetIdx = idx(target.tonic);\n  const shapes = target.mode === 'minor' ? SHAPES_MINOR : SHAPES_MAJOR;\n  const options = shapes.map(s => {\n    const capo = dist(idx(s.key), targetIdx);\n    const capoPenalty = capo <= 2 ? 0 : capo <= 4 ? 0.1 : capo <= 6 ? 0.25 : 0.4;\n    const score = s.weight - capoPenalty;\n    const notes: string[] = [];\n    if (capo <= 2) notes.push('Low position');\n    if (capo >= 6) notes.push('Higher position (thinner tone)');\n    if (/^(E|A|C|G)/.test(s.label)) notes.push('Many open strings');\n    return {\n      capo,\n      shapedKey: target.mode === 'minor' ? s.label : s.label,\n      sounding: { tonic: PC_NAMES[targetIdx], mode: target.mode },\n      score,\n      notes\n    } as CapoOption;\n  }).sort((a,b)=> b.score-a.score);\n  const picked: CapoOption[] = [];\n  for (const o of options) if (!picked.some(p=>p.capo===o.capo)) picked.push(o);\n  return picked.slice(0,3);\n}\n\n\n\n\n\n\n\n\n\n\n\n","\"use client\";\n\nimport { useEffect } from \"react\";\n\ntype Options = {\n  itemSelector?: string;\n  orientation?: \"horizontal\" | \"vertical\" | \"both\";\n  includeHomeEnd?: boolean;\n};\n\nexport function useRovingTabs(root: React.RefObject<HTMLElement | null>, options: Options = {}) {\n  const {\n    itemSelector = '[role=\"tab\"],[data-roving=\"item\"]',\n    orientation = \"horizontal\",\n    includeHomeEnd = true,\n  } = options;\n\n  useEffect(() => {\n    const el = root.current;\n    if (!el) return;\n\n    const getItems = () => Array.from(el.querySelectorAll<HTMLElement>(itemSelector)).filter((node) => !node.hasAttribute(\"disabled\"));\n    const setTabIndex = (items: HTMLElement[], idx: number) => {\n      items.forEach((node, i) => (node.tabIndex = i === idx ? 0 : -1));\n    };\n\n    const applyInitial = () => {\n      const items = getItems();\n      if (!items.length) return;\n      let index = items.findIndex((node) => node.getAttribute(\"aria-selected\") === \"true\" || node.tabIndex === 0 || node === document.activeElement);\n      if (index < 0) index = 0;\n      setTabIndex(items, index);\n    };\n\n    applyInitial();\n\n    const onKey = (event: KeyboardEvent) => {\n      const items = getItems();\n      if (!items.length) return;\n      const currentIndex = items.indexOf(document.activeElement as HTMLElement);\n      if (currentIndex < 0) return;\n\n      const { key } = event;\n      const horizontal = orientation === \"horizontal\" || orientation === \"both\";\n      const vertical = orientation === \"vertical\" || orientation === \"both\";\n      let nextIndex = -1;\n\n      if (horizontal && key === \"ArrowRight\") nextIndex = (currentIndex + 1) % items.length;\n      if (horizontal && key === \"ArrowLeft\") nextIndex = (currentIndex - 1 + items.length) % items.length;\n      if (vertical && key === \"ArrowDown\") nextIndex = (currentIndex + 1) % items.length;\n      if (vertical && key === \"ArrowUp\") nextIndex = (currentIndex - 1 + items.length) % items.length;\n\n      if (nextIndex >= 0) {\n        event.preventDefault();\n        setTabIndex(items, nextIndex);\n        items[nextIndex].focus({ preventScroll: true });\n        return;\n      }\n\n      if (includeHomeEnd && key === \"Home\") {\n        event.preventDefault();\n        setTabIndex(items, 0);\n        items[0].focus({ preventScroll: true });\n        return;\n      }\n\n      if (includeHomeEnd && key === \"End\") {\n        event.preventDefault();\n        const last = items.length - 1;\n        setTabIndex(items, last);\n        items[last].focus({ preventScroll: true });\n      }\n    };\n\n    el.addEventListener(\"keydown\", onKey);\n    return () => {\n      el.removeEventListener(\"keydown\", onKey);\n    };\n  }, [root, itemSelector, orientation, includeHomeEnd]);\n}\n\n\n\n\n\n","/**\n * コード記号のパースとMIDI音への変換\n */\n\nimport { nameToPc, DEFAULT_MIDI_OCTAVE } from './constants';\n\nexport type ChordIntervals = number[];\n\nexport type ParsedChord = {\n  rootPc: number;\n  quality: string;\n  intervals: ChordIntervals;\n};\n\n/**\n * コード記号をパースして構成音のインターバルを返す\n * \n * @param symbol コード記号（例: \"Cmaj7\", \"Am\", \"G7\"）\n * @returns パース結果（ルート音、クオリティ、インターバル）\n */\nexport function parseChordSymbol(symbol: string): ParsedChord | null {\n  // ルート音とクオリティを分離\n  const match = symbol.match(/^([A-G](?:#|b)?)(.*)$/);\n  if (!match) return null;\n\n  const root = match[1];\n  const quality = (match[2] || '').toLowerCase();\n  const rootPc = nameToPc(root);\n  \n  if (rootPc < 0) return null;\n\n  const intervals = getIntervalsForQuality(quality, symbol);\n  \n  return { rootPc, quality, intervals };\n}\n\n/**\n * クオリティ文字列からインターバルを取得\n */\nfunction getIntervalsForQuality(quality: string, originalSymbol: string): ChordIntervals {\n  // 基本トライアド\n  let base: ChordIntervals;\n  \n  // マイナーコードの判定（\"m\" があるが \"maj\" ではない）\n  if (/(^|[^a-z])m(?!aj)/.test(quality)) {\n    base = [0, 3, 7]; // Minor\n  } else if (/dim|°/.test(quality)) {\n    return [0, 3, 6]; // Diminished\n  } else if (/aug|\\+/.test(quality)) {\n    return [0, 4, 8]; // Augmented\n  } else {\n    base = [0, 4, 7]; // Major (default)\n  }\n\n  // 7thコードの処理\n  if (/maj7|M7/.test(originalSymbol)) {\n    return [...base, 11]; // Major 7th\n  } else if (/7/.test(quality)) {\n    return [...base, 10]; // Dominant 7th\n  }\n\n  // 6thコードの処理\n  if (/6/.test(quality)) {\n    return [...base.slice(0, 3), 9]; // 6th\n  }\n\n  // Suspendedコードの処理\n  if (/sus4/.test(quality)) {\n    return [0, 5, 7]; // sus4\n  } else if (/sus2/.test(quality)) {\n    return [0, 2, 7]; // sus2\n  }\n\n  // 9thコードの処理（簡易版）\n  if (/9/.test(quality)) {\n    return [...base, 10, 14]; // Add 9th (2 octaves up)\n  }\n\n  return base;\n}\n\n/**\n * コード記号からMIDI音番号の配列を生成\n * \n * @param symbol コード記号\n * @param octave ベースとなるオクターブ（デフォルト: C4 = 60）\n * @returns MIDI音番号の配列、パース失敗時はnull\n */\nexport function chordToMidi(symbol: string, octave: number = DEFAULT_MIDI_OCTAVE): number[] | null {\n  const parsed = parseChordSymbol(symbol);\n  if (!parsed) return null;\n\n  const base = octave + parsed.rootPc;\n  return parsed.intervals.map(interval => base + interval);\n}\n\n"],"names":[],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,33,34]}