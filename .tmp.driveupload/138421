{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_a71539c9.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_a71539c9-module__T19VSG__className\",\n  \"variable\": \"geist_a71539c9-module__T19VSG__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 11, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_a71539c9.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist%22,%22arguments%22:[{%22variable%22:%22--font-geist-sans%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist', 'Geist Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,gKAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,gKAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,gKAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_8d43a2aa.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_mono_8d43a2aa-module__8Li5zG__className\",\n  \"variable\": \"geist_mono_8d43a2aa-module__8Li5zG__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_8d43a2aa.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist_Mono%22,%22arguments%22:[{%22variable%22:%22--font-geist-mono%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist Mono', 'Geist Mono Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qKAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qKAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qKAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/nh/App/OtoTheory/ototheory-web/src/components/Header.client.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/Header.client.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Header.client.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAoS,GACjU,kEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///Users/nh/App/OtoTheory/ototheory-web/src/components/Header.client.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/Header.client.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/Header.client.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAgR,GAC7S,8CACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file:///Users/nh/App/OtoTheory/ototheory-web/src/components/ProProvider.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const ProProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ProProvider() from the server but ProProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ProProvider.tsx <module evaluation>\",\n    \"ProProvider\",\n);\nexport const usePro = registerClientReference(\n    function() { throw new Error(\"Attempted to call usePro() from the server but usePro is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ProProvider.tsx <module evaluation>\",\n    \"usePro\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;AACvE;;AACO,MAAM,cAAc,IAAA,wQAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,gEACA;AAEG,MAAM,SAAS,IAAA,wQAAuB,EACzC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,gEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":["file:///Users/nh/App/OtoTheory/ototheory-web/src/components/ProProvider.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const ProProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ProProvider() from the server but ProProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ProProvider.tsx\",\n    \"ProProvider\",\n);\nexport const usePro = registerClientReference(\n    function() { throw new Error(\"Attempted to call usePro() from the server but usePro is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ProProvider.tsx\",\n    \"usePro\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;AACvE;;AACO,MAAM,cAAc,IAAA,wQAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,4CACA;AAEG,MAAM,SAAS,IAAA,wQAAuB,EACzC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,4CACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 142, "column": 0}, "map": {"version":3,"sources":["file:///Users/nh/App/OtoTheory/ototheory-web/src/app/AudioUnlocker.client.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/AudioUnlocker.client.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/AudioUnlocker.client.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAoS,GACjU,kEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///Users/nh/App/OtoTheory/ototheory-web/src/app/AudioUnlocker.client.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/AudioUnlocker.client.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/AudioUnlocker.client.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAgR,GAC7S,8CACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":["file:///Users/nh/App/OtoTheory/ototheory-web/src/components/MobileStickyCta.client.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/MobileStickyCta.client.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/MobileStickyCta.client.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA6S,GAC1U,2EACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file:///Users/nh/App/OtoTheory/ototheory-web/src/components/MobileStickyCta.client.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/MobileStickyCta.client.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/MobileStickyCta.client.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAyR,GACtT,uDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":["file:///Users/nh/App/OtoTheory/ototheory-web/src/components/FooterCta.client.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/FooterCta.client.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/FooterCta.client.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAuS,GACpU,qEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///Users/nh/App/OtoTheory/ototheory-web/src/components/FooterCta.client.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/FooterCta.client.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/FooterCta.client.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAmR,GAChT,iDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":["file:///Users/nh/App/OtoTheory/ototheory-web/src/components/GoogleAnalytics.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/GoogleAnalytics.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/GoogleAnalytics.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAsS,GACnU,oEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///Users/nh/App/OtoTheory/ototheory-web/src/components/GoogleAnalytics.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/GoogleAnalytics.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/GoogleAnalytics.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAkR,GAC/S,gDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 278, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 286, "column": 0}, "map": {"version":3,"sources":["file:///Users/nh/App/OtoTheory/ototheory-web/src/components/GoogleTagManager.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const GoogleTagManagerBody = registerClientReference(\n    function() { throw new Error(\"Attempted to call GoogleTagManagerBody() from the server but GoogleTagManagerBody is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/GoogleTagManager.tsx <module evaluation>\",\n    \"GoogleTagManagerBody\",\n);\nexport const GoogleTagManagerHead = registerClientReference(\n    function() { throw new Error(\"Attempted to call GoogleTagManagerHead() from the server but GoogleTagManagerHead is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/GoogleTagManager.tsx <module evaluation>\",\n    \"GoogleTagManagerHead\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;AACvE;;AACO,MAAM,uBAAuB,IAAA,wQAAuB,EACvD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,qEACA;AAEG,MAAM,uBAAuB,IAAA,wQAAuB,EACvD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,qEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 305, "column": 0}, "map": {"version":3,"sources":["file:///Users/nh/App/OtoTheory/ototheory-web/src/components/GoogleTagManager.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const GoogleTagManagerBody = registerClientReference(\n    function() { throw new Error(\"Attempted to call GoogleTagManagerBody() from the server but GoogleTagManagerBody is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/GoogleTagManager.tsx\",\n    \"GoogleTagManagerBody\",\n);\nexport const GoogleTagManagerHead = registerClientReference(\n    function() { throw new Error(\"Attempted to call GoogleTagManagerHead() from the server but GoogleTagManagerHead is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/GoogleTagManager.tsx\",\n    \"GoogleTagManagerHead\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;AACvE;;AACO,MAAM,uBAAuB,IAAA,wQAAuB,EACvD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,iDACA;AAEG,MAAM,uBAAuB,IAAA,wQAAuB,EACvD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,iDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 332, "column": 0}, "map": {"version":3,"sources":["file:///Users/nh/App/OtoTheory/ototheory-web/src/components/FooterNav.client.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/FooterNav.client.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/FooterNav.client.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAuS,GACpU,qEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 346, "column": 0}, "map": {"version":3,"sources":["file:///Users/nh/App/OtoTheory/ototheory-web/src/components/FooterNav.client.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/FooterNav.client.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/FooterNav.client.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAmR,GAChT,iDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 360, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 368, "column": 0}, "map": {"version":3,"sources":["file:///Users/nh/App/OtoTheory/ototheory-web/src/components/StructuredData.tsx"],"sourcesContent":["import Script from 'next/script';\n\ninterface StructuredDataProps {\n  type: 'WebSite' | 'WebPage' | 'SoftwareApplication';\n  data: any;\n}\n\nexport default function StructuredData({ type, data }: StructuredDataProps) {\n  const structuredData = {\n    '@context': 'https://schema.org',\n    '@type': type,\n    ...data,\n  };\n\n  return (\n    <Script\n      id=\"structured-data\"\n      type=\"application/ld+json\"\n      dangerouslySetInnerHTML={{\n        __html: JSON.stringify(structuredData, null, 2),\n      }}\n    />\n  );\n}\n\n// ホームページ用の構造化データ\nexport function HomePageStructuredData() {\n  return (\n    <StructuredData\n      type=\"WebSite\"\n      data={{\n        name: 'OtoTheory',\n        description: 'Free guitar chord finder, key analyzer, and music theory tool. Build chord progressions, discover scales, and support composition and guitar improvisation theoretically.',\n        url: 'https://www.ototheory.com',\n        potentialAction: {\n          '@type': 'SearchAction',\n          target: 'https://www.ototheory.com/find-chords?q={search_term_string}',\n          'query-input': 'required name=search_term_string',\n        },\n        sameAs: [\n          'https://github.com/TH-Cats/OtoTheory',\n        ],\n      }}\n    />\n  );\n}\n\n// コードライブラリページ用の構造化データ\nexport function ChordLibraryStructuredData() {\n  return (\n    <StructuredData\n      type=\"WebPage\"\n      data={{\n        name: 'Guitar Chord Library',\n        description: 'Interactive chord diagrams with finger numbers, strum/arpeggio preview, and compare mode for guitarists.',\n        url: 'https://www.ototheory.com/chord-library',\n        isPartOf: {\n          '@type': 'WebSite',\n          name: 'OtoTheory',\n          url: 'https://www.ototheory.com',\n        },\n        breadcrumb: {\n          '@type': 'BreadcrumbList',\n          itemListElement: [\n            {\n              '@type': 'ListItem',\n              position: 1,\n              name: 'Home',\n              item: 'https://www.ototheory.com',\n            },\n            {\n              '@type': 'ListItem',\n              position: 2,\n              name: 'Chord Library',\n              item: 'https://www.ototheory.com/chord-library',\n            },\n          ],\n        },\n      }}\n    />\n  );\n}\n\n// アプリケーション用の構造化データ\nexport function AppStructuredData() {\n  return (\n    <StructuredData\n      type=\"SoftwareApplication\"\n      data={{\n        name: 'OtoTheory',\n        description: 'Free guitar chord finder, key analyzer, and music theory tool for guitarists.',\n        url: 'https://www.ototheory.com',\n        applicationCategory: 'MusicApplication',\n        operatingSystem: 'Web Browser, iOS',\n        offers: {\n          '@type': 'Offer',\n          price: '0',\n          priceCurrency: 'USD',\n        },\n        aggregateRating: {\n          '@type': 'AggregateRating',\n          ratingValue: '4.8',\n          ratingCount: '150',\n        },\n      }}\n    />\n  );\n}\n\n// パンくずリスト用の構造化データ\nexport function BreadcrumbStructuredData() {\n  return null; // 各ページで個別に実装\n}\n\n// FAQ用の構造化データ\nexport function FAQStructuredData() {\n  return (\n    <StructuredData\n      type=\"WebPage\"\n      data={{\n        name: 'FAQ - Frequently Asked Questions',\n        description: 'Frequently asked questions about OtoTheory guitar music theory tool.',\n        url: 'https://www.ototheory.com/faq',\n        mainEntity: {\n          '@type': 'FAQPage',\n          mainEntity: [\n            {\n              '@type': 'Question',\n              name: 'What is OtoTheory?',\n              acceptedAnswer: {\n                '@type': 'Answer',\n                text: 'OtoTheory is a free guitar chord finder, key analyzer, and music theory tool that helps guitarists build chord progressions, discover scales, and support composition and improvisation.',\n              },\n            },\n          ],\n        },\n      }}\n    />\n  );\n}\n\n// 組織用の構造化データ\nexport function OrganizationStructuredData() {\n  return (\n    <StructuredData\n      type=\"Organization\"\n      data={{\n        name: 'OtoTheory',\n        url: 'https://www.ototheory.com',\n        logo: 'https://www.ototheory.com/logo/logo-horizontal.png',\n        description: 'Free guitar chord finder, key analyzer, and music theory tool for guitarists.',\n        sameAs: [\n          'https://github.com/TH-Cats/OtoTheory',\n        ],\n      }}\n    />\n  );\n}\n\n// Webアプリケーション用の構造化データ\nexport function WebApplicationStructuredData() {\n  return (\n    <StructuredData\n      type=\"WebApplication\"\n      data={{\n        name: 'OtoTheory',\n        description: 'Free guitar chord finder, key analyzer, and music theory tool for guitarists.',\n        url: 'https://www.ototheory.com',\n        applicationCategory: 'MusicApplication',\n        operatingSystem: 'Web Browser',\n        offers: {\n          '@type': 'Offer',\n          price: '0',\n          priceCurrency: 'USD',\n        },\n      }}\n    />\n  );\n}\n\n// ソフトウェアアプリケーション用の構造化データ\nexport function SoftwareApplicationStructuredData() {\n  return AppStructuredData();\n}"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;;AAOe,SAAS,eAAe,EAAE,IAAI,EAAE,IAAI,EAAuB;IACxE,MAAM,iBAAiB;QACrB,YAAY;QACZ,SAAS;QACT,GAAG,IAAI;IACT;IAEA,qBACE,8OAAC,yIAAM;QACL,IAAG;QACH,MAAK;QACL,yBAAyB;YACvB,QAAQ,KAAK,SAAS,CAAC,gBAAgB,MAAM;QAC/C;;;;;;AAGN;AAGO,SAAS;IACd,qBACE,8OAAC;QACC,MAAK;QACL,MAAM;YACJ,MAAM;YACN,aAAa;YACb,KAAK;YACL,iBAAiB;gBACf,SAAS;gBACT,QAAQ;gBACR,eAAe;YACjB;YACA,QAAQ;gBACN;aACD;QACH;;;;;;AAGN;AAGO,SAAS;IACd,qBACE,8OAAC;QACC,MAAK;QACL,MAAM;YACJ,MAAM;YACN,aAAa;YACb,KAAK;YACL,UAAU;gBACR,SAAS;gBACT,MAAM;gBACN,KAAK;YACP;YACA,YAAY;gBACV,SAAS;gBACT,iBAAiB;oBACf;wBACE,SAAS;wBACT,UAAU;wBACV,MAAM;wBACN,MAAM;oBACR;oBACA;wBACE,SAAS;wBACT,UAAU;wBACV,MAAM;wBACN,MAAM;oBACR;iBACD;YACH;QACF;;;;;;AAGN;AAGO,SAAS;IACd,qBACE,8OAAC;QACC,MAAK;QACL,MAAM;YACJ,MAAM;YACN,aAAa;YACb,KAAK;YACL,qBAAqB;YACrB,iBAAiB;YACjB,QAAQ;gBACN,SAAS;gBACT,OAAO;gBACP,eAAe;YACjB;YACA,iBAAiB;gBACf,SAAS;gBACT,aAAa;gBACb,aAAa;YACf;QACF;;;;;;AAGN;AAGO,SAAS;IACd,OAAO,MAAM,aAAa;AAC5B;AAGO,SAAS;IACd,qBACE,8OAAC;QACC,MAAK;QACL,MAAM;YACJ,MAAM;YACN,aAAa;YACb,KAAK;YACL,YAAY;gBACV,SAAS;gBACT,YAAY;oBACV;wBACE,SAAS;wBACT,MAAM;wBACN,gBAAgB;4BACd,SAAS;4BACT,MAAM;wBACR;oBACF;iBACD;YACH;QACF;;;;;;AAGN;AAGO,SAAS;IACd,qBACE,8OAAC;QACC,MAAK;QACL,MAAM;YACJ,MAAM;YACN,KAAK;YACL,MAAM;YACN,aAAa;YACb,QAAQ;gBACN;aACD;QACH;;;;;;AAGN;AAGO,SAAS;IACd,qBACE,8OAAC;QACC,MAAK;QACL,MAAM;YACJ,MAAM;YACN,aAAa;YACb,KAAK;YACL,qBAAqB;YACrB,iBAAiB;YACjB,QAAQ;gBACN,SAAS;gBACT,OAAO;gBACP,eAAe;YACjB;QACF;;;;;;AAGN;AAGO,SAAS;IACd,OAAO;AACT","debugId":null}},
    {"offset": {"line": 570, "column": 0}, "map": {"version":3,"sources":["file:///Users/nh/App/OtoTheory/ototheory-web/src/app/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\";\nimport { Geist, Geist_Mono } from \"next/font/google\";\nimport \"./globals.css\";\nimport Header from \"@/components/Header.client\";\nimport { ProProvider } from \"@/components/ProProvider\";\nimport AudioUnlocker from \"./AudioUnlocker.client\";\nimport MobileStickyCta from \"@/components/MobileStickyCta.client\";\nimport FooterCta from \"@/components/FooterCta.client\";\nimport GoogleAnalytics from \"@/components/GoogleAnalytics\";\nimport { GoogleTagManagerHead, GoogleTagManagerBody } from \"@/components/GoogleTagManager\";\nimport Script from \"next/script\";\nimport FooterNav from \"@/components/FooterNav.client\";\nimport { HomePageStructuredData, AppStructuredData } from \"@/components/StructuredData\";\n\nconst geistSans = Geist({\n  variable: \"--font-geist-sans\",\n  subsets: [\"latin\"],\n});\n\nconst geistMono = Geist_Mono({\n  variable: \"--font-geist-mono\",\n  subsets: [\"latin\"],\n});\n\nexport const metadata: Metadata = {\n  title: \"OtoTheory – Guitar Music Theory Made Easy\",\n  description: \"Free guitar chord finder, key analyzer, and music theory tool. Build chord progressions, discover scales, and support composition and guitar improvisation theoretically.\",\n  metadataBase: new URL(\"https://www.ototheory.com\"),\n  alternates: {\n    canonical: \"/\",\n    languages: { en: \"/\", \"ja-JP\": \"/ja\", \"x-default\": \"/\" },\n  },\n  icons: {\n    icon: [\n      { url: \"/favicon.ico\", sizes: \"any\" },\n      { url: \"/favicon-32x32.png\", sizes: \"32x32\", type: \"image/png\" },\n      { url: \"/favicon-16x16.png\", sizes: \"16x16\", type: \"image/png\" },\n    ],\n    apple: [\n      { url: \"/apple-touch-icon.png\", sizes: \"180x180\", type: \"image/png\" },\n    ],\n  },\n  other: {\n    \"google-adsense-account\": \"ca-pub-9662479821167655\",\n  },\n  openGraph: {\n    title: \"OtoTheory – Guitar Music Theory Made Easy\",\n    description: \"Free guitar chord finder, key analyzer, and music theory tool. Build chord progressions, discover scales, and support composition and guitar improvisation.\",\n    url: \"https://www.ototheory.com\",\n    siteName: \"OtoTheory\",\n    images: [\n      { url: \"/og.png\", width: 1200, height: 630, alt: \"OtoTheory – Guitar Music Theory Made Easy\" },\n    ],\n    locale: \"en_US\",\n    type: \"website\",\n  },\n};\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\">\n      <GoogleTagManagerHead />\n      {/* Google AdSense */}\n      <Script\n        async\n        src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-9662479821167655\"\n        crossOrigin=\"anonymous\"\n        strategy=\"afterInteractive\"\n      />\n      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>\n        <GoogleTagManagerBody />\n        <AudioUnlocker />\n        <MobileStickyCta />\n        <ProProvider>\n        <Header />\n        <main className=\"pt-1 pb-4 sm:pt-2 sm:pb-6\">\n          {children}\n        </main>\n        <footer className=\"mt-16 py-8 text-center text-xs text-black/60 dark:text-white/60 border-t border-black/10 dark:border-white/10\">\n          <div className=\"container space-y-3\">\n            <FooterCta />\n            <FooterNav />\n            <div>© {new Date().getFullYear()} OtoTheory</div>\n          </div>\n        </footer>\n\n        <GoogleAnalytics />\n        <HomePageStructuredData />\n        <AppStructuredData />\n        </ProProvider>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AAYO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;IACb,cAAc,IAAI,IAAI;IACtB,YAAY;QACV,WAAW;QACX,WAAW;YAAE,IAAI;YAAK,SAAS;YAAO,aAAa;QAAI;IACzD;IACA,OAAO;QACL,MAAM;YACJ;gBAAE,KAAK;gBAAgB,OAAO;YAAM;YACpC;gBAAE,KAAK;gBAAsB,OAAO;gBAAS,MAAM;YAAY;YAC/D;gBAAE,KAAK;gBAAsB,OAAO;gBAAS,MAAM;YAAY;SAChE;QACD,OAAO;YACL;gBAAE,KAAK;gBAAyB,OAAO;gBAAW,MAAM;YAAY;SACrE;IACH;IACA,OAAO;QACL,0BAA0B;IAC5B;IACA,WAAW;QACT,OAAO;QACP,aAAa;QACb,KAAK;QACL,UAAU;QACV,QAAQ;YACN;gBAAE,KAAK;gBAAW,OAAO;gBAAM,QAAQ;gBAAK,KAAK;YAA4C;SAC9F;QACD,QAAQ;QACR,MAAM;IACR;AACF;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGR;IACA,qBACE,8OAAC;QAAK,MAAK;;0BACT,8OAAC,8JAAoB;;;;;0BAErB,8OAAC,yIAAM;gBACL,KAAK;gBACL,KAAI;gBACJ,aAAY;gBACZ,UAAS;;;;;;0BAEX,8OAAC;gBAAK,WAAW,GAAG,oJAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,yJAAS,CAAC,QAAQ,CAAC,YAAY,CAAC;;kCACxE,8OAAC,8JAAoB;;;;;kCACrB,8OAAC,iJAAa;;;;;kCACd,8OAAC,0JAAe;;;;;kCAChB,8OAAC,gJAAW;;0CACZ,8OAAC,iJAAM;;;;;0CACP,8OAAC;gCAAK,WAAU;0CACb;;;;;;0CAEH,8OAAC;gCAAO,WAAU;0CAChB,cAAA,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,oJAAS;;;;;sDACV,8OAAC,oJAAS;;;;;sDACV,8OAAC;;gDAAI;gDAAG,IAAI,OAAO,WAAW;gDAAG;;;;;;;;;;;;;;;;;;0CAIrC,8OAAC,gJAAe;;;;;0CAChB,8OAAC,8JAAsB;;;;;0CACvB,8OAAC,yJAAiB;;;;;;;;;;;;;;;;;;;;;;;AAK1B","debugId":null}},
    {"offset": {"line": 787, "column": 0}, "map": {"version":3,"sources":["file:///Users/nh/App/OtoTheory/ototheory-web/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-rsc']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 791, "column": 0}, "map": {"version":3,"sources":["file:///Users/nh/App/OtoTheory/ototheory-web/node_modules/next/dist/client/script.js/__nextjs-internal-proxy.cjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nconst { createClientModuleProxy } = require(\"react-server-dom-turbopack/server\");\n\n__turbopack_context__.n(createClientModuleProxy(\"[project]/node_modules/next/dist/client/script.js <module evaluation>\"));\n"],"names":[],"mappings":"AAAA,uEAAuE;AACvE,MAAM,EAAE,uBAAuB,EAAE;AAEjC,sBAAsB,CAAC,CAAC,wBAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 797, "column": 0}, "map": {"version":3,"sources":["file:///Users/nh/App/OtoTheory/ototheory-web/node_modules/next/dist/client/script.js/__nextjs-internal-proxy.cjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nconst { createClientModuleProxy } = require(\"react-server-dom-turbopack/server\");\n\n__turbopack_context__.n(createClientModuleProxy(\"[project]/node_modules/next/dist/client/script.js\"));\n"],"names":[],"mappings":"AAAA,uEAAuE;AACvE,MAAM,EAAE,uBAAuB,EAAE;AAEjC,sBAAsB,CAAC,CAAC,wBAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 804, "column": 0}, "map": {"version":3,"sources":["file:///Users/nh/App/OtoTheory/ototheory-web/node_modules/next/src/client/script.tsx"],"sourcesContent":["'use client'\n\nimport ReactDOM from 'react-dom'\nimport React, { useEffect, useContext, useRef, type JSX } from 'react'\nimport type { ScriptHTMLAttributes } from 'react'\nimport { HeadManagerContext } from '../shared/lib/head-manager-context.shared-runtime'\nimport { setAttributesFromProps } from './set-attributes-from-props'\nimport { requestIdleCallback } from './request-idle-callback'\n\nconst ScriptCache = new Map()\nconst LoadCache = new Set()\n\nexport interface ScriptProps extends ScriptHTMLAttributes<HTMLScriptElement> {\n  strategy?: 'afterInteractive' | 'lazyOnload' | 'beforeInteractive' | 'worker'\n  id?: string\n  onLoad?: (e: any) => void\n  onReady?: () => void | null\n  onError?: (e: any) => void\n  children?: React.ReactNode\n  stylesheets?: string[]\n}\n\n/**\n * @deprecated Use `ScriptProps` instead.\n */\nexport type Props = ScriptProps\n\nconst insertStylesheets = (stylesheets: string[]) => {\n  // Case 1: Styles for afterInteractive/lazyOnload with appDir injected via handleClientScriptLoad\n  //\n  // Using ReactDOM.preinit to feature detect appDir and inject styles\n  // Stylesheets might have already been loaded if initialized with Script component\n  // Re-inject styles here to handle scripts loaded via handleClientScriptLoad\n  // ReactDOM.preinit handles dedup and ensures the styles are loaded only once\n  if (ReactDOM.preinit) {\n    stylesheets.forEach((stylesheet: string) => {\n      ReactDOM.preinit(stylesheet, { as: 'style' })\n    })\n\n    return\n  }\n\n  // Case 2: Styles for afterInteractive/lazyOnload with pages injected via handleClientScriptLoad\n  //\n  // We use this function to load styles when appdir is not detected\n  // TODO: Use React float APIs to load styles once available for pages dir\n  if (typeof window !== 'undefined') {\n    let head = document.head\n    stylesheets.forEach((stylesheet: string) => {\n      let link = document.createElement('link')\n\n      link.type = 'text/css'\n      link.rel = 'stylesheet'\n      link.href = stylesheet\n\n      head.appendChild(link)\n    })\n  }\n}\n\nconst loadScript = (props: ScriptProps): void => {\n  const {\n    src,\n    id,\n    onLoad = () => {},\n    onReady = null,\n    dangerouslySetInnerHTML,\n    children = '',\n    strategy = 'afterInteractive',\n    onError,\n    stylesheets,\n  } = props\n\n  const cacheKey = id || src\n\n  // Script has already loaded\n  if (cacheKey && LoadCache.has(cacheKey)) {\n    return\n  }\n\n  // Contents of this script are already loading/loaded\n  if (ScriptCache.has(src)) {\n    LoadCache.add(cacheKey)\n    // It is possible that multiple `next/script` components all have same \"src\", but has different \"onLoad\"\n    // This is to make sure the same remote script will only load once, but \"onLoad\" are executed in order\n    ScriptCache.get(src).then(onLoad, onError)\n    return\n  }\n\n  /** Execute after the script first loaded */\n  const afterLoad = () => {\n    // Run onReady for the first time after load event\n    if (onReady) {\n      onReady()\n    }\n    // add cacheKey to LoadCache when load successfully\n    LoadCache.add(cacheKey)\n  }\n\n  const el = document.createElement('script')\n\n  const loadPromise = new Promise<void>((resolve, reject) => {\n    el.addEventListener('load', function (e) {\n      resolve()\n      if (onLoad) {\n        onLoad.call(this, e)\n      }\n      afterLoad()\n    })\n    el.addEventListener('error', function (e) {\n      reject(e)\n    })\n  }).catch(function (e) {\n    if (onError) {\n      onError(e)\n    }\n  })\n\n  if (dangerouslySetInnerHTML) {\n    // Casting since lib.dom.d.ts doesn't have TrustedHTML yet.\n    el.innerHTML = (dangerouslySetInnerHTML.__html as string) || ''\n\n    afterLoad()\n  } else if (children) {\n    el.textContent =\n      typeof children === 'string'\n        ? children\n        : Array.isArray(children)\n          ? children.join('')\n          : ''\n\n    afterLoad()\n  } else if (src) {\n    el.src = src\n    // do not add cacheKey into LoadCache for remote script here\n    // cacheKey will be added to LoadCache when it is actually loaded (see loadPromise above)\n\n    ScriptCache.set(src, loadPromise)\n  }\n\n  setAttributesFromProps(el, props)\n\n  if (strategy === 'worker') {\n    el.setAttribute('type', 'text/partytown')\n  }\n\n  el.setAttribute('data-nscript', strategy)\n\n  // Load styles associated with this script\n  if (stylesheets) {\n    insertStylesheets(stylesheets)\n  }\n\n  document.body.appendChild(el)\n}\n\nexport function handleClientScriptLoad(props: ScriptProps) {\n  const { strategy = 'afterInteractive' } = props\n  if (strategy === 'lazyOnload') {\n    window.addEventListener('load', () => {\n      requestIdleCallback(() => loadScript(props))\n    })\n  } else {\n    loadScript(props)\n  }\n}\n\nfunction loadLazyScript(props: ScriptProps) {\n  if (document.readyState === 'complete') {\n    requestIdleCallback(() => loadScript(props))\n  } else {\n    window.addEventListener('load', () => {\n      requestIdleCallback(() => loadScript(props))\n    })\n  }\n}\n\nfunction addBeforeInteractiveToCache() {\n  const scripts = [\n    ...document.querySelectorAll('[data-nscript=\"beforeInteractive\"]'),\n    ...document.querySelectorAll('[data-nscript=\"beforePageRender\"]'),\n  ]\n  scripts.forEach((script) => {\n    const cacheKey = script.id || script.getAttribute('src')\n    LoadCache.add(cacheKey)\n  })\n}\n\nexport function initScriptLoader(scriptLoaderItems: ScriptProps[]) {\n  scriptLoaderItems.forEach(handleClientScriptLoad)\n  addBeforeInteractiveToCache()\n}\n\n/**\n * Load a third-party scripts in an optimized way.\n *\n * Read more: [Next.js Docs: `next/script`](https://nextjs.org/docs/app/api-reference/components/script)\n */\nfunction Script(props: ScriptProps): JSX.Element | null {\n  const {\n    id,\n    src = '',\n    onLoad = () => {},\n    onReady = null,\n    strategy = 'afterInteractive',\n    onError,\n    stylesheets,\n    ...restProps\n  } = props\n\n  // Context is available only during SSR\n  let { updateScripts, scripts, getIsSsr, appDir, nonce } =\n    useContext(HeadManagerContext)\n\n  // if a nonce is explicitly passed to the script tag, favor that over the automatic handling\n  nonce = restProps.nonce || nonce\n\n  /**\n   * - First mount:\n   *   1. The useEffect for onReady executes\n   *   2. hasOnReadyEffectCalled.current is false, but the script hasn't loaded yet (not in LoadCache)\n   *      onReady is skipped, set hasOnReadyEffectCalled.current to true\n   *   3. The useEffect for loadScript executes\n   *   4. hasLoadScriptEffectCalled.current is false, loadScript executes\n   *      Once the script is loaded, the onLoad and onReady will be called by then\n   *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n   *   5. The useEffect for onReady executes again\n   *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n   *   7. The useEffect for loadScript executes again\n   *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n   *\n   * - Second mount:\n   *   1. The useEffect for onReady executes\n   *   2. hasOnReadyEffectCalled.current is false, but the script has already loaded (found in LoadCache)\n   *      onReady is called, set hasOnReadyEffectCalled.current to true\n   *   3. The useEffect for loadScript executes\n   *   4. The script is already loaded, loadScript bails out\n   *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n   *   5. The useEffect for onReady executes again\n   *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n   *   7. The useEffect for loadScript executes again\n   *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n   */\n  const hasOnReadyEffectCalled = useRef(false)\n\n  useEffect(() => {\n    const cacheKey = id || src\n    if (!hasOnReadyEffectCalled.current) {\n      // Run onReady if script has loaded before but component is re-mounted\n      if (onReady && cacheKey && LoadCache.has(cacheKey)) {\n        onReady()\n      }\n\n      hasOnReadyEffectCalled.current = true\n    }\n  }, [onReady, id, src])\n\n  const hasLoadScriptEffectCalled = useRef(false)\n\n  useEffect(() => {\n    if (!hasLoadScriptEffectCalled.current) {\n      if (strategy === 'afterInteractive') {\n        loadScript(props)\n      } else if (strategy === 'lazyOnload') {\n        loadLazyScript(props)\n      }\n\n      hasLoadScriptEffectCalled.current = true\n    }\n  }, [props, strategy])\n\n  if (strategy === 'beforeInteractive' || strategy === 'worker') {\n    if (updateScripts) {\n      scripts[strategy] = (scripts[strategy] || []).concat([\n        {\n          id,\n          src,\n          onLoad,\n          onReady,\n          onError,\n          ...restProps,\n          nonce,\n        },\n      ])\n      updateScripts(scripts)\n    } else if (getIsSsr && getIsSsr()) {\n      // Script has already loaded during SSR\n      LoadCache.add(id || src)\n    } else if (getIsSsr && !getIsSsr()) {\n      loadScript({\n        ...props,\n        nonce,\n      })\n    }\n  }\n\n  // For the app directory, we need React Float to preload these scripts.\n  if (appDir) {\n    // Injecting stylesheets here handles beforeInteractive and worker scripts correctly\n    // For other strategies injecting here ensures correct stylesheet order\n    // ReactDOM.preinit handles loading the styles in the correct order,\n    // also ensures the stylesheet is loaded only once and in a consistent manner\n    //\n    // Case 1: Styles for beforeInteractive/worker with appDir - handled here\n    // Case 2: Styles for beforeInteractive/worker with pages dir - Not handled yet\n    // Case 3: Styles for afterInteractive/lazyOnload with appDir - handled here\n    // Case 4: Styles for afterInteractive/lazyOnload with pages dir - handled in insertStylesheets function\n    if (stylesheets) {\n      stylesheets.forEach((styleSrc) => {\n        ReactDOM.preinit(styleSrc, { as: 'style' })\n      })\n    }\n\n    // Before interactive scripts need to be loaded by Next.js' runtime instead\n    // of native <script> tags, because they no longer have `defer`.\n    if (strategy === 'beforeInteractive') {\n      if (!src) {\n        // For inlined scripts, we put the content in `children`.\n        if (restProps.dangerouslySetInnerHTML) {\n          // Casting since lib.dom.d.ts doesn't have TrustedHTML yet.\n          restProps.children = restProps.dangerouslySetInnerHTML\n            .__html as string\n          delete restProps.dangerouslySetInnerHTML\n        }\n\n        return (\n          <script\n            nonce={nonce}\n            dangerouslySetInnerHTML={{\n              __html: `(self.__next_s=self.__next_s||[]).push(${JSON.stringify([\n                0,\n                { ...restProps, id },\n              ])})`,\n            }}\n          />\n        )\n      } else {\n        // @ts-ignore\n        ReactDOM.preload(\n          src,\n          restProps.integrity\n            ? {\n                as: 'script',\n                integrity: restProps.integrity,\n                nonce,\n                crossOrigin: restProps.crossOrigin,\n              }\n            : { as: 'script', nonce, crossOrigin: restProps.crossOrigin }\n        )\n        return (\n          <script\n            nonce={nonce}\n            dangerouslySetInnerHTML={{\n              __html: `(self.__next_s=self.__next_s||[]).push(${JSON.stringify([\n                src,\n                { ...restProps, id },\n              ])})`,\n            }}\n          />\n        )\n      }\n    } else if (strategy === 'afterInteractive') {\n      if (src) {\n        // @ts-ignore\n        ReactDOM.preload(\n          src,\n          restProps.integrity\n            ? {\n                as: 'script',\n                integrity: restProps.integrity,\n                nonce,\n                crossOrigin: restProps.crossOrigin,\n              }\n            : { as: 'script', nonce, crossOrigin: restProps.crossOrigin }\n        )\n      }\n    }\n  }\n\n  return null\n}\n\nObject.defineProperty(Script, '__nextScript', { value: true })\n\nexport default Script\n"],"names":["handleClientScriptLoad","initScriptLoader","ScriptCache","Map","LoadCache","Set","insertStylesheets","stylesheets","ReactDOM","preinit","forEach","stylesheet","as","window","head","document","link","createElement","type","rel","href","appendChild","loadScript","props","src","id","onLoad","onReady","dangerouslySetInnerHTML","children","strategy","onError","cacheKey","has","add","get","then","afterLoad","el","loadPromise","Promise","resolve","reject","addEventListener","e","call","catch","innerHTML","__html","textContent","Array","isArray","join","set","setAttributesFromProps","setAttribute","body","requestIdleCallback","loadLazyScript","readyState","addBeforeInteractiveToCache","scripts","querySelectorAll","script","getAttribute","scriptLoaderItems","Script","restProps","updateScripts","getIsSsr","appDir","nonce","useContext","HeadManagerContext","hasOnReadyEffectCalled","useRef","useEffect","current","hasLoadScriptEffectCalled","concat","styleSrc","JSON","stringify","preload","integrity","crossOrigin","Object","defineProperty","value"],"mappings":"","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 811, "column": 0}, "map": {"version":3,"sources":["file:///Users/nh/App/OtoTheory/ototheory-web/node_modules/next/script.js"],"sourcesContent":["module.exports = require('./dist/client/script')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}