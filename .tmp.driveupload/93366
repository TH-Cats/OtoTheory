{"version":3,"sources":["turbopack:///[project]/node_modules/note-parser/index.js","turbopack:///[project]/node_modules/soundfont-player/lib/legacy.js","turbopack:///[project]/node_modules/audio-loader/lib/base64.js","turbopack:///[project]/node_modules/audio-loader/lib/fetch.js","turbopack:///[project]/node_modules/audio-loader/lib/index.js","turbopack:///[project]/node_modules/adsr/index.js","turbopack:///[project]/node_modules/sample-player/lib/player.js","turbopack:///[project]/node_modules/sample-player/lib/events.js","turbopack:///[project]/node_modules/sample-player/node_modules/note-parser/index.js","turbopack:///[project]/node_modules/sample-player/lib/notes.js","turbopack:///[project]/node_modules/sample-player/lib/scheduler.js","turbopack:///[project]/node_modules/midimessage/dist/index.min.js","turbopack:///[project]/node_modules/sample-player/lib/midi.js","turbopack:///[project]/node_modules/sample-player/lib/index.js","turbopack:///[project]/node_modules/soundfont-player/lib/index.js","turbopack:///[project]/src/lib/audio/player.ts","turbopack:///[project]/src/lib/audio/voices.ts"],"sourcesContent":["'use strict'\n\n// util\nfunction fillStr (s, num) { return Array(num + 1).join(s) }\nfunction isNum (x) { return typeof x === 'number' }\nfunction isStr (x) { return typeof x === 'string' }\nfunction isDef (x) { return typeof x !== 'undefined' }\nfunction midiToFreq (midi, tuning) {\n  return Math.pow(2, (midi - 69) / 12) * (tuning || 440)\n}\n\nvar REGEX = /^([a-gA-G])(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)\\s*$/\n/**\n * A regex for matching note strings in scientific notation.\n *\n * @name regex\n * @function\n * @return {RegExp} the regexp used to parse the note name\n *\n * The note string should have the form `letter[accidentals][octave][element]`\n * where:\n *\n * - letter: (Required) is a letter from A to G either upper or lower case\n * - accidentals: (Optional) can be one or more `b` (flats), `#` (sharps) or `x` (double sharps).\n * They can NOT be mixed.\n * - octave: (Optional) a positive or negative integer\n * - element: (Optional) additionally anything after the duration is considered to\n * be the element name (for example: 'C2 dorian')\n *\n * The executed regex contains (by array index):\n *\n * - 0: the complete string\n * - 1: the note letter\n * - 2: the optional accidentals\n * - 3: the optional octave\n * - 4: the rest of the string (trimmed)\n *\n * @example\n * var parser = require('note-parser')\n * parser.regex.exec('c#4')\n * // => ['c#4', 'c', '#', '4', '']\n * parser.regex.exec('c#4 major')\n * // => ['c#4major', 'c', '#', '4', 'major']\n * parser.regex().exec('CMaj7')\n * // => ['CMaj7', 'C', '', '', 'Maj7']\n */\nexport function regex () { return REGEX }\n\nvar SEMITONES = [0, 2, 4, 5, 7, 9, 11]\n/**\n * Parse a note name in scientific notation an return it's components,\n * and some numeric properties including midi number and frequency.\n *\n * @name parse\n * @function\n * @param {String} note - the note string to be parsed\n * @param {Boolean} isTonic - true the strings it's supposed to contain a note number\n * and some category (for example an scale: 'C# major'). It's false by default,\n * but when true, en extra tonicOf property is returned with the category ('major')\n * @param {Float} tunning - The frequency of A4 note to calculate frequencies.\n * By default it 440.\n * @return {Object} the parsed note name or null if not a valid note\n *\n * The parsed note name object will ALWAYS contains:\n * - letter: the uppercase letter of the note\n * - acc: the accidentals of the note (only sharps or flats)\n * - pc: the pitch class (letter + acc)\n * - step: s a numeric representation of the letter. It's an integer from 0 to 6\n * where 0 = C, 1 = D ... 6 = B\n * - alt: a numeric representation of the accidentals. 0 means no alteration,\n * positive numbers are for sharps and negative for flats\n * - chroma: a numeric representation of the pitch class. It's like midi for\n * pitch classes. 0 = C, 1 = C#, 2 = D ... 11 = B. Can be used to find enharmonics\n * since, for example, chroma of 'Cb' and 'B' are both 11\n *\n * If the note has octave, the parser object will contain:\n * - oct: the octave number (as integer)\n * - midi: the midi number\n * - freq: the frequency (using tuning parameter as base)\n *\n * If the parameter `isTonic` is set to true, the parsed object will contain:\n * - tonicOf: the rest of the string that follows note name (left and right trimmed)\n *\n * @example\n * var parse = require('note-parser').parse\n * parse('Cb4')\n * // => { letter: 'C', acc: 'b', pc: 'Cb', step: 0, alt: -1, chroma: -1,\n *         oct: 4, midi: 59, freq: 246.94165062806206 }\n * // if no octave, no midi, no freq\n * parse('fx')\n * // => { letter: 'F', acc: '##', pc: 'F##', step: 3, alt: 2, chroma: 7 })\n */\nexport function parse (str, isTonic, tuning) {\n  if (typeof str !== 'string') return null\n  var m = REGEX.exec(str)\n  if (!m || (!isTonic && m[4])) return null\n\n  var p = { letter: m[1].toUpperCase(), acc: m[2].replace(/x/g, '##') }\n  p.pc = p.letter + p.acc\n  p.step = (p.letter.charCodeAt(0) + 3) % 7\n  p.alt = p.acc[0] === 'b' ? -p.acc.length : p.acc.length\n  var pos = SEMITONES[p.step] + p.alt\n  p.chroma = pos < 0 ? 12 + pos : pos % 12\n  if (m[3]) { // has octave\n    p.oct = +m[3]\n    p.midi = pos + 12 * (p.oct + 1)\n    p.freq = midiToFreq(p.midi, tuning)\n  }\n  if (isTonic) p.tonicOf = m[4]\n  return p\n}\n\nvar LETTERS = 'CDEFGAB'\nfunction accStr (n) { return !isNum(n) ? '' : n < 0 ? fillStr('b', -n) : fillStr('#', n) }\nfunction octStr (n) { return !isNum(n) ? '' : '' + n }\n\n/**\n * Create a string from a parsed object or `step, alteration, octave` parameters\n * @param {Object} obj - the parsed data object\n * @return {String} a note string or null if not valid parameters\n * @since 1.2\n * @example\n * parser.build(parser.parse('cb2')) // => 'Cb2'\n *\n * @example\n * // it accepts (step, alteration, octave) parameters:\n * parser.build(3) // => 'F'\n * parser.build(3, -1) // => 'Fb'\n * parser.build(3, -1, 4) // => 'Fb4'\n */\nexport function build (s, a, o) {\n  if (s === null || typeof s === 'undefined') return null\n  if (s.step) return build(s.step, s.alt, s.oct)\n  if (s < 0 || s > 6) return null\n  return LETTERS.charAt(s) + accStr(a) + octStr(o)\n}\n\n/**\n * Get midi of a note\n *\n * @name midi\n * @function\n * @param {String|Integer} note - the note name or midi number\n * @return {Integer} the midi number of the note or null if not a valid note\n * or the note does NOT contains octave\n * @example\n * var parser = require('note-parser')\n * parser.midi('A4') // => 69\n * parser.midi('A') // => null\n * @example\n * // midi numbers are bypassed (even as strings)\n * parser.midi(60) // => 60\n * parser.midi('60') // => 60\n */\nexport function midi (note) {\n  if ((isNum(note) || isStr(note)) && note >= 0 && note < 128) return +note\n  var p = parse(note)\n  return p && isDef(p.midi) ? p.midi : null\n}\n\n/**\n * Get freq of a note in hertzs (in a well tempered 440Hz A4)\n *\n * @name freq\n * @function\n * @param {String} note - the note name or note midi number\n * @param {String} tuning - (Optional) the A4 frequency (440 by default)\n * @return {Float} the freq of the number if hertzs or null if not valid note\n * @example\n * var parser = require('note-parser')\n * parser.freq('A4') // => 440\n * parser.freq('A') // => null\n * @example\n * // can change tuning (440 by default)\n * parser.freq('A4', 444) // => 444\n * parser.freq('A3', 444) // => 222\n * @example\n * // it accepts midi numbers (as numbers and as strings)\n * parser.freq(69) // => 440\n * parser.freq('69', 442) // => 442\n */\nexport function freq (note, tuning) {\n  var m = midi(note)\n  return m === null ? null : midiToFreq(m, tuning)\n}\n\nexport function letter (src) { return (parse(src) || {}).letter }\nexport function acc (src) { return (parse(src) || {}).acc }\nexport function pc (src) { return (parse(src) || {}).pc }\nexport function step (src) { return (parse(src) || {}).step }\nexport function alt (src) { return (parse(src) || {}).alt }\nexport function chroma (src) { return (parse(src) || {}).chroma }\nexport function oct (src) { return (parse(src) || {}).oct }\n","'use strict'\n\nvar parser = require('note-parser')\n\n/**\n * Create a Soundfont object\n *\n * @param {AudioContext} context - the [audio context](https://developer.mozilla.org/en/docs/Web/API/AudioContext)\n * @param {Function} nameToUrl - (Optional) a function that maps the sound font name to the url\n * @return {Soundfont} a soundfont object\n */\nfunction Soundfont (ctx, nameToUrl) {\n  console.warn('new Soundfont() is deprected')\n  console.log('Please use Soundfont.instrument() instead of new Soundfont().instrument()')\n  if (!(this instanceof Soundfont)) return new Soundfont(ctx)\n\n  this.nameToUrl = nameToUrl || Soundfont.nameToUrl\n  this.ctx = ctx\n  this.instruments = {}\n  this.promises = []\n}\n\nSoundfont.prototype.onready = function (callback) {\n  console.warn('deprecated API')\n  console.log('Please use Promise.all(Soundfont.instrument(), Soundfont.instrument()).then() instead of new Soundfont().onready()')\n  Promise.all(this.promises).then(callback)\n}\n\nSoundfont.prototype.instrument = function (name, options) {\n  console.warn('new Soundfont().instrument() is deprecated.')\n  console.log('Please use Soundfont.instrument() instead.')\n  var ctx = this.ctx\n  name = name || 'default'\n  if (name in this.instruments) return this.instruments[name]\n  var inst = {name: name, play: oscillatorPlayer(ctx, options)}\n  this.instruments[name] = inst\n  if (name !== 'default') {\n    var promise = Soundfont.instrument(ctx, name, options).then(function (instrument) {\n      inst.play = instrument.play\n      return inst\n    })\n    this.promises.push(promise)\n    inst.onready = function (cb) {\n      console.warn('onready is deprecated. Use Soundfont.instrument().then()')\n      promise.then(cb)\n    }\n  } else {\n    inst.onready = function (cb) {\n      console.warn('onready is deprecated. Use Soundfont.instrument().then()')\n      cb()\n    }\n  }\n  return inst\n}\n\n/*\n * Load the buffers of a given instrument name. It returns a promise that resolves\n * to a hash with midi note numbers as keys, and audio buffers as values.\n *\n * @param {AudioContext} ac - the audio context\n * @param {String} name - the instrument name (it accepts an url if starts with \"http\")\n * @param {Object} options - (Optional) options object\n * @return {Promise} a promise that resolves to a Hash of { midiNoteNum: <AudioBuffer> }\n *\n * The options object accepts the following keys:\n *\n * - nameToUrl {Function}: a function to convert from instrument names to urls.\n * By default it uses Benjamin Gleitzman's package of\n * [pre-rendered sound fonts](https://github.com/gleitz/midi-js-soundfonts)\n * - notes {Array}: the list of note names to be decoded (all by default)\n *\n * @example\n * var Soundfont = require('soundfont-player')\n * Soundfont.loadBuffers(ctx, 'acoustic_grand_piano').then(function(buffers) {\n *  buffers[60] // => An <AudioBuffer> corresponding to note C4\n * })\n */\nfunction loadBuffers (ac, name, options) {\n  console.warn('Soundfont.loadBuffers is deprecate.')\n  console.log('Use Soundfont.instrument(..) and get buffers properties from the result.')\n  return Soundfont.instrument(ac, name, options).then(function (inst) {\n    return inst.buffers\n  })\n}\nSoundfont.loadBuffers = loadBuffers\n\n/**\n * Returns a function that plays an oscillator\n *\n * @param {AudioContext} ac - the audio context\n * @param {Hash} defaultOptions - (Optional) a hash of options:\n * - vcoType: the oscillator type (default: 'sine')\n * - gain: the output gain value (default: 0.4)\n  * - destination: the player destination (default: ac.destination)\n */\nfunction oscillatorPlayer (ctx, defaultOptions) {\n  defaultOptions = defaultOptions || {}\n  return function (note, time, duration, options) {\n    console.warn('The oscillator player is deprecated.')\n    console.log('Starting with version 0.9.0 you will have to wait until the soundfont is loaded to play sounds.')\n    var midi = note > 0 && note < 129 ? +note : parser.midi(note)\n    var freq = midi ? parser.midiToFreq(midi, 440) : null\n    if (!freq) return\n\n    duration = duration || 0.2\n\n    options = options || {}\n    var destination = options.destination || defaultOptions.destination || ctx.destination\n    var vcoType = options.vcoType || defaultOptions.vcoType || 'sine'\n    var gain = options.gain || defaultOptions.gain || 0.4\n\n    var vco = ctx.createOscillator()\n    vco.type = vcoType\n    vco.frequency.value = freq\n\n    /* VCA */\n    var vca = ctx.createGain()\n    vca.gain.value = gain\n\n    /* Connections */\n    vco.connect(vca)\n    vca.connect(destination)\n\n    vco.start(time)\n    if (duration > 0) vco.stop(time + duration)\n    return vco\n  }\n}\n\n/**\n * Given a note name, return the note midi number\n *\n * @name noteToMidi\n * @function\n * @param {String} noteName\n * @return {Integer} the note midi number or null if not a valid note name\n */\nSoundfont.noteToMidi = parser.midi\n\nmodule.exports = Soundfont\n","'use strict'\n\n// DECODE UTILITIES\nfunction b64ToUint6 (nChr) {\n  return nChr > 64 && nChr < 91 ? nChr - 65\n    : nChr > 96 && nChr < 123 ? nChr - 71\n    : nChr > 47 && nChr < 58 ? nChr + 4\n    : nChr === 43 ? 62\n    : nChr === 47 ? 63\n    : 0\n}\n\n// Decode Base64 to Uint8Array\n// ---------------------------\nfunction decode (sBase64, nBlocksSize) {\n  var sB64Enc = sBase64.replace(/[^A-Za-z0-9\\+\\/]/g, '')\n  var nInLen = sB64Enc.length\n  var nOutLen = nBlocksSize\n    ? Math.ceil((nInLen * 3 + 1 >> 2) / nBlocksSize) * nBlocksSize\n    : nInLen * 3 + 1 >> 2\n  var taBytes = new Uint8Array(nOutLen)\n\n  for (var nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {\n    nMod4 = nInIdx & 3\n    nUint24 |= b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4\n    if (nMod4 === 3 || nInLen - nInIdx === 1) {\n      for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {\n        taBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255\n      }\n      nUint24 = 0\n    }\n  }\n  return taBytes\n}\n\nmodule.exports = { decode: decode }\n","/* global XMLHttpRequest */\n'use strict'\n\n/**\n * Given a url and a return type, returns a promise to the content of the url\n * Basically it wraps a XMLHttpRequest into a Promise\n *\n * @param {String} url\n * @param {String} type - can be 'text' or 'arraybuffer'\n * @return {Promise}\n */\nmodule.exports = function (url, type) {\n  return new Promise(function (done, reject) {\n    var req = new XMLHttpRequest()\n    if (type) req.responseType = type\n\n    req.open('GET', url)\n    req.onload = function () {\n      req.status === 200 ? done(req.response) : reject(Error(req.statusText))\n    }\n    req.onerror = function () { reject(Error('Network Error')) }\n    req.send()\n  })\n}\n","'use strict'\n\nvar base64 = require('./base64')\nvar fetch = require('./fetch')\n\n// Given a regex, return a function that test if against a string\nfunction fromRegex (r) {\n  return function (o) { return typeof o === 'string' && r.test(o) }\n}\n// Try to apply a prefix to a name\nfunction prefix (pre, name) {\n  return typeof pre === 'string' ? pre + name\n    : typeof pre === 'function' ? pre(name)\n    : name\n}\n\n/**\n * Load one or more audio files\n *\n *\n * Possible option keys:\n *\n * - __from__ {Function|String}: a function or string to convert from file names to urls.\n * If is a string it will be prefixed to the name:\n * `load(ac, 'snare.mp3', { from: 'http://audio.net/samples/' })`\n * If it's a function it receives the file name and should return the url as string.\n * - __only__ {Array} - when loading objects, if provided, only the given keys\n * will be included in the decoded object:\n * `load(ac, 'piano.json', { only: ['C2', 'D2'] })`\n *\n * @param {AudioContext} ac - the audio context\n * @param {Object} source - the object to be loaded\n * @param {Object} options - (Optional) the load options for that object\n * @param {Object} defaultValue - (Optional) the default value to return as\n * in a promise if not valid loader found\n */\nfunction load (ac, source, options, defVal) {\n  var loader =\n    // Basic audio loading\n      isArrayBuffer(source) ? loadArrayBuffer\n    : isAudioFileName(source) ? loadAudioFile\n    : isPromise(source) ? loadPromise\n    // Compound objects\n    : isArray(source) ? loadArrayData\n    : isObject(source) ? loadObjectData\n    : isJsonFileName(source) ? loadJsonFile\n    // Base64 encoded audio\n    : isBase64Audio(source) ? loadBase64Audio\n    : isJsFileName(source) ? loadMidiJSFile\n    : null\n\n  var opts = options || {}\n  return loader ? loader(ac, source, opts)\n    : defVal ? Promise.resolve(defVal)\n    : Promise.reject('Source not valid (' + source + ')')\n}\nload.fetch = fetch\n\n// BASIC AUDIO LOADING\n// ===================\n\n// Load (decode) an array buffer\nfunction isArrayBuffer (o) { return o instanceof ArrayBuffer }\nfunction loadArrayBuffer (ac, array, options) {\n  return new Promise(function (done, reject) {\n    ac.decodeAudioData(array,\n      function (buffer) { done(buffer) },\n      function () { reject(\"Can't decode audio data (\" + array.slice(0, 30) + '...)') }\n    )\n  })\n}\n\n// Load an audio filename\nvar isAudioFileName = fromRegex(/\\.(mp3|wav|ogg)(\\?.*)?$/i)\nfunction loadAudioFile (ac, name, options) {\n  var url = prefix(options.from, name)\n  return load(ac, load.fetch(url, 'arraybuffer'), options)\n}\n\n// Load the result of a promise\nfunction isPromise (o) { return o && typeof o.then === 'function' }\nfunction loadPromise (ac, promise, options) {\n  return promise.then(function (value) {\n    return load(ac, value, options)\n  })\n}\n\n// COMPOUND OBJECTS\n// ================\n\n// Try to load all the items of an array\nvar isArray = Array.isArray\nfunction loadArrayData (ac, array, options) {\n  return Promise.all(array.map(function (data) {\n    return load(ac, data, options, data)\n  }))\n}\n\n// Try to load all the values of a key/value object\nfunction isObject (o) { return o && typeof o === 'object' }\nfunction loadObjectData (ac, obj, options) {\n  var dest = {}\n  var promises = Object.keys(obj).map(function (key) {\n    if (options.only && options.only.indexOf(key) === -1) return null\n    var value = obj[key]\n    return load(ac, value, options, value).then(function (audio) {\n      dest[key] = audio\n    })\n  })\n  return Promise.all(promises).then(function () { return dest })\n}\n\n// Load the content of a JSON file\nvar isJsonFileName = fromRegex(/\\.json(\\?.*)?$/i)\nfunction loadJsonFile (ac, name, options) {\n  var url = prefix(options.from, name)\n  return load(ac, load.fetch(url, 'text').then(JSON.parse), options)\n}\n\n// BASE64 ENCODED FORMATS\n// ======================\n\n// Load strings with Base64 encoded audio\nvar isBase64Audio = fromRegex(/^data:audio/)\nfunction loadBase64Audio (ac, source, options) {\n  var i = source.indexOf(',')\n  return load(ac, base64.decode(source.slice(i + 1)).buffer, options)\n}\n\n// Load .js files with MidiJS soundfont prerendered audio\nvar isJsFileName = fromRegex(/\\.js(\\?.*)?$/i)\nfunction loadMidiJSFile (ac, name, options) {\n  var url = prefix(options.from, name)\n  return load(ac, load.fetch(url, 'text').then(midiJsToJson), options)\n}\n\n// convert a MIDI.js javascript soundfont file to json\nfunction midiJsToJson (data) {\n  var begin = data.indexOf('MIDI.Soundfont.')\n  if (begin < 0) throw Error('Invalid MIDI.js Soundfont format')\n  begin = data.indexOf('=', begin) + 2\n  var end = data.lastIndexOf(',')\n  return JSON.parse(data.slice(begin, end) + '}')\n}\n\nif (typeof module === 'object' && module.exports) module.exports = load\nif (typeof window !== 'undefined') window.loadAudio = load\n","module.exports = ADSR\n\nfunction ADSR(audioContext){\n  var node = audioContext.createGain()\n\n  var voltage = node._voltage = getVoltage(audioContext)\n  var value = scale(voltage)\n  var startValue = scale(voltage)\n  var endValue = scale(voltage)\n\n  node._startAmount = scale(startValue)\n  node._endAmount = scale(endValue)\n\n  node._multiplier = scale(value)\n  node._multiplier.connect(node)\n  node._startAmount.connect(node)\n  node._endAmount.connect(node)\n\n  node.value = value.gain\n  node.startValue = startValue.gain\n  node.endValue = endValue.gain\n\n  node.startValue.value = 0\n  node.endValue.value = 0\n\n  Object.defineProperties(node, props)\n  return node\n}\n\nvar props = {\n\n  attack: { value: 0, writable: true },\n  decay: { value: 0, writable: true },\n  sustain: { value: 1, writable: true },\n  release: {value: 0, writable: true },\n\n  getReleaseDuration: {\n    value: function(){\n      return this.release\n    }\n  },\n\n  start: {\n    value: function(at){\n      var target = this._multiplier.gain\n      var startAmount = this._startAmount.gain\n      var endAmount = this._endAmount.gain\n\n      this._voltage.start(at)\n      this._decayFrom = this._decayFrom = at+this.attack\n      this._startedAt = at\n\n      var sustain = this.sustain\n\n      target.cancelScheduledValues(at)\n      startAmount.cancelScheduledValues(at)\n      endAmount.cancelScheduledValues(at)\n\n      endAmount.setValueAtTime(0, at)\n\n      if (this.attack){\n        target.setValueAtTime(0, at)\n        target.linearRampToValueAtTime(1, at + this.attack)\n\n        startAmount.setValueAtTime(1, at)\n        startAmount.linearRampToValueAtTime(0, at + this.attack)\n      } else {\n        target.setValueAtTime(1, at)\n        startAmount.setValueAtTime(0, at)\n      }\n\n      if (this.decay){\n        target.setTargetAtTime(sustain, this._decayFrom, getTimeConstant(this.decay))\n      }\n    }\n  },\n\n  stop: {\n    value: function(at, isTarget){\n      if (isTarget){\n        at = at - this.release\n      }\n\n      var endTime = at + this.release\n      if (this.release){\n\n        var target = this._multiplier.gain\n        var startAmount = this._startAmount.gain\n        var endAmount = this._endAmount.gain\n\n        target.cancelScheduledValues(at)\n        startAmount.cancelScheduledValues(at)\n        endAmount.cancelScheduledValues(at)\n\n        var expFalloff = getTimeConstant(this.release)\n\n        // truncate attack (required as linearRamp is removed by cancelScheduledValues)\n        if (this.attack && at < this._decayFrom){\n          var valueAtTime = getValue(0, 1, this._startedAt, this._decayFrom, at)\n          target.linearRampToValueAtTime(valueAtTime, at)\n          startAmount.linearRampToValueAtTime(1-valueAtTime, at)\n          startAmount.setTargetAtTime(0, at, expFalloff)\n        }\n\n        endAmount.setTargetAtTime(1, at, expFalloff)\n        target.setTargetAtTime(0, at, expFalloff)\n      }\n\n      this._voltage.stop(endTime)\n      return endTime\n    }\n  },\n\n  onended: {\n    get: function(){\n      return this._voltage.onended\n    },\n    set: function(value){\n      this._voltage.onended = value\n    }\n  }\n\n}\n\nvar flat = new Float32Array([1,1])\nfunction getVoltage(context){\n  var voltage = context.createBufferSource()\n  var buffer = context.createBuffer(1, 2, context.sampleRate)\n  buffer.getChannelData(0).set(flat)\n  voltage.buffer = buffer\n  voltage.loop = true\n  return voltage\n}\n\nfunction scale(node){\n  var gain = node.context.createGain()\n  node.connect(gain)\n  return gain\n}\n\nfunction getTimeConstant(time){\n  return Math.log(time+1)/Math.log(100)\n}\n\nfunction getValue(start, end, fromTime, toTime, at){\n  var difference = end - start\n  var time = toTime - fromTime\n  var truncateTime = at - fromTime\n  var phase = truncateTime / time\n  var value = start + phase * difference\n\n  if (value <= start) {\n      value = start\n  }\n  if (value >= end) {\n      value = end\n  }\n\n  return value\n}\n","/* global AudioBuffer */\n'use strict'\n\nvar ADSR = require('adsr')\n\nvar EMPTY = {}\nvar DEFAULTS = {\n  gain: 1,\n  attack: 0.01,\n  decay: 0.1,\n  sustain: 0.9,\n  release: 0.3,\n  loop: false,\n  cents: 0,\n  loopStart: 0,\n  loopEnd: 0\n}\n\n/**\n * Create a sample player.\n *\n * @param {AudioContext} ac - the audio context\n * @param {ArrayBuffer|Object<String,ArrayBuffer>} source\n * @param {Onject} options - (Optional) an options object\n * @return {player} the player\n * @example\n * var SamplePlayer = require('sample-player')\n * var ac = new AudioContext()\n * var snare = SamplePlayer(ac, <AudioBuffer>)\n * snare.play()\n */\nfunction SamplePlayer (ac, source, options) {\n  var connected = false\n  var nextId = 0\n  var tracked = {}\n  var out = ac.createGain()\n  out.gain.value = 1\n\n  var opts = Object.assign({}, DEFAULTS, options)\n\n  /**\n   * @namespace\n   */\n  var player = { context: ac, out: out, opts: opts }\n  if (source instanceof AudioBuffer) player.buffer = source\n  else player.buffers = source\n\n  /**\n   * Start a sample buffer.\n   *\n   * The returned object has a function `stop(when)` to stop the sound.\n   *\n   * @param {String} name - the name of the buffer. If the source of the\n   * SamplePlayer is one sample buffer, this parameter is not required\n   * @param {Float} when - (Optional) when to start (current time if by default)\n   * @param {Object} options - additional sample playing options\n   * @return {AudioNode} an audio node with a `stop` function\n   * @example\n   * var sample = player(ac, <AudioBuffer>).connect(ac.destination)\n   * sample.start()\n   * sample.start(5, { gain: 0.7 }) // name not required since is only one AudioBuffer\n   * @example\n   * var drums = player(ac, { snare: <AudioBuffer>, kick: <AudioBuffer>, ... }).connect(ac.destination)\n   * drums.start('snare')\n   * drums.start('snare', 0, { gain: 0.3 })\n   */\n  player.start = function (name, when, options) {\n    // if only one buffer, reorder arguments\n    if (player.buffer && name !== null) return player.start(null, name, when)\n\n    var buffer = name ? player.buffers[name] : player.buffer\n    if (!buffer) {\n      console.warn('Buffer ' + name + ' not found.')\n      return\n    } else if (!connected) {\n      console.warn('SamplePlayer not connected to any node.')\n      return\n    }\n\n    var opts = options || EMPTY\n    when = Math.max(ac.currentTime, when || 0)\n    player.emit('start', when, name, opts)\n    var node = createNode(name, buffer, opts)\n    node.id = track(name, node)\n    node.env.start(when)\n    node.source.start(when)\n    player.emit('started', when, node.id, node)\n    if (opts.duration) node.stop(when + opts.duration)\n    return node\n  }\n\n  // NOTE: start will be override so we can't copy the function reference\n  // this is obviously not a good design, so this code will be gone soon.\n  /**\n   * An alias for `player.start`\n   * @see player.start\n   * @since 0.3.0\n   */\n  player.play = function (name, when, options) {\n    return player.start(name, when, options)\n  }\n\n  /**\n   * Stop some or all samples\n   *\n   * @param {Float} when - (Optional) an absolute time in seconds (or currentTime\n   * if not specified)\n   * @param {Array} nodes - (Optional) an array of nodes or nodes ids to stop\n   * @return {Array} an array of ids of the stoped samples\n   *\n   * @example\n   * var longSound = player(ac, <AudioBuffer>).connect(ac.destination)\n   * longSound.start(ac.currentTime)\n   * longSound.start(ac.currentTime + 1)\n   * longSound.start(ac.currentTime + 2)\n   * longSound.stop(ac.currentTime + 3) // stop the three sounds\n   */\n  player.stop = function (when, ids) {\n    var node\n    ids = ids || Object.keys(tracked)\n    return ids.map(function (id) {\n      node = tracked[id]\n      if (!node) return null\n      node.stop(when)\n      return node.id\n    })\n  }\n  /**\n   * Connect the player to a destination node\n   *\n   * @param {AudioNode} destination - the destination node\n   * @return {AudioPlayer} the player\n   * @chainable\n   * @example\n   * var sample = player(ac, <AudioBuffer>).connect(ac.destination)\n   */\n  player.connect = function (dest) {\n    connected = true\n    out.connect(dest)\n    return player\n  }\n\n  player.emit = function (event, when, obj, opts) {\n    if (player.onevent) player.onevent(event, when, obj, opts)\n    var fn = player['on' + event]\n    if (fn) fn(when, obj, opts)\n  }\n\n  return player\n\n  // =============== PRIVATE FUNCTIONS ============== //\n\n  function track (name, node) {\n    node.id = nextId++\n    tracked[node.id] = node\n    node.source.onended = function () {\n      var now = ac.currentTime\n      node.source.disconnect()\n      node.env.disconnect()\n      node.disconnect()\n      player.emit('ended', now, node.id, node)\n    }\n    return node.id\n  }\n\n  function createNode (name, buffer, options) {\n    var node = ac.createGain()\n    node.gain.value = 0 // the envelope will control the gain\n    node.connect(out)\n\n    node.env = envelope(ac, options, opts)\n    node.env.connect(node.gain)\n\n    node.source = ac.createBufferSource()\n    node.source.buffer = buffer\n    node.source.connect(node)\n    node.source.loop = options.loop || opts.loop\n    node.source.playbackRate.value = centsToRate(options.cents || opts.cents)\n    node.source.loopStart = options.loopStart || opts.loopStart\n    node.source.loopEnd = options.loopEnd || opts.loopEnd\n    node.stop = function (when) {\n      var time = when || ac.currentTime\n      player.emit('stop', time, name)\n      var stopAt = node.env.stop(time)\n      node.source.stop(stopAt)\n    }\n    return node\n  }\n}\n\nfunction isNum (x) { return typeof x === 'number' }\nvar PARAMS = ['attack', 'decay', 'sustain', 'release']\nfunction envelope (ac, options, opts) {\n  var env = ADSR(ac)\n  var adsr = options.adsr || opts.adsr\n  PARAMS.forEach(function (name, i) {\n    if (adsr) env[name] = adsr[i]\n    else env[name] = options[name] || opts[name]\n  })\n  env.value.value = isNum(options.gain) ? options.gain\n    : isNum(opts.gain) ? opts.gain : 1\n  return env\n}\n\n/*\n * Get playback rate for a given pitch change (in cents)\n * Basic [math](http://www.birdsoft.demon.co.uk/music/samplert.htm):\n * f2 = f1 * 2^( C / 1200 )\n */\nfunction centsToRate (cents) { return cents ? Math.pow(2, cents / 1200) : 1 }\n\nmodule.exports = SamplePlayer\n","\nmodule.exports = function (player) {\n  /**\n   * Adds a listener of an event\n   * @chainable\n   * @param {String} event - the event name\n   * @param {Function} callback - the event handler\n   * @return {SamplePlayer} the player\n   * @example\n   * player.on('start', function(time, note) {\n   *   console.log(time, note)\n   * })\n   */\n  player.on = function (event, cb) {\n    if (arguments.length === 1 && typeof event === 'function') return player.on('event', event)\n    var prop = 'on' + event\n    var old = player[prop]\n    player[prop] = old ? chain(old, cb) : cb\n    return player\n  }\n  return player\n}\n\nfunction chain (fn1, fn2) {\n  return function (a, b, c, d) { fn1(a, b, c, d); fn2(a, b, c, d) }\n}\n","'use strict'\n\nvar REGEX = /^([a-gA-G])(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)\\s*$/\n/**\n * A regex for matching note strings in scientific notation.\n *\n * @name regex\n * @function\n * @return {RegExp} the regexp used to parse the note name\n *\n * The note string should have the form `letter[accidentals][octave][element]`\n * where:\n *\n * - letter: (Required) is a letter from A to G either upper or lower case\n * - accidentals: (Optional) can be one or more `b` (flats), `#` (sharps) or `x` (double sharps).\n * They can NOT be mixed.\n * - octave: (Optional) a positive or negative integer\n * - element: (Optional) additionally anything after the duration is considered to\n * be the element name (for example: 'C2 dorian')\n *\n * The executed regex contains (by array index):\n *\n * - 0: the complete string\n * - 1: the note letter\n * - 2: the optional accidentals\n * - 3: the optional octave\n * - 4: the rest of the string (trimmed)\n *\n * @example\n * var parser = require('note-parser')\n * parser.regex.exec('c#4')\n * // => ['c#4', 'c', '#', '4', '']\n * parser.regex.exec('c#4 major')\n * // => ['c#4major', 'c', '#', '4', 'major']\n * parser.regex().exec('CMaj7')\n * // => ['CMaj7', 'C', '', '', 'Maj7']\n */\nfunction regex () { return REGEX }\n\nvar SEMITONES = [0, 2, 4, 5, 7, 9, 11]\n/**\n * Parse a note name in scientific notation an return it's components,\n * and some numeric properties including midi number and frequency.\n *\n * @name parse\n * @function\n * @param {String} note - the note string to be parsed\n * @param {Boolean} isTonic - true if the note is the tonic of something.\n * If true, en extra tonicOf property is returned. It's false by default.\n * @param {Float} tunning - The frequency of A4 note to calculate frequencies.\n * By default it 440.\n * @return {Object} the parsed note name or null if not a valid note\n *\n * The parsed note name object will ALWAYS contains:\n * - letter: the uppercase letter of the note\n * - acc: the accidentals of the note (only sharps or flats)\n * - pc: the pitch class (letter + acc)\n * - step: s a numeric representation of the letter. It's an integer from 0 to 6\n * where 0 = C, 1 = D ... 6 = B\n * - alt: a numeric representation of the accidentals. 0 means no alteration,\n * positive numbers are for sharps and negative for flats\n * - chroma: a numeric representation of the pitch class. It's like midi for\n * pitch classes. 0 = C, 1 = C#, 2 = D ... It can have negative values: -1 = Cb.\n * Can detect pitch class enhramonics.\n *\n * If the note has octave, the parser object will contain:\n * - oct: the octave number (as integer)\n * - midi: the midi number\n * - freq: the frequency (using tuning parameter as base)\n *\n * If the parameter `isTonic` is set to true, the parsed object will contain:\n * - tonicOf: the rest of the string that follows note name (left and right trimmed)\n *\n * @example\n * var parse = require('note-parser').parse\n * parse('Cb4')\n * // => { letter: 'C', acc: 'b', pc: 'Cb', step: 0, alt: -1, chroma: -1,\n *         oct: 4, midi: 59, freq: 246.94165062806206 }\n * // if no octave, no midi, no freq\n * parse('fx')\n * // => { letter: 'F', acc: '##', pc: 'F##', step: 3, alt: 2, chroma: 7 })\n */\nfunction parse (str, isTonic, tuning) {\n  if (typeof str !== 'string') return null\n  var m = REGEX.exec(str)\n  if (!m || !isTonic && m[4]) return null\n\n  var p = { letter: m[1].toUpperCase(), acc: m[2].replace(/x/g, '##') }\n  p.pc = p.letter + p.acc\n  p.step = (p.letter.charCodeAt(0) + 3) % 7\n  p.alt = p.acc[0] === 'b' ? -p.acc.length : p.acc.length\n  p.chroma = SEMITONES[p.step] + p.alt\n  if (m[3]) {\n    p.oct = +m[3]\n    p.midi = p.chroma + 12 * (p.oct + 1)\n    p.freq = midiToFreq(p.midi, tuning)\n  }\n  if (isTonic) p.tonicOf = m[4]\n  return p\n}\n\n/**\n * Given a midi number, return its frequency\n * @param {Integer} midi - midi note number\n * @param {Float} tuning - (Optional) the A4 tuning (440Hz by default)\n * @return {Float} frequency in hertzs\n */\nfunction midiToFreq (midi, tuning) {\n  return Math.pow(2, (midi - 69) / 12) * (tuning || 440)\n}\n\nvar parser = { parse: parse, regex: regex, midiToFreq: midiToFreq }\nvar FNS = ['letter', 'acc', 'pc', 'step', 'alt', 'chroma', 'oct', 'midi', 'freq']\nFNS.forEach(function (name) {\n  parser[name] = function (src) {\n    var p = parse(src)\n    return p && (typeof p[name] !== 'undefined') ? p[name] : null\n  }\n})\n\nmodule.exports = parser\n\n// extra API docs\n/**\n * Get midi of a note\n *\n * @name midi\n * @function\n * @param {String} note - the note name\n * @return {Integer} the midi number of the note or null if not a valid note\n * or the note does NOT contains octave\n * @example\n * var parser = require('note-parser')\n * parser.midi('A4') // => 69\n * parser.midi('A') // => null\n */\n/**\n * Get freq of a note in hertzs (in a well tempered 440Hz A4)\n *\n * @name freq\n * @function\n * @param {String} note - the note name\n * @return {Float} the freq of the number if hertzs or null if not valid note\n * or the note does NOT contains octave\n * @example\n * var parser = require('note-parser')\n * parser.freq('A4') // => 440\n * parser.freq('A') // => null\n */\n","'use strict'\n\nvar note = require('note-parser')\nvar isMidi = function (n) { return n !== null && n !== [] && n >= 0 && n < 129 }\nvar toMidi = function (n) { return isMidi(n) ? +n : note.midi(n) }\n\n// Adds note name to midi conversion\nmodule.exports = function (player) {\n  if (player.buffers) {\n    var map = player.opts.map\n    var toKey = typeof map === 'function' ? map : toMidi\n    var mapper = function (name) {\n      return name ? toKey(name) || name : null\n    }\n\n    player.buffers = mapBuffers(player.buffers, mapper)\n    var start = player.start\n    player.start = function (name, when, options) {\n      var key = mapper(name)\n      var dec = key % 1\n      if (dec) {\n        key = Math.floor(key)\n        options = Object.assign(options || {}, { cents: Math.floor(dec * 100) })\n      }\n      return start(key, when, options)\n    }\n  }\n  return player\n}\n\nfunction mapBuffers (buffers, toKey) {\n  return Object.keys(buffers).reduce(function (mapped, name) {\n    mapped[toKey(name)] = buffers[name]\n    return mapped\n  }, {})\n}\n","'use strict'\n\nvar isArr = Array.isArray\nvar isObj = function (o) { return o && typeof o === 'object' }\nvar OPTS = {}\n\nmodule.exports = function (player) {\n  /**\n   * Schedule a list of events to be played at specific time.\n   *\n   * It supports three formats of events for the events list:\n   *\n   * - An array with [time, note]\n   * - An array with [time, object]\n   * - An object with { time: ?, [name|note|midi|key]: ? }\n   *\n   * @param {Float} time - an absolute time to start (or AudioContext's\n   * currentTime if provided number is 0)\n   * @param {Array} events - the events list.\n   * @return {Array} an array of ids\n   *\n   * @example\n   * // Event format: [time, note]\n   * var piano = player(ac, ...).connect(ac.destination)\n   * piano.schedule(0, [ [0, 'C2'], [0.5, 'C3'], [1, 'C4'] ])\n   *\n   * @example\n   * // Event format: an object { time: ?, name: ? }\n   * var drums = player(ac, ...).connect(ac.destination)\n   * drums.schedule(0, [\n   *   { name: 'kick', time: 0 },\n   *   { name: 'snare', time: 0.5 },\n   *   { name: 'kick', time: 1 },\n   *   { name: 'snare', time: 1.5 }\n   * ])\n   */\n  player.schedule = function (time, events) {\n    var now = player.context.currentTime\n    var when = time < now ? now : time\n    player.emit('schedule', when, events)\n    var t, o, note, opts\n    return events.map(function (event) {\n      if (!event) return null\n      else if (isArr(event)) {\n        t = event[0]; o = event[1]\n      } else {\n        t = event.time; o = event\n      }\n\n      if (isObj(o)) {\n        note = o.name || o.key || o.note || o.midi || null\n        opts = o\n      } else {\n        note = o\n        opts = OPTS\n      }\n\n      return player.start(note, when + (t || 0), opts)\n    })\n  }\n  return player\n}\n","(function(e){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=e()}else if(typeof define===\"function\"&&define.amd){define([],e)}else{var t;if(typeof window!==\"undefined\"){t=window}else if(typeof global!==\"undefined\"){t=global}else if(typeof self!==\"undefined\"){t=self}else{t=this}t.midimessage=e()}})(function(){var e,t,s;return function o(e,t,s){function a(n,i){if(!t[n]){if(!e[n]){var l=typeof require==\"function\"&&require;if(!i&&l)return l(n,!0);if(r)return r(n,!0);var h=new Error(\"Cannot find module '\"+n+\"'\");throw h.code=\"MODULE_NOT_FOUND\",h}var c=t[n]={exports:{}};e[n][0].call(c.exports,function(t){var s=e[n][1][t];return a(s?s:t)},c,c.exports,o,e,t,s)}return t[n].exports}var r=typeof require==\"function\"&&require;for(var n=0;n<s.length;n++)a(s[n]);return a}({1:[function(e,t,s){\"use strict\";Object.defineProperty(s,\"__esModule\",{value:true});s[\"default\"]=function(e){function t(e){this._event=e;this._data=e.data;this.receivedTime=e.receivedTime;if(this._data&&this._data.length<2){console.warn(\"Illegal MIDI message of length\",this._data.length);return}this._messageCode=e.data[0]&240;this.channel=e.data[0]&15;switch(this._messageCode){case 128:this.messageType=\"noteoff\";this.key=e.data[1]&127;this.velocity=e.data[2]&127;break;case 144:this.messageType=\"noteon\";this.key=e.data[1]&127;this.velocity=e.data[2]&127;break;case 160:this.messageType=\"keypressure\";this.key=e.data[1]&127;this.pressure=e.data[2]&127;break;case 176:this.messageType=\"controlchange\";this.controllerNumber=e.data[1]&127;this.controllerValue=e.data[2]&127;if(this.controllerNumber===120&&this.controllerValue===0){this.channelModeMessage=\"allsoundoff\"}else if(this.controllerNumber===121){this.channelModeMessage=\"resetallcontrollers\"}else if(this.controllerNumber===122){if(this.controllerValue===0){this.channelModeMessage=\"localcontroloff\"}else{this.channelModeMessage=\"localcontrolon\"}}else if(this.controllerNumber===123&&this.controllerValue===0){this.channelModeMessage=\"allnotesoff\"}else if(this.controllerNumber===124&&this.controllerValue===0){this.channelModeMessage=\"omnimodeoff\"}else if(this.controllerNumber===125&&this.controllerValue===0){this.channelModeMessage=\"omnimodeon\"}else if(this.controllerNumber===126){this.channelModeMessage=\"monomodeon\"}else if(this.controllerNumber===127){this.channelModeMessage=\"polymodeon\"}break;case 192:this.messageType=\"programchange\";this.program=e.data[1];break;case 208:this.messageType=\"channelpressure\";this.pressure=e.data[1]&127;break;case 224:this.messageType=\"pitchbendchange\";var t=e.data[2]&127;var s=e.data[1]&127;this.pitchBend=(t<<8)+s;break}}return new t(e)};t.exports=s[\"default\"]},{}]},{},[1])(1)});\n//# sourceMappingURL=dist/index.js.map","var midimessage = require('midimessage')\n\nmodule.exports = function (player) {\n  /**\n  * Connect a player to a midi input\n  *\n  * The options accepts:\n  *\n  * - channel: the channel to listen to. Listen to all channels by default.\n  *\n  * @param {MIDIInput} input\n  * @param {Object} options - (Optional)\n  * @return {SamplePlayer} the player\n  * @example\n  * var piano = player(...)\n  * window.navigator.requestMIDIAccess().then(function (midiAccess) {\n  *   midiAccess.inputs.forEach(function (midiInput) {\n  *     piano.listenToMidi(midiInput)\n  *   })\n  * })\n  */\n  player.listenToMidi = function (input, options) {\n    var started = {}\n    var opts = options || {}\n    var gain = opts.gain || function (vel) { return vel / 127 }\n\n    input.onmidimessage = function (msg) {\n      var mm = msg.messageType ? msg : midimessage(msg)\n      if (mm.messageType === 'noteon' && mm.velocity === 0) {\n        mm.messageType = 'noteoff'\n      }\n      if (opts.channel && mm.channel !== opts.channel) return\n\n      switch (mm.messageType) {\n        case 'noteon':\n          started[mm.key] = player.play(mm.key, 0, { gain: gain(mm.velocity) })\n          break\n        case 'noteoff':\n          if (started[mm.key]) {\n            started[mm.key].stop()\n            delete started[mm.key]\n          }\n          break\n      }\n    }\n    return player\n  }\n  return player\n}\n","'use strict'\n\nvar player = require('./player')\nvar events = require('./events')\nvar notes = require('./notes')\nvar scheduler = require('./scheduler')\nvar midi = require('./midi')\n\nfunction SamplePlayer (ac, source, options) {\n  return midi(scheduler(notes(events(player(ac, source, options)))))\n}\n\nif (typeof module === 'object' && module.exports) module.exports = SamplePlayer\nif (typeof window !== 'undefined') window.SamplePlayer = SamplePlayer\n","'use strict'\n\nvar load = require('audio-loader')\nvar player = require('sample-player')\n\n/**\n * Load a soundfont instrument. It returns a promise that resolves to a\n * instrument object.\n *\n * The instrument object returned by the promise has the following properties:\n *\n * - name: the instrument name\n * - play: A function to play notes from the buffer with the signature\n * `play(note, time, duration, options)`\n *\n *\n * The valid options are:\n *\n * - `format`: the soundfont format. 'mp3' by default. Can be 'ogg'\n * - `soundfont`: the soundfont name. 'MusyngKite' by default. Can be 'FluidR3_GM'\n * - `nameToUrl` <Function>: a function to convert from instrument names to URL\n * - `destination`: by default Soundfont uses the `audioContext.destination` but you can override it.\n * - `gain`: the gain of the player (1 by default)\n * - `notes`: an array of the notes to decode. It can be an array of strings\n * with note names or an array of numbers with midi note numbers. This is a\n * performance option: since decoding mp3 is a cpu intensive process, you can limit\n * limit the number of notes you want and reduce the time to load the instrument.\n *\n * @param {AudioContext} ac - the audio context\n * @param {String} name - the instrument name. For example: 'acoustic_grand_piano'\n * @param {Object} options - (Optional) the same options as Soundfont.loadBuffers\n * @return {Promise}\n *\n * @example\n * var Soundfont = require('sounfont-player')\n * Soundfont.instrument('marimba').then(function (marimba) {\n *   marimba.play('C4')\n * })\n */\nfunction instrument (ac, name, options) {\n  if (arguments.length === 1) return function (n, o) { return instrument(ac, n, o) }\n  var opts = options || {}\n  var isUrl = opts.isSoundfontURL || isSoundfontURL\n  var toUrl = opts.nameToUrl || nameToUrl\n  var url = isUrl(name) ? name : toUrl(name, opts.soundfont, opts.format)\n\n  return load(ac, url, { only: opts.only || opts.notes }).then(function (buffers) {\n    var p = player(ac, buffers, opts).connect(opts.destination ? opts.destination : ac.destination)\n    p.url = url\n    p.name = name\n    return p\n  })\n}\n\nfunction isSoundfontURL (name) {\n  return /\\.js(\\?.*)?$/i.test(name)\n}\n\n/**\n * Given an instrument name returns a URL to to the Benjamin Gleitzman's\n * package of [pre-rendered sound fonts](https://github.com/gleitz/midi-js-soundfonts)\n *\n * @param {String} name - instrument name\n * @param {String} soundfont - (Optional) the soundfont name. One of 'FluidR3_GM'\n * or 'MusyngKite' ('MusyngKite' by default)\n * @param {String} format - (Optional) Can be 'mp3' or 'ogg' (mp3 by default)\n * @returns {String} the Soundfont file url\n * @example\n * var Soundfont = require('soundfont-player')\n * Soundfont.nameToUrl('marimba', 'mp3')\n */\nfunction nameToUrl (name, sf, format) {\n  format = format === 'ogg' ? format : 'mp3'\n  sf = sf === 'FluidR3_GM' ? sf : 'MusyngKite'\n  return 'https://gleitz.github.io/midi-js-soundfonts/' + sf + '/' + name + '-' + format + '.js'\n}\n\n// In the 1.0.0 release it will be:\n// var Soundfont = {}\nvar Soundfont = require('./legacy')\nSoundfont.instrument = instrument\nSoundfont.nameToUrl = nameToUrl\n\nif (typeof module === 'object' && module.exports) module.exports = Soundfont\nif (typeof window !== 'undefined') window.Soundfont = Soundfont\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { track } from \"../telemetry\";\nimport {\n  playNote as playVoiceNote,\n  playChord as playVoiceChord,\n  STRUM_STEP_SEC,\n} from \"./voices\";\nimport Soundfont from \"soundfont-player\";\ntype SoundfontName =\n  | \"acoustic_guitar_nylon\"\n  | \"acoustic_guitar_steel\"\n  | \"electric_guitar_clean\"\n  | \"electric_guitar_jazz\"\n  | \"electric_guitar_muted\"\n  | \"overdriven_guitar\"\n  | \"distortion_guitar\"\n  | \"acoustic_grand_piano\";\n\ntype PlayerState = { enabled: boolean; volume: number };\nexport type PlayStyle = \"hit\" | \"lightStrum\";\n\nconst isBrowser = typeof window !== \"undefined\";\nfunction midiToHz(midi: number){ return 440 * Math.pow(2, (midi - 69) / 12); }\n\ntype Sub = (s: PlayerState) => void;\n\nexport type AudioPlayer = {\n  resume(): Promise<void>;\n  toggleEnabled(next?: boolean): Promise<void>;\n  setVolume(v: number): void;\n  getState(): PlayerState;\n  subscribe(cb: Sub): () => void;\n  playNote(midi: number, durMs?: number): void;\n  playChord(midis: number[], style?: PlayStyle, durMs?: number): void;\n  setInstrument(name: SoundfontName): Promise<void>;\n  getInstrument(): SoundfontName;\n};\n\nfunction createNoop(): AudioPlayer {\n  const s: PlayerState = { enabled: false, volume: 0.8 };\n  return {\n    async resume(){},\n    async toggleEnabled(){},\n    setVolume(){},\n    getState(){ return s; },\n    subscribe(){ return () => {}; },\n    playNote(){},\n    playChord(){},\n  };\n}\n\nexport const player: AudioPlayer = isBrowser ? (() => {\n  // lazy context / graph\n  let ctx: AudioContext | null = null;\n  let master: GainNode | null = null;\n  let sfGuitar: any | null = null;\n  const VALID_INSTR: Set<string> = new Set([\n    \"acoustic_guitar_nylon\",\n    \"acoustic_guitar_steel\",\n    \"electric_guitar_clean\",\n    \"electric_guitar_jazz\",\n    \"electric_guitar_muted\",\n    \"overdriven_guitar\",\n    \"distortion_guitar\",\n    \"acoustic_grand_piano\",\n  ]);\n  let currentInstr: SoundfontName = (() => {\n    try {\n      const saved = (typeof localStorage !== \"undefined\" ? localStorage.getItem(\"ot-instrument\") : null) as SoundfontName | null;\n      return (saved && VALID_INSTR.has(saved)) ? saved : \"acoustic_guitar_steel\";\n    } catch { return \"acoustic_guitar_steel\" as const; }\n  })();\n  const storedEnabled = (typeof localStorage !== \"undefined\") ? localStorage.getItem(\"ot-audio-enabled\") : null;\n  const storedVolume = (typeof localStorage !== \"undefined\") ? localStorage.getItem(\"ot-audio-volume\") : null;\n  const state: PlayerState = {\n    enabled: storedEnabled === null ? true : storedEnabled === \"true\",\n    volume: storedVolume ? Number(storedVolume) : 0.8,\n  };\n  const subs = new Set<Sub>();\n\n  function notify(){ subs.forEach(f => f(state)); }\n  function ensureCtx(){\n    if (!ctx) {\n      const AC: any = (window as any).AudioContext || (window as any).webkitAudioContext;\n      ctx = new AC();\n      master = ctx.createGain();\n      master!.gain.value = state.enabled ? state.volume : 0;\n      master!.connect(ctx.destination);\n      // do not resume automatically here; must happen after user gesture\n    }\n    return ctx!;\n  }\n\n  function setMasterVolume(){\n    if (!ctx || !master) return;\n    master.gain.cancelScheduledValues(ctx.currentTime);\n    master.gain.setValueAtTime(master.gain.value, ctx.currentTime);\n    master.gain.linearRampToValueAtTime(state.enabled ? state.volume : 0, ctx.currentTime + 0.02);\n  }\n\n  async function resume(){\n    const c = ensureCtx();\n    if (c.state === \"suspended\") await c.resume();\n    // lazy-load guitar soundfont\n    if (!sfGuitar) {\n      try {\n        sfGuitar = await Soundfont.instrument(c as any, currentInstr);\n      } catch {}\n    }\n    if (process.env.NEXT_PUBLIC_AUDIO_UNLOCK_PING === \"true\" && ctx) {\n      const osc = ctx.createOscillator();\n      const gain = ctx.createGain();\n      gain.gain.setValueAtTime(0, ctx.currentTime);\n      osc.connect(gain).connect(ctx.destination);\n      osc.start();\n      osc.stop(ctx.currentTime + 0.01);\n      osc.onended = () => {\n        try { osc.disconnect(); gain.disconnect(); } catch {}\n      };\n    }\n  }\n\n  async function toggleEnabled(next?: boolean){\n    ensureCtx();\n    state.enabled = (typeof next === \"boolean\") ? next : !state.enabled;\n    try { localStorage.setItem(\"ot-audio-enabled\", String(state.enabled)); } catch {}\n    setMasterVolume();\n    notify();\n    track(\"fb_toggle\", { page:\"analyze\", control:\"audio\", value: state.enabled });\n  }\n\n  function setVolume(v: number){\n    ensureCtx();\n    state.volume = Math.max(0, Math.min(1, v));\n    try { localStorage.setItem(\"ot-audio-volume\", String(state.volume)); } catch {}\n    setMasterVolume();\n    notify();\n  }\n\n  async function setInstrument(name: SoundfontName){\n    ensureCtx();\n    if (!VALID_INSTR.has(name)) return;\n    currentInstr = name;\n    try { localStorage.setItem(\"ot-instrument\", name); } catch {}\n    try {\n      sfGuitar = await Soundfont.instrument(ctx as any, currentInstr);\n    } catch { sfGuitar = null; }\n    track(\"instrument_change\", { page: \"analyze\", instrument: name });\n    notify();\n  }\n\n  function playNote(midi: number, durMs = 320){\n    const c = ensureCtx();\n    void resume();\n    if (!state.enabled) return;\n    const durSec = Math.max(0.12, durMs / 1000);\n    if (sfGuitar) { try { sfGuitar.play(midi, 0, { duration: durSec }); } catch { playVoiceNote(c, master!, midi, durSec); } }\n    else { playVoiceNote(c, master!, midi, durSec); }\n    track(\"play_note\", { page:\"analyze\", value:midi });\n  }\n\n  function playChord(midis: number[], style: PlayStyle = \"hit\", durMs = 420){\n    const c = ensureCtx();\n    void resume();\n    if (!state.enabled) return;\n    const step = style === \"lightStrum\" ? STRUM_STEP_SEC : 0;\n    const holdSec = Math.max(0.18, durMs/1000);\n    if (sfGuitar) {\n      try {\n        midis.slice(0,6).forEach((m, i) => { sfGuitar.play(m, i*step, { duration: holdSec }); });\n      } catch { playVoiceChord(c, master!, midis, holdSec, step); }\n    } else {\n      playVoiceChord(c, master!, midis, holdSec, step);\n    }\n    track(\"play_chord\", { page:\"analyze\", value: midis.slice(0,6).join(\",\") });\n  }\n\n  // defer context/resume until first user gesture\n\n  return {\n    resume, toggleEnabled, setVolume,\n    getState: () => ({ ...state }),\n    subscribe(cb){ subs.add(cb); return () => subs.delete(cb); },\n    playNote, playChord,\n    setInstrument,\n    getInstrument: () => currentInstr,\n  };\n})() : createNoop();\n\n\n\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport const MAX_VOICES = 6;\nexport const ATTACK_SEC = 0.005;\nexport const RELEASE_SEC = 0.12;\nexport const STRUM_STEP_SEC = 0.02;\n\ntype Voice = {\n  source: OscillatorNode;\n  gain: GainNode;\n  stopAt: number;\n};\n\nconst voices: Voice[] = [];\n\ntype VoiceMode = \"sine\" | \"triangle\" | \"pluck\";\nlet VOICE_MODE: VoiceMode = \"pluck\"; // ギター風プラックを既定\nexport function setVoiceMode(mode: VoiceMode){ VOICE_MODE = mode; }\nexport function getVoiceMode(): VoiceMode { return VOICE_MODE; }\n\nfunction midiToHz(midi: number){\n  return 440 * Math.pow(2, (midi - 69) / 12);\n}\n\nfunction cleanupVoice(voice: Voice){\n  try { voice.source.onended = null; } catch {}\n  try { voice.source.disconnect(); } catch {}\n  try { voice.gain.disconnect(); } catch {}\n}\n\nfunction voiceSteal(startAt: number){\n  if (voices.length < MAX_VOICES) return;\n  voices.sort((a, b) => a.stopAt - b.stopAt);\n  const victim = voices.shift();\n  if (!victim) return;\n  try { victim.source.stop(startAt); } catch {}\n  cleanupVoice(victim);\n}\n\nfunction registerVoice(ctx: AudioContext, voice: Voice){\n  voices.push(voice);\n  voice.source.onended = () => {\n    const idx = voices.indexOf(voice);\n    if (idx >= 0) voices.splice(idx, 1);\n    cleanupVoice(voice);\n  };\n}\n\nfunction playPluckVoice(\n  ctx: AudioContext,\n  master: GainNode,\n  freqHz: number,\n  startAt: number,\n  holdSec: number,\n  peak: number,\n){\n  const period = Math.max(1/880, Math.min(1/55, 1/Math.max(1, freqHz)));\n  const noiseDur = Math.min(0.025, Math.max(0.008, ATTACK_SEC * 2));\n  const stopAt = startAt + Math.max(RELEASE_SEC + 0.02, holdSec + 0.02);\n\n  const noise = ctx.createBufferSource();\n  const buf = ctx.createBuffer(1, Math.max(1, Math.floor(ctx.sampleRate * noiseDur)), ctx.sampleRate);\n  const ch0 = buf.getChannelData(0);\n  for (let i=0;i<ch0.length;i++) ch0[i] = (Math.random()*2-1);\n  noise.buffer = buf;\n  noise.start(startAt);\n  noise.stop(startAt + noiseDur);\n\n  const delay = ctx.createDelay();\n  delay.delayTime.setValueAtTime(period, startAt);\n  const feedback = ctx.createGain();\n  feedback.gain.setValueAtTime(0.82, startAt); // 残響感（ダンピング前）\n  const damp = ctx.createBiquadFilter();\n  damp.type = \"lowpass\";\n  damp.frequency.setValueAtTime(Math.min(6000, Math.max(1200, freqHz*6)), startAt);\n  damp.Q.setValueAtTime(0.5, startAt);\n\n  // 出力用エンベロープ\n  const outGain = ctx.createGain();\n  const attackEnd = startAt + ATTACK_SEC;\n  const sustainEnd = startAt + Math.max(RELEASE_SEC, holdSec);\n  const releaseStart = Math.max(attackEnd, sustainEnd - RELEASE_SEC);\n  outGain.gain.setValueAtTime(0, startAt);\n  outGain.gain.linearRampToValueAtTime(Math.max(0.0001, peak), attackEnd);\n  outGain.gain.setValueAtTime(Math.max(0.0001, peak), releaseStart);\n  outGain.gain.linearRampToValueAtTime(0.0001, sustainEnd);\n\n  // フィードバックループ（Karplus–Strongの簡易近似）\n  noise.connect(damp);\n  damp.connect(delay);\n  delay.connect(feedback).connect(damp);\n  delay.connect(outGain).connect(master);\n\n  // 疑似オシレータとして扱うためのダミーOscillatorNode（管理用）\n  const dummyOsc = ctx.createOscillator();\n  try { dummyOsc.connect(ctx.destination); } catch {}\n  dummyOsc.start(startAt);\n  dummyOsc.stop(stopAt);\n\n  registerVoice(ctx, { source: dummyOsc, gain: outGain, stopAt: sustainEnd });\n}\n\nexport function playVoice(\n  ctx: AudioContext,\n  master: GainNode,\n  midi: number,\n  startAt: number,\n  holdSec: number,\n  peak: number = 1,\n){\n  voiceSteal(startAt);\n  const freqHz = midiToHz(midi);\n  if (VOICE_MODE === \"pluck\") {\n    playPluckVoice(ctx, master, freqHz, startAt, holdSec, peak);\n    return;\n  }\n  const osc = ctx.createOscillator();\n  const gain = ctx.createGain();\n  osc.type = (VOICE_MODE === \"triangle\") ? \"triangle\" : \"sine\";\n  osc.frequency.value = freqHz;\n\n  const attackEnd = startAt + ATTACK_SEC;\n  const sustainEnd = startAt + Math.max(RELEASE_SEC, holdSec);\n  const releaseStart = Math.max(attackEnd, sustainEnd - RELEASE_SEC);\n\n  gain.gain.setValueAtTime(0, startAt);\n  gain.gain.linearRampToValueAtTime(Math.max(0.0001, peak), attackEnd);\n  gain.gain.setValueAtTime(Math.max(0.0001, peak), releaseStart);\n  gain.gain.linearRampToValueAtTime(0.0001, sustainEnd);\n\n  osc.connect(gain).connect(master);\n  osc.start(startAt);\n  osc.stop(sustainEnd + 0.01);\n\n  registerVoice(ctx, { source: osc, gain, stopAt: sustainEnd });\n}\n\nexport function playNote(\n  ctx: AudioContext,\n  master: GainNode,\n  midi: number,\n  holdSec: number,\n){\n  const startAt = ctx.currentTime;\n  // 単音はやや控えめのピーク\n  playVoice(ctx, master, midi, startAt, holdSec, 0.7);\n}\n\nexport function playChord(\n  ctx: AudioContext,\n  master: GainNode,\n  midis: number[],\n  holdSec: number,\n  strumStepSec: number,\n){\n  const base = ctx.currentTime;\n  const n = Math.max(1, Math.min(midis.length, MAX_VOICES));\n  // 同時発音数に応じてピークを正規化（歪み防止）\n  const perVoicePeak = Math.max(0.22, Math.min(0.42, 0.95 / Math.sqrt(n)));\n  midis.forEach((midi, index) => {\n    const startAt = base + Math.max(0, strumStepSec) * index;\n    playVoice(ctx, master, midi, startAt, holdSec, perVoicePeak);\n  });\n}\n\nexport function stopAll(ctx: AudioContext){\n  voices.splice(0).forEach(voice => {\n    try { voice.source.stop(ctx.currentTime); } catch {}\n    cleanupVoice(voice);\n  });\n}\n"],"names":[],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14]}