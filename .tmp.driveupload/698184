"use strict";(()=>{var e={};e.id=2302,e.ids=[2302],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},71514:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>l,patchFetch:()=>m,requestAsyncStorage:()=>d,routeModule:()=>u,serverHooks:()=>c,staticGenerationAsyncStorage:()=>h});var a={};t.r(a),t.d(a,{POST:()=>p});var n=t(49303),i=t(88716),o=t(60670),s=t(87070);async function p(e){let{key:r,mode:t,romanLine:a,patterns:n=[],cadences:i=[]}=await e.json().catch(()=>({}))??{},o=[];return Array.isArray(n)&&n.length&&o.push(`Detected patterns: ${n.map(e=>e?.name??e?.id??"").filter(Boolean).join(", ")}.`),Array.isArray(i)&&i.length&&o.push(`Cadences: ${i.map(e=>e?.label??e?.id??"").filter(Boolean).join(", ")}.`),Array.isArray(a)&&o.push(`Roman: ${a.join(" – ")}.`),o.push(`In ${r??""} ${t??""}, consider ii–V–I or a deceptive cadence (V–vi) to extend the phrase.`),s.NextResponse.json({paragraphs:o})}let u=new n.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/roman/insight/route",pathname:"/api/roman/insight",filename:"route",bundlePath:"app/api/roman/insight/route"},resolvedPagePath:"/Users/nh/App/OtoTheory/ototheory-web/src/app/api/roman/insight/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:d,staticGenerationAsyncStorage:h,serverHooks:c}=u,l="/api/roman/insight/route";function m(){return(0,o.patchFetch)({serverHooks:c,staticGenerationAsyncStorage:h})}}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),a=r.X(0,[8948,5972],()=>t(71514));module.exports=a})();