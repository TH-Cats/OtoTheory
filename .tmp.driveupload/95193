{"version":3,"sources":["turbopack:///[project]/src/app/resources/ResourceContent.client.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport Link from 'next/link';\n\ninterface ResourceContentProps {\n  enContent: string;\n  jaContent: string;\n  backLink?: string;\n}\n\nexport default function ResourceContent({ enContent, jaContent, backLink = '/resources' }: ResourceContentProps) {\n  const [lang, setLang] = useState<'en' | 'ja'>('en');\n\n  // Simple markdown to HTML conversion\n  const convertMarkdownToHtml = (markdown: string) => {\n    let html = markdown;\n    \n    // Remove YAML frontmatter\n    html = html.replace(/^---[\\s\\S]*?---\\n/m, '');\n    \n    // Extract and process headers with anchors\n    const headerWithAnchor = /^(#{1,3})\\s+(.+?)\\s*\\{#([\\w-]+)\\}/gm;\n    html = html.replace(headerWithAnchor, (match, hashes, title, id) => {\n      const level = hashes.length;\n      const classes = level === 1 ? 'text-3xl font-bold mb-6 mt-8' :\n                     level === 2 ? 'text-2xl font-bold mt-8 mb-4 border-b pb-2' :\n                     'text-lg font-semibold mt-6 mb-3';\n      return `<h${level} class=\"${classes}\" id=\"${id}\">${title}</h${level}>`;\n    });\n    \n    // Headers without anchors\n    html = html.replace(/^### (.*)$/gm, '<h3 class=\"text-lg font-semibold mt-6 mb-3\">$1</h3>');\n    html = html.replace(/^## (.*)$/gm, '<h2 class=\"text-2xl font-bold mt-8 mb-4 border-b pb-2\">$1</h2>');\n    html = html.replace(/^# (.*)$/gm, '<h1 class=\"text-3xl font-bold mb-6\">$1</h1>');\n    \n    // Blockquotes with bold\n    html = html.replace(/^> \\*\\*(.*?)\\*\\*：(.*)$/gm, '<blockquote class=\"border-l-4 border-blue-500 pl-4 py-2 my-4 bg-blue-50 dark:bg-blue-900/20\"><strong>$1</strong>：$2</blockquote>');\n    html = html.replace(/^> \\*\\*(.*?)\\*\\*:(.*)$/gm, '<blockquote class=\"border-l-4 border-blue-500 pl-4 py-2 my-4 bg-blue-50 dark:bg-blue-900/20\"><strong>$1</strong>:$2</blockquote>');\n    html = html.replace(/^> (.*?)$/gm, '<blockquote class=\"border-l-4 border-gray-300 pl-4 py-2 my-4 text-gray-700 dark:text-gray-300\">$1</blockquote>');\n    \n    // Bold, italic, inline code\n    html = html.replace(/\\*\\*(.*?)\\*\\*/g, '<strong class=\"font-semibold\">$1</strong>');\n    html = html.replace(/\\*(.*?)\\*/g, '<em>$1</em>');\n    html = html.replace(/`(.*?)`/g, '<code class=\"px-1.5 py-0.5 bg-gray-100 dark:bg-gray-800 rounded text-sm font-mono\">$1</code>');\n    \n    // Links\n    html = html.replace(/\\[([^\\]]+)\\]\\(#([^\\)]+)\\)/g, '<a href=\"#$2\" class=\"text-blue-600 dark:text-blue-400 hover:underline\">$1</a>');\n    html = html.replace(/\\[([^\\]]+)\\]\\(([^\\)]+)\\)/g, '<a href=\"$2\" class=\"text-blue-600 dark:text-blue-400 hover:underline\">$1</a>');\n    \n    // Process line by line for lists and tables\n    const lines = html.split('\\n');\n    const processed: string[] = [];\n    let inList = false;\n    let inTable = false;\n    \n    for (let i = 0; i < lines.length; i++) {\n      const line = lines[i];\n      \n      // Table detection\n      if (line.trim().startsWith('|') && line.trim().endsWith('|')) {\n        if (!inTable) {\n          inTable = true;\n          const cells = line.split('|').filter(s => s.trim());\n          processed.push('<table class=\"w-full border-collapse my-4 text-sm\"><thead><tr>' + \n            cells.map(cell => `<th class=\"border border-gray-300 dark:border-gray-600 px-3 py-2 bg-gray-100 dark:bg-gray-800 text-left\">${cell.trim()}</th>`).join('') + \n            '</tr></thead><tbody>');\n          i++; // Skip separator line\n        } else {\n          const cells = line.split('|').filter(s => s.trim());\n          processed.push('<tr>' + \n            cells.map(cell => `<td class=\"border border-gray-300 dark:border-gray-600 px-3 py-2\">${cell.trim()}</td>`).join('') + \n            '</tr>');\n        }\n        \n        // Check if next line is not a table row\n        if (!lines[i + 1] || !lines[i + 1].trim().startsWith('|')) {\n          processed.push('</tbody></table>');\n          inTable = false;\n        }\n        continue;\n      }\n      \n      // List items\n      if (line.match(/^- /)) {\n        if (!inList) {\n          processed.push('<ul class=\"list-disc pl-6 space-y-1 mb-4\">');\n          inList = true;\n        }\n        processed.push(`<li>${line.substring(2)}</li>`);\n      } else {\n        if (inList) {\n          processed.push('</ul>');\n          inList = false;\n        }\n        \n        // Horizontal rule\n        if (line.trim() === '---') {\n          processed.push('<hr class=\"my-8 border-gray-300 dark:border-gray-600\" />');\n        }\n        // Empty lines and special tags\n        else if (line.trim() === '' || line.startsWith('<')) {\n          processed.push(line);\n        }\n        // Regular paragraphs\n        else if (line.trim() && !line.startsWith('#') && !line.startsWith('>')) {\n          processed.push(`<p class=\"mb-4 leading-relaxed\">${line}</p>`);\n        } else {\n          processed.push(line);\n        }\n      }\n    }\n    \n    if (inList) {\n      processed.push('</ul>');\n    }\n    \n    return processed.join('\\n');\n  };\n\n  const content = lang === 'en' ? enContent : jaContent;\n  const htmlContent = convertMarkdownToHtml(content);\n\n  return (\n    <div className=\"ot-page\">\n      <div className=\"mb-6 flex items-center justify-between flex-wrap gap-4\">\n        <Link href={backLink} className=\"text-sm text-blue-600 dark:text-blue-400 hover:underline\">\n          ← Back to Resources\n        </Link>\n        <div className=\"flex gap-2\">\n          <button\n            className={`px-3 py-1.5 text-sm rounded border transition-colors ${\n              lang === 'ja' \n                ? 'bg-blue-600 text-white border-blue-600' \n                : 'hover:bg-gray-100 dark:hover:bg-gray-800'\n            }`}\n            onClick={() => setLang('ja')}\n          >\n            日本語\n          </button>\n          <button\n            className={`px-3 py-1.5 text-sm rounded border transition-colors ${\n              lang === 'en' \n                ? 'bg-blue-600 text-white border-blue-600' \n                : 'hover:bg-gray-100 dark:hover:bg-gray-800'\n            }`}\n            onClick={() => setLang('en')}\n          >\n            English\n          </button>\n        </div>\n      </div>\n\n      <div \n        className=\"prose prose-sm sm:prose-base max-w-none dark:prose-invert prose-headings:scroll-mt-20 prose-a:no-underline hover:prose-a:underline\"\n        dangerouslySetInnerHTML={{ __html: htmlContent }} \n      />\n    </div>\n  );\n}\n\n\n\n\n"],"names":[],"mappings":"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"}